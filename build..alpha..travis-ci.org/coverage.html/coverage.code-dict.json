{"/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/test.js":"/* istanbul instrument in package npmtest_accessibility_developer_tools */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/lib.npmtest_accessibility_developer_tools.js":"/* istanbul instrument in package npmtest_accessibility_developer_tools */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_accessibility_developer_tools = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_accessibility_developer_tools = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-accessibility-developer-tools && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_accessibility_developer_tools */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_accessibility_developer_tools\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_accessibility_developer_tools.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_accessibility_developer_tools.rollup.js'] =\n            local.assetsDict['/assets.npmtest_accessibility_developer_tools.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_accessibility_developer_tools.__dirname + '/lib.npmtest_accessibility_developer_tools.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/main.js":"// This exposes the ./dist Javascript file for node libraries.\n// It also unwraps the main axs package so Audit and other objects are exposed\n// directly in the node library\n\nvar library = require('./dist/js/axs_testing'); // eslint-disable-line no-undef\n\nmodule.exports = library.axs; // eslint-disable-line no-undef\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/dist/js/axs_testing.js":"/*\n * Copyright 2017 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Generated from http://github.com/GoogleChrome/accessibility-developer-tools/tree/9acd1c6e3e72a39a0ec14506d68203a4e8cfafb4\n *\n * See project README for build steps.\n */\n\n// AUTO-GENERATED CONTENT BELOW: DO NOT EDIT! See above for details.\n\nvar fn = (function() {\n  var COMPILED = !0, goog = goog || {};\ngoog.global = this;\ngoog.isDef = function(a) {\n  return void 0 !== a;\n};\ngoog.exportPath_ = function(a, b, c) {\n  a = a.split(\".\");\n  c = c || goog.global;\n  a[0] in c || !c.execScript || c.execScript(\"var \" + a[0]);\n  for (var d;a.length && (d = a.shift());) {\n    !a.length && goog.isDef(b) ? c[d] = b : c = c[d] ? c[d] : c[d] = {};\n  }\n};\ngoog.define = function(a, b) {\n  var c = b;\n  COMPILED || (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, a) ? c = goog.global.CLOSURE_UNCOMPILED_DEFINES[a] : goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, a) && (c = goog.global.CLOSURE_DEFINES[a]));\n  goog.exportPath_(a, c);\n};\ngoog.DEBUG = !0;\ngoog.LOCALE = \"en\";\ngoog.TRUSTED_SITE = !0;\ngoog.STRICT_MODE_COMPATIBLE = !1;\ngoog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;\ngoog.provide = function(a) {\n  if (goog.isInModuleLoader_()) {\n    throw Error(\"goog.provide can not be used within a goog.module.\");\n  }\n  if (!COMPILED && goog.isProvided_(a)) {\n    throw Error('Namespace \"' + a + '\" already declared.');\n  }\n  goog.constructNamespace_(a);\n};\ngoog.constructNamespace_ = function(a, b) {\n  if (!COMPILED) {\n    delete goog.implicitNamespaces_[a];\n    for (var c = a;(c = c.substring(0, c.lastIndexOf(\".\"))) && !goog.getObjectByName(c);) {\n      goog.implicitNamespaces_[c] = !0;\n    }\n  }\n  goog.exportPath_(a, b);\n};\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\ngoog.module = function(a) {\n  if (!goog.isString(a) || !a || -1 == a.search(goog.VALID_MODULE_RE_)) {\n    throw Error(\"Invalid module identifier\");\n  }\n  if (!goog.isInModuleLoader_()) {\n    throw Error(\"Module \" + a + \" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.\");\n  }\n  if (goog.moduleLoaderState_.moduleName) {\n    throw Error(\"goog.module may only be called once per module.\");\n  }\n  goog.moduleLoaderState_.moduleName = a;\n  if (!COMPILED) {\n    if (goog.isProvided_(a)) {\n      throw Error('Namespace \"' + a + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[a];\n  }\n};\ngoog.module.get = function(a) {\n  return goog.module.getInternal_(a);\n};\ngoog.module.getInternal_ = function(a) {\n  if (!COMPILED) {\n    if (a in goog.loadedModules_) {\n      return goog.loadedModules_[a];\n    }\n    if (!goog.implicitNamespaces_[a]) {\n      return a = goog.getObjectByName(a), null != a ? a : null;\n    }\n  }\n  return null;\n};\ngoog.moduleLoaderState_ = null;\ngoog.isInModuleLoader_ = function() {\n  return null != goog.moduleLoaderState_;\n};\ngoog.module.declareLegacyNamespace = function() {\n  if (!COMPILED && !goog.isInModuleLoader_()) {\n    throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");\n  }\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {\n    throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");\n  }\n  goog.moduleLoaderState_.declareLegacyNamespace = !0;\n};\ngoog.setTestOnly = function(a) {\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\n    throw a = a || \"\", Error(\"Importing test-only code into non-debug environment\" + (a ? \": \" + a : \".\"));\n  }\n};\ngoog.forwardDeclare = function(a) {\n};\nCOMPILED || (goog.isProvided_ = function(a) {\n  return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a));\n}, goog.implicitNamespaces_ = {\"goog.module\":!0});\ngoog.getObjectByName = function(a, b) {\n  for (var c = a.split(\".\"), d = b || goog.global, e;e = c.shift();) {\n    if (goog.isDefAndNotNull(d[e])) {\n      d = d[e];\n    } else {\n      return null;\n    }\n  }\n  return d;\n};\ngoog.globalize = function(a, b) {\n  var c = b || goog.global, d;\n  for (d in a) {\n    c[d] = a[d];\n  }\n};\ngoog.addDependency = function(a, b, c, d) {\n  if (goog.DEPENDENCIES_ENABLED) {\n    var e;\n    a = a.replace(/\\\\/g, \"/\");\n    var f = goog.dependencies_;\n    d && \"boolean\" !== typeof d || (d = d ? {module:\"goog\"} : {});\n    for (var g = 0;e = b[g];g++) {\n      f.nameToPath[e] = a, f.loadFlags[a] = d;\n    }\n    for (d = 0;b = c[d];d++) {\n      a in f.requires || (f.requires[a] = {}), f.requires[a][b] = !0;\n    }\n  }\n};\ngoog.ENABLE_DEBUG_LOADER = !0;\ngoog.logToConsole_ = function(a) {\n  goog.global.console && goog.global.console.error(a);\n};\ngoog.require = function(a) {\n  if (!COMPILED) {\n    goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_ && goog.maybeProcessDeferredDep_(a);\n    if (goog.isProvided_(a)) {\n      if (goog.isInModuleLoader_()) {\n        return goog.module.getInternal_(a);\n      }\n    } else {\n      if (goog.ENABLE_DEBUG_LOADER) {\n        var b = goog.getPathFromDeps_(a);\n        if (b) {\n          goog.writeScripts_(b);\n        } else {\n          throw a = \"goog.require could not find: \" + a, goog.logToConsole_(a), Error(a);\n        }\n      }\n    }\n    return null;\n  }\n};\ngoog.basePath = \"\";\ngoog.nullFunction = function() {\n};\ngoog.abstractMethod = function() {\n  throw Error(\"unimplemented abstract method\");\n};\ngoog.addSingletonGetter = function(a) {\n  a.getInstance = function() {\n    if (a.instance_) {\n      return a.instance_;\n    }\n    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);\n    return a.instance_ = new a;\n  };\n};\ngoog.instantiatedSingletons_ = [];\ngoog.LOAD_MODULE_USING_EVAL = !0;\ngoog.SEAL_MODULE_EXPORTS = goog.DEBUG;\ngoog.loadedModules_ = {};\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\ngoog.TRANSPILE = \"detect\";\ngoog.TRANSPILER = \"transpile.js\";\ngoog.DEPENDENCIES_ENABLED && (goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}}, goog.inHtmlDocument_ = function() {\n  var a = goog.global.document;\n  return null != a && \"write\" in a;\n}, goog.findBasePath_ = function() {\n  if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {\n    goog.basePath = goog.global.CLOSURE_BASE_PATH;\n  } else {\n    if (goog.inHtmlDocument_()) {\n      for (var a = goog.global.document.getElementsByTagName(\"SCRIPT\"), b = a.length - 1;0 <= b;--b) {\n        var c = a[b].src, d = c.lastIndexOf(\"?\"), d = -1 == d ? c.length : d;\n        if (\"base.js\" == c.substr(d - 7, 7)) {\n          goog.basePath = c.substr(0, d - 7);\n          break;\n        }\n      }\n    }\n  }\n}, goog.importScript_ = function(a, b) {\n  (goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_)(a, b) && (goog.dependencies_.written[a] = !0);\n}, goog.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.importProcessedScript_ = function(a, b, c) {\n  goog.importScript_(\"\", 'goog.retrieveAndExec_(\"' + a + '\", ' + b + \", \" + c + \");\");\n}, goog.queuedModules_ = [], goog.wrapModule_ = function(a, b) {\n  return goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? \"goog.loadModule(\" + goog.global.JSON.stringify(b + \"\\n//# sourceURL=\" + a + \"\\n\") + \");\" : 'goog.loadModule(function(exports) {\"use strict\";' + b + \"\\n;return exports});\\n//# sourceURL=\" + a + \"\\n\";\n}, goog.loadQueuedModules_ = function() {\n  var a = goog.queuedModules_.length;\n  if (0 < a) {\n    var b = goog.queuedModules_;\n    goog.queuedModules_ = [];\n    for (var c = 0;c < a;c++) {\n      goog.maybeProcessDeferredPath_(b[c]);\n    }\n  }\n}, goog.maybeProcessDeferredDep_ = function(a) {\n  goog.isDeferredModule_(a) && goog.allDepsAreAvailable_(a) && (a = goog.getPathFromDeps_(a), goog.maybeProcessDeferredPath_(goog.basePath + a));\n}, goog.isDeferredModule_ = function(a) {\n  var b = (a = goog.getPathFromDeps_(a)) && goog.dependencies_.loadFlags[a] || {}, c = b.lang || \"es3\";\n  return a && (\"goog\" == b.module || goog.needsTranspile_(c)) ? goog.basePath + a in goog.dependencies_.deferred : !1;\n}, goog.allDepsAreAvailable_ = function(a) {\n  if ((a = goog.getPathFromDeps_(a)) && a in goog.dependencies_.requires) {\n    for (var b in goog.dependencies_.requires[a]) {\n      if (!goog.isProvided_(b) && !goog.isDeferredModule_(b)) {\n        return !1;\n      }\n    }\n  }\n  return !0;\n}, goog.maybeProcessDeferredPath_ = function(a) {\n  if (a in goog.dependencies_.deferred) {\n    var b = goog.dependencies_.deferred[a];\n    delete goog.dependencies_.deferred[a];\n    goog.globalEval(b);\n  }\n}, goog.loadModuleFromUrl = function(a) {\n  goog.retrieveAndExec_(a, !0, !1);\n}, goog.writeScriptSrcNode_ = function(a) {\n  goog.global.document.write('<script type=\"text/javascript\" src=\"' + a + '\">\\x3c/script>');\n}, goog.appendScriptSrcNode_ = function(a) {\n  var b = goog.global.document, c = b.createElement(\"script\");\n  c.type = \"text/javascript\";\n  c.src = a;\n  c.defer = !1;\n  c.async = !1;\n  b.head.appendChild(c);\n}, goog.writeScriptTag_ = function(a, b) {\n  if (goog.inHtmlDocument_()) {\n    var c = goog.global.document;\n    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && \"complete\" == c.readyState) {\n      if (/\\bdeps.js$/.test(a)) {\n        return !1;\n      }\n      throw Error('Cannot write \"' + a + '\" after document load');\n    }\n    if (void 0 === b) {\n      if (goog.IS_OLD_IE_) {\n        var d = \" onreadystatechange='goog.onScriptLoad_(this, \" + ++goog.lastNonModuleScriptIndex_ + \")' \";\n        c.write('<script type=\"text/javascript\" src=\"' + a + '\"' + d + \">\\x3c/script>\");\n      } else {\n        goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING ? goog.appendScriptSrcNode_(a) : goog.writeScriptSrcNode_(a);\n      }\n    } else {\n      c.write('<script type=\"text/javascript\">' + goog.protectScriptTag_(b) + \"\\x3c/script>\");\n    }\n    return !0;\n  }\n  return !1;\n}, goog.protectScriptTag_ = function(a) {\n  return a.replace(/<\\/(SCRIPT)/ig, \"\\\\x3c\\\\$1\");\n}, goog.needsTranspile_ = function(a) {\n  if (\"always\" == goog.TRANSPILE) {\n    return !0;\n  }\n  if (\"never\" == goog.TRANSPILE) {\n    return !1;\n  }\n  goog.requiresTranspilation_ || (goog.requiresTranspilation_ = goog.createRequiresTranspilation_());\n  if (a in goog.requiresTranspilation_) {\n    return goog.requiresTranspilation_[a];\n  }\n  throw Error(\"Unknown language mode: \" + a);\n}, goog.requiresTranspilation_ = null, goog.lastNonModuleScriptIndex_ = 0, goog.onScriptLoad_ = function(a, b) {\n  \"complete\" == a.readyState && goog.lastNonModuleScriptIndex_ == b && goog.loadQueuedModules_();\n  return !0;\n}, goog.writeScripts_ = function(a) {\n  function b(a) {\n    if (!(a in e.written || a in e.visited)) {\n      e.visited[a] = !0;\n      if (a in e.requires) {\n        for (var f in e.requires[a]) {\n          if (!goog.isProvided_(f)) {\n            if (f in e.nameToPath) {\n              b(e.nameToPath[f]);\n            } else {\n              throw Error(\"Undefined nameToPath for \" + f);\n            }\n          }\n        }\n      }\n      a in d || (d[a] = !0, c.push(a));\n    }\n  }\n  var c = [], d = {}, e = goog.dependencies_;\n  b(a);\n  for (a = 0;a < c.length;a++) {\n    var f = c[a];\n    goog.dependencies_.written[f] = !0;\n  }\n  var g = goog.moduleLoaderState_;\n  goog.moduleLoaderState_ = null;\n  for (a = 0;a < c.length;a++) {\n    if (f = c[a]) {\n      var h = e.loadFlags[f] || {}, k = goog.needsTranspile_(h.lang || \"es3\");\n      \"goog\" == h.module || k ? goog.importProcessedScript_(goog.basePath + f, \"goog\" == h.module, k) : goog.importScript_(goog.basePath + f);\n    } else {\n      throw goog.moduleLoaderState_ = g, Error(\"Undefined script input\");\n    }\n  }\n  goog.moduleLoaderState_ = g;\n}, goog.getPathFromDeps_ = function(a) {\n  return a in goog.dependencies_.nameToPath ? goog.dependencies_.nameToPath[a] : null;\n}, goog.findBasePath_(), goog.global.CLOSURE_NO_DEPS || goog.importScript_(goog.basePath + \"deps.js\"));\ngoog.loadModule = function(a) {\n  var b = goog.moduleLoaderState_;\n  try {\n    goog.moduleLoaderState_ = {moduleName:void 0, declareLegacyNamespace:!1};\n    var c;\n    if (goog.isFunction(a)) {\n      c = a.call(void 0, {});\n    } else {\n      if (goog.isString(a)) {\n        c = goog.loadModuleFromSource_.call(void 0, a);\n      } else {\n        throw Error(\"Invalid module definition\");\n      }\n    }\n    var d = goog.moduleLoaderState_.moduleName;\n    if (!goog.isString(d) || !d) {\n      throw Error('Invalid module name \"' + d + '\"');\n    }\n    goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(d, c) : goog.SEAL_MODULE_EXPORTS && Object.seal && goog.isObject(c) && Object.seal(c);\n    goog.loadedModules_[d] = c;\n  } finally {\n    goog.moduleLoaderState_ = b;\n  }\n};\ngoog.loadModuleFromSource_ = function(a) {\n  eval(a);\n  return {};\n};\ngoog.normalizePath_ = function(a) {\n  a = a.split(\"/\");\n  for (var b = 0;b < a.length;) {\n    \".\" == a[b] ? a.splice(b, 1) : b && \"..\" == a[b] && a[b - 1] && \"..\" != a[b - 1] ? a.splice(--b, 2) : b++;\n  }\n  return a.join(\"/\");\n};\ngoog.loadFileSync_ = function(a) {\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(a);\n  }\n  try {\n    var b = new goog.global.XMLHttpRequest;\n    b.open(\"get\", a, !1);\n    b.send();\n    return 0 == b.status || 200 == b.status ? b.responseText : null;\n  } catch (c) {\n    return null;\n  }\n};\ngoog.retrieveAndExec_ = function(a, b, c) {\n  if (!COMPILED) {\n    var d = a;\n    a = goog.normalizePath_(a);\n    var e = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_, f = goog.loadFileSync_(a);\n    if (null == f) {\n      throw Error('Load of \"' + a + '\" failed');\n    }\n    c && (f = goog.transpile_.call(goog.global, f, a));\n    f = b ? goog.wrapModule_(a, f) : f + (\"\\n//# sourceURL=\" + a);\n    goog.IS_OLD_IE_ ? (goog.dependencies_.deferred[d] = f, goog.queuedModules_.push(d)) : e(a, f);\n  }\n};\ngoog.transpile_ = function(a, b) {\n  var c = goog.global.$jscomp;\n  c || (goog.global.$jscomp = c = {});\n  var d = c.transpile;\n  if (!d) {\n    var e = goog.basePath + goog.TRANSPILER, f = goog.loadFileSync_(e);\n    if (f) {\n      eval(f + \"\\n//# sourceURL=\" + e);\n      if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) {\n        throw Error('The transpiler did not properly export the \"transpile\" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));\n      }\n      goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;\n      c = goog.global.$jscomp;\n      d = c.transpile;\n    }\n  }\n  d || (d = c.transpile = function(a, b) {\n    goog.logToConsole_(b + \" requires transpilation but no transpiler was found.\");\n    return a;\n  });\n  return d(a, b);\n};\ngoog.typeOf = function(a) {\n  var b = typeof a;\n  if (\"object\" == b) {\n    if (a) {\n      if (a instanceof Array) {\n        return \"array\";\n      }\n      if (a instanceof Object) {\n        return b;\n      }\n      var c = Object.prototype.toString.call(a);\n      if (\"[object Window]\" == c) {\n        return \"object\";\n      }\n      if (\"[object Array]\" == c || \"number\" == typeof a.length && \"undefined\" != typeof a.splice && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"splice\")) {\n        return \"array\";\n      }\n      if (\"[object Function]\" == c || \"undefined\" != typeof a.call && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"call\")) {\n        return \"function\";\n      }\n    } else {\n      return \"null\";\n    }\n  } else {\n    if (\"function\" == b && \"undefined\" == typeof a.call) {\n      return \"object\";\n    }\n  }\n  return b;\n};\ngoog.isNull = function(a) {\n  return null === a;\n};\ngoog.isDefAndNotNull = function(a) {\n  return null != a;\n};\ngoog.isArray = function(a) {\n  return \"array\" == goog.typeOf(a);\n};\ngoog.isArrayLike = function(a) {\n  var b = goog.typeOf(a);\n  return \"array\" == b || \"object\" == b && \"number\" == typeof a.length;\n};\ngoog.isDateLike = function(a) {\n  return goog.isObject(a) && \"function\" == typeof a.getFullYear;\n};\ngoog.isString = function(a) {\n  return \"string\" == typeof a;\n};\ngoog.isBoolean = function(a) {\n  return \"boolean\" == typeof a;\n};\ngoog.isNumber = function(a) {\n  return \"number\" == typeof a;\n};\ngoog.isFunction = function(a) {\n  return \"function\" == goog.typeOf(a);\n};\ngoog.isObject = function(a) {\n  var b = typeof a;\n  return \"object\" == b && null != a || \"function\" == b;\n};\ngoog.getUid = function(a) {\n  return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);\n};\ngoog.hasUid = function(a) {\n  return !!a[goog.UID_PROPERTY_];\n};\ngoog.removeUid = function(a) {\n  null !== a && \"removeAttribute\" in a && a.removeAttribute(goog.UID_PROPERTY_);\n  try {\n    delete a[goog.UID_PROPERTY_];\n  } catch (b) {\n  }\n};\ngoog.UID_PROPERTY_ = \"closure_uid_\" + (1E9 * Math.random() >>> 0);\ngoog.uidCounter_ = 0;\ngoog.getHashCode = goog.getUid;\ngoog.removeHashCode = goog.removeUid;\ngoog.cloneObject = function(a) {\n  var b = goog.typeOf(a);\n  if (\"object\" == b || \"array\" == b) {\n    if (a.clone) {\n      return a.clone();\n    }\n    var b = \"array\" == b ? [] : {}, c;\n    for (c in a) {\n      b[c] = goog.cloneObject(a[c]);\n    }\n    return b;\n  }\n  return a;\n};\ngoog.bindNative_ = function(a, b, c) {\n  return a.call.apply(a.bind, arguments);\n};\ngoog.bindJs_ = function(a, b, c) {\n  if (!a) {\n    throw Error();\n  }\n  if (2 < arguments.length) {\n    var d = Array.prototype.slice.call(arguments, 2);\n    return function() {\n      var c = Array.prototype.slice.call(arguments);\n      Array.prototype.unshift.apply(c, d);\n      return a.apply(b, c);\n    };\n  }\n  return function() {\n    return a.apply(b, arguments);\n  };\n};\ngoog.bind = function(a, b, c) {\n  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;\n  return goog.bind.apply(null, arguments);\n};\ngoog.partial = function(a, b) {\n  var c = Array.prototype.slice.call(arguments, 1);\n  return function() {\n    var b = c.slice();\n    b.push.apply(b, arguments);\n    return a.apply(this, b);\n  };\n};\ngoog.mixin = function(a, b) {\n  for (var c in b) {\n    a[c] = b[c];\n  }\n};\ngoog.now = goog.TRUSTED_SITE && Date.now || function() {\n  return +new Date;\n};\ngoog.globalEval = function(a) {\n  if (goog.global.execScript) {\n    goog.global.execScript(a, \"JavaScript\");\n  } else {\n    if (goog.global.eval) {\n      if (null == goog.evalWorksForGlobals_) {\n        if (goog.global.eval(\"var _evalTest_ = 1;\"), \"undefined\" != typeof goog.global._evalTest_) {\n          try {\n            delete goog.global._evalTest_;\n          } catch (d) {\n          }\n          goog.evalWorksForGlobals_ = !0;\n        } else {\n          goog.evalWorksForGlobals_ = !1;\n        }\n      }\n      if (goog.evalWorksForGlobals_) {\n        goog.global.eval(a);\n      } else {\n        var b = goog.global.document, c = b.createElement(\"SCRIPT\");\n        c.type = \"text/javascript\";\n        c.defer = !1;\n        c.appendChild(b.createTextNode(a));\n        b.body.appendChild(c);\n        b.body.removeChild(c);\n      }\n    } else {\n      throw Error(\"goog.globalEval not available\");\n    }\n  }\n};\ngoog.evalWorksForGlobals_ = null;\ngoog.getCssName = function(a, b) {\n  if (\".\" == String(a).charAt(0)) {\n    throw Error('className passed in goog.getCssName must not start with \".\". You passed: ' + a);\n  }\n  var c = function(a) {\n    return goog.cssNameMapping_[a] || a;\n  }, d = function(a) {\n    a = a.split(\"-\");\n    for (var b = [], d = 0;d < a.length;d++) {\n      b.push(c(a[d]));\n    }\n    return b.join(\"-\");\n  }, d = goog.cssNameMapping_ ? \"BY_WHOLE\" == goog.cssNameMappingStyle_ ? c : d : function(a) {\n    return a;\n  }, d = b ? a + \"-\" + d(b) : d(a);\n  return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(d) : d;\n};\ngoog.setCssNameMapping = function(a, b) {\n  goog.cssNameMapping_ = a;\n  goog.cssNameMappingStyle_ = b;\n};\n!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);\ngoog.getMsg = function(a, b) {\n  b && (a = a.replace(/\\{\\$([^}]+)}/g, function(a, d) {\n    return null != b && d in b ? b[d] : a;\n  }));\n  return a;\n};\ngoog.getMsgWithFallback = function(a, b) {\n  return a;\n};\ngoog.exportSymbol = function(a, b, c) {\n  goog.exportPath_(a, b, c);\n};\ngoog.exportProperty = function(a, b, c) {\n  a[b] = c;\n};\ngoog.inherits = function(a, b) {\n  function c() {\n  }\n  c.prototype = b.prototype;\n  a.superClass_ = b.prototype;\n  a.prototype = new c;\n  a.prototype.constructor = a;\n  a.base = function(a, c, f) {\n    for (var d = Array(arguments.length - 2), e = 2;e < arguments.length;e++) {\n      d[e - 2] = arguments[e];\n    }\n    return b.prototype[c].apply(a, d);\n  };\n};\ngoog.base = function(a, b, c) {\n  var d = arguments.callee.caller;\n  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d) {\n    throw Error(\"arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C\");\n  }\n  if (d.superClass_) {\n    for (var e = Array(arguments.length - 1), f = 1;f < arguments.length;f++) {\n      e[f - 1] = arguments[f];\n    }\n    return d.superClass_.constructor.apply(a, e);\n  }\n  e = Array(arguments.length - 2);\n  for (f = 2;f < arguments.length;f++) {\n    e[f - 2] = arguments[f];\n  }\n  for (var f = !1, g = a.constructor;g;g = g.superClass_ && g.superClass_.constructor) {\n    if (g.prototype[b] === d) {\n      f = !0;\n    } else {\n      if (f) {\n        return g.prototype[b].apply(a, e);\n      }\n    }\n  }\n  if (a[b] === d) {\n    return a.constructor.prototype[b].apply(a, e);\n  }\n  throw Error(\"goog.base called from a method of one name to a method of a different name\");\n};\ngoog.scope = function(a) {\n  if (goog.isInModuleLoader_()) {\n    throw Error(\"goog.scope is not supported within a goog.module.\");\n  }\n  a.call(goog.global);\n};\nCOMPILED || (goog.global.COMPILED = COMPILED);\ngoog.defineClass = function(a, b) {\n  var c = b.constructor, d = b.statics;\n  c && c != Object.prototype.constructor || (c = function() {\n    throw Error(\"cannot instantiate an interface (no constructor defined).\");\n  });\n  c = goog.defineClass.createSealingConstructor_(c, a);\n  a && goog.inherits(c, a);\n  delete b.constructor;\n  delete b.statics;\n  goog.defineClass.applyProperties_(c.prototype, b);\n  null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));\n  return c;\n};\ngoog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;\ngoog.defineClass.createSealingConstructor_ = function(a, b) {\n  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {\n    return a;\n  }\n  var c = !goog.defineClass.isUnsealable_(b), d = function() {\n    var b = a.apply(this, arguments) || this;\n    b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_];\n    this.constructor === d && c && Object.seal instanceof Function && Object.seal(b);\n    return b;\n  };\n  return d;\n};\ngoog.defineClass.isUnsealable_ = function(a) {\n  return a && a.prototype && a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];\n};\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\ngoog.defineClass.applyProperties_ = function(a, b) {\n  for (var c in b) {\n    Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);\n  }\n  for (var d = 0;d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++) {\n    c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);\n  }\n};\ngoog.tagUnsealableClass = function(a) {\n  !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0);\n};\ngoog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = \"goog_defineClass_legacy_unsealable\";\ngoog.createRequiresTranspilation_ = function() {\n  function a(a, b) {\n    d ? c[a] = !0 : b() ? c[a] = !1 : d = c[a] = !0;\n  }\n  function b(a) {\n    try {\n      return !!eval(a);\n    } catch (f) {\n      return !1;\n    }\n  }\n  var c = {es3:!1}, d = !1;\n  a(\"es5\", function() {\n    return b(\"[1,].length==1\");\n  });\n  a(\"es6\", function() {\n    return b('(()=>{\"use strict\";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()');\n  });\n  a(\"es6-impl\", function() {\n    return !0;\n  });\n  a(\"es7\", function() {\n    return b(\"2 ** 2 == 4\");\n  });\n  a(\"es8\", function() {\n    return b(\"async () => 1, true\");\n  });\n  return c;\n};\nvar axs = {};\naxs.browserUtils = {};\naxs.browserUtils.matchSelector = function(a, b) {\n  return a.matches ? a.matches(b) : a.webkitMatchesSelector ? a.webkitMatchesSelector(b) : a.mozMatchesSelector ? a.mozMatchesSelector(b) : a.msMatchesSelector ? a.msMatchesSelector(b) : !1;\n};\naxs.color = {};\naxs.color.Color = function(a, b, c, d) {\n  this.red = a;\n  this.green = b;\n  this.blue = c;\n  this.alpha = d;\n};\naxs.color.YCbCr = function(a) {\n  this.luma = this.z = a[0];\n  this.Cb = this.x = a[1];\n  this.Cr = this.y = a[2];\n};\naxs.color.YCbCr.prototype = {multiply:function(a) {\n  return new axs.color.YCbCr([this.luma * a, this.Cb * a, this.Cr * a]);\n}, add:function(a) {\n  return new axs.color.YCbCr([this.luma + a.luma, this.Cb + a.Cb, this.Cr + a.Cr]);\n}, subtract:function(a) {\n  return new axs.color.YCbCr([this.luma - a.luma, this.Cb - a.Cb, this.Cr - a.Cr]);\n}};\naxs.color.calculateContrastRatio = function(a, b) {\n  1 > a.alpha && (a = axs.color.flattenColors(a, b));\n  var c = axs.color.calculateLuminance(a), d = axs.color.calculateLuminance(b);\n  return (Math.max(c, d) + .05) / (Math.min(c, d) + .05);\n};\naxs.color.calculateLuminance = function(a) {\n  return axs.color.toYCbCr(a).luma;\n};\naxs.color.luminanceRatio = function(a, b) {\n  return (Math.max(a, b) + .05) / (Math.min(a, b) + .05);\n};\naxs.color.parseColor = function(a) {\n  if (\"transparent\" === a) {\n    return new axs.color.Color(0, 0, 0, 0);\n  }\n  var b = a.match(/^rgb\\((\\d+), (\\d+), (\\d+)\\)$/);\n  if (b) {\n    a = parseInt(b[1], 10);\n    var c = parseInt(b[2], 10), d = parseInt(b[3], 10);\n    return new axs.color.Color(a, c, d, 1);\n  }\n  return (b = a.match(/^rgba\\((\\d+), (\\d+), (\\d+), (\\d*(\\.\\d+)?)\\)/)) ? (a = parseInt(b[1], 10), c = parseInt(b[2], 10), d = parseInt(b[3], 10), b = parseFloat(b[4]), new axs.color.Color(a, c, d, b)) : null;\n};\naxs.color.colorChannelToString = function(a) {\n  a = Math.round(a);\n  return 15 >= a ? \"0\" + a.toString(16) : a.toString(16);\n};\naxs.color.colorToString = function(a) {\n  return 1 == a.alpha ? \"#\" + axs.color.colorChannelToString(a.red) + axs.color.colorChannelToString(a.green) + axs.color.colorChannelToString(a.blue) : \"rgba(\" + [a.red, a.green, a.blue, a.alpha].join() + \")\";\n};\naxs.color.luminanceFromContrastRatio = function(a, b, c) {\n  return c ? (a + .05) * b - .05 : (a + .05) / b - .05;\n};\naxs.color.translateColor = function(a, b) {\n  for (var c = b > a.luma ? axs.color.WHITE_YCC : axs.color.BLACK_YCC, d = c == axs.color.WHITE_YCC ? axs.color.YCC_CUBE_FACES_WHITE : axs.color.YCC_CUBE_FACES_BLACK, e = new axs.color.YCbCr([0, a.Cb, a.Cr]), f = new axs.color.YCbCr([1, a.Cb, a.Cr]), f = {a:e, b:f}, e = null, g = 0;g < d.length && !(e = axs.color.findIntersection(f, d[g]), 0 <= e.z && 1 >= e.z);g++) {\n  }\n  if (!e) {\n    throw \"Couldn't find intersection with YCbCr color cube for Cb=\" + a.Cb + \", Cr=\" + a.Cr + \".\";\n  }\n  if (e.x != a.x || e.y != a.y) {\n    throw \"Intersection has wrong Cb/Cr values.\";\n  }\n  if (Math.abs(c.luma - e.luma) < Math.abs(c.luma - b)) {\n    return c = [b, a.Cb, a.Cr], axs.color.fromYCbCrArray(c);\n  }\n  c = (b - e.luma) / (c.luma - e.luma);\n  c = [b, e.Cb - e.Cb * c, e.Cr - e.Cr * c];\n  return axs.color.fromYCbCrArray(c);\n};\naxs.color.suggestColors = function(a, b, c) {\n  var d = {}, e = axs.color.calculateLuminance(a), f = axs.color.calculateLuminance(b), g = f > e, h = axs.color.toYCbCr(b), k = axs.color.toYCbCr(a), m;\n  for (m in c) {\n    var l = c[m], n = axs.color.luminanceFromContrastRatio(e, l + .02, g);\n    if (1 >= n && 0 <= n) {\n      var p = axs.color.translateColor(h, n), l = axs.color.calculateContrastRatio(p, a), n = {};\n      n.fg = axs.color.colorToString(p);\n      n.bg = axs.color.colorToString(a);\n      n.contrast = l.toFixed(2);\n      d[m] = n;\n    } else {\n      l = axs.color.luminanceFromContrastRatio(f, l + .02, !g), 1 >= l && 0 <= l && (p = axs.color.translateColor(k, l), l = axs.color.calculateContrastRatio(b, p), n = {}, n.bg = axs.color.colorToString(p), n.fg = axs.color.colorToString(b), n.contrast = l.toFixed(2), d[m] = n);\n    }\n  }\n  return d;\n};\naxs.color.flattenColors = function(a, b) {\n  var c = a.alpha;\n  return new axs.color.Color((1 - c) * b.red + c * a.red, (1 - c) * b.green + c * a.green, (1 - c) * b.blue + c * a.blue, a.alpha + b.alpha * (1 - a.alpha));\n};\naxs.color.multiplyMatrixVector = function(a, b) {\n  var c = b[0], d = b[1], e = b[2];\n  return [a[0][0] * c + a[0][1] * d + a[0][2] * e, a[1][0] * c + a[1][1] * d + a[1][2] * e, a[2][0] * c + a[2][1] * d + a[2][2] * e];\n};\naxs.color.toYCbCr = function(a) {\n  var b = a.red / 255, c = a.green / 255;\n  a = a.blue / 255;\n  return new axs.color.YCbCr(axs.color.multiplyMatrixVector(axs.color.YCC_MATRIX, [.03928 >= b ? b / 12.92 : Math.pow((b + .055) / 1.055, 2.4), .03928 >= c ? c / 12.92 : Math.pow((c + .055) / 1.055, 2.4), .03928 >= a ? a / 12.92 : Math.pow((a + .055) / 1.055, 2.4)]));\n};\naxs.color.fromYCbCr = function(a) {\n  return axs.color.fromYCbCrArray([a.luma, a.Cb, a.Cr]);\n};\naxs.color.fromYCbCrArray = function(a) {\n  var b = axs.color.multiplyMatrixVector(axs.color.INVERTED_YCC_MATRIX, a);\n  a = b[0];\n  var c = b[1], b = b[2];\n  return new axs.color.Color(Math.min(Math.max(Math.round(255 * (.00303949 >= a ? 12.92 * a : 1.055 * Math.pow(a, 1 / 2.4) - .055)), 0), 255), Math.min(Math.max(Math.round(255 * (.00303949 >= c ? 12.92 * c : 1.055 * Math.pow(c, 1 / 2.4) - .055)), 0), 255), Math.min(Math.max(Math.round(255 * (.00303949 >= b ? 12.92 * b : 1.055 * Math.pow(b, 1 / 2.4) - .055)), 0), 255), 1);\n};\naxs.color.RGBToYCbCrMatrix = function(a, b) {\n  return [[a, 1 - a - b, b], [-a / (2 - 2 * b), (a + b - 1) / (2 - 2 * b), (1 - b) / (2 - 2 * b)], [(1 - a) / (2 - 2 * a), (a + b - 1) / (2 - 2 * a), -b / (2 - 2 * a)]];\n};\naxs.color.invert3x3Matrix = function(a) {\n  var b = a[0][0], c = a[0][1], d = a[0][2], e = a[1][0], f = a[1][1], g = a[1][2], h = a[2][0], k = a[2][1];\n  a = a[2][2];\n  return axs.color.scalarMultiplyMatrix([[f * a - g * k, d * k - c * a, c * g - d * f], [g * h - e * a, b * a - d * h, d * e - b * g], [e * k - f * h, h * c - b * k, b * f - c * e]], 1 / (b * (f * a - g * k) - c * (a * e - g * h) + d * (e * k - f * h)));\n};\naxs.color.findIntersection = function(a, b) {\n  var c = [a.a.x - b.p0.x, a.a.y - b.p0.y, a.a.z - b.p0.z], d = axs.color.invert3x3Matrix([[a.a.x - a.b.x, b.p1.x - b.p0.x, b.p2.x - b.p0.x], [a.a.y - a.b.y, b.p1.y - b.p0.y, b.p2.y - b.p0.y], [a.a.z - a.b.z, b.p1.z - b.p0.z, b.p2.z - b.p0.z]]), c = axs.color.multiplyMatrixVector(d, c)[0];\n  return a.a.add(a.b.subtract(a.a).multiply(c));\n};\naxs.color.scalarMultiplyMatrix = function(a, b) {\n  for (var c = [], d = 0;3 > d;d++) {\n    c[d] = axs.color.scalarMultiplyVector(a[d], b);\n  }\n  return c;\n};\naxs.color.scalarMultiplyVector = function(a, b) {\n  for (var c = [], d = 0;d < a.length;d++) {\n    c[d] = a[d] * b;\n  }\n  return c;\n};\naxs.color.kR = .2126;\naxs.color.kB = .0722;\naxs.color.YCC_MATRIX = axs.color.RGBToYCbCrMatrix(axs.color.kR, axs.color.kB);\naxs.color.INVERTED_YCC_MATRIX = axs.color.invert3x3Matrix(axs.color.YCC_MATRIX);\naxs.color.BLACK = new axs.color.Color(0, 0, 0, 1);\naxs.color.BLACK_YCC = axs.color.toYCbCr(axs.color.BLACK);\naxs.color.WHITE = new axs.color.Color(255, 255, 255, 1);\naxs.color.WHITE_YCC = axs.color.toYCbCr(axs.color.WHITE);\naxs.color.RED = new axs.color.Color(255, 0, 0, 1);\naxs.color.RED_YCC = axs.color.toYCbCr(axs.color.RED);\naxs.color.GREEN = new axs.color.Color(0, 255, 0, 1);\naxs.color.GREEN_YCC = axs.color.toYCbCr(axs.color.GREEN);\naxs.color.BLUE = new axs.color.Color(0, 0, 255, 1);\naxs.color.BLUE_YCC = axs.color.toYCbCr(axs.color.BLUE);\naxs.color.CYAN = new axs.color.Color(0, 255, 255, 1);\naxs.color.CYAN_YCC = axs.color.toYCbCr(axs.color.CYAN);\naxs.color.MAGENTA = new axs.color.Color(255, 0, 255, 1);\naxs.color.MAGENTA_YCC = axs.color.toYCbCr(axs.color.MAGENTA);\naxs.color.YELLOW = new axs.color.Color(255, 255, 0, 1);\naxs.color.YELLOW_YCC = axs.color.toYCbCr(axs.color.YELLOW);\naxs.color.YCC_CUBE_FACES_BLACK = [{p0:axs.color.BLACK_YCC, p1:axs.color.RED_YCC, p2:axs.color.GREEN_YCC}, {p0:axs.color.BLACK_YCC, p1:axs.color.GREEN_YCC, p2:axs.color.BLUE_YCC}, {p0:axs.color.BLACK_YCC, p1:axs.color.BLUE_YCC, p2:axs.color.RED_YCC}];\naxs.color.YCC_CUBE_FACES_WHITE = [{p0:axs.color.WHITE_YCC, p1:axs.color.CYAN_YCC, p2:axs.color.MAGENTA_YCC}, {p0:axs.color.WHITE_YCC, p1:axs.color.MAGENTA_YCC, p2:axs.color.YELLOW_YCC}, {p0:axs.color.WHITE_YCC, p1:axs.color.YELLOW_YCC, p2:axs.color.CYAN_YCC}];\naxs.constants = {};\naxs.constants.ARIA_ROLES = {alert:{namefrom:[\"author\"], parent:[\"region\"]}, alertdialog:{namefrom:[\"author\"], namerequired:!0, parent:[\"alert\", \"dialog\"]}, application:{namefrom:[\"author\"], namerequired:!0, parent:[\"landmark\"]}, article:{namefrom:[\"author\"], parent:[\"document\", \"region\"]}, banner:{namefrom:[\"author\"], parent:[\"landmark\"]}, button:{childpresentational:!0, namefrom:[\"contents\", \"author\"], namerequired:!0, parent:[\"command\"], properties:[\"aria-expanded\", \"aria-pressed\"]}, checkbox:{namefrom:[\"contents\", \n\"author\"], namerequired:!0, parent:[\"input\"], requiredProperties:[\"aria-checked\"], properties:[\"aria-checked\"]}, columnheader:{namefrom:[\"contents\", \"author\"], namerequired:!0, parent:[\"gridcell\", \"sectionhead\", \"widget\"], properties:[\"aria-sort\"], scope:[\"row\"]}, combobox:{mustcontain:[\"listbox\", \"textbox\"], namefrom:[\"author\"], namerequired:!0, parent:[\"select\"], requiredProperties:[\"aria-expanded\"], properties:[\"aria-expanded\", \"aria-autocomplete\", \"aria-required\"]}, command:{\"abstract\":!0, namefrom:[\"author\"], \nparent:[\"widget\"]}, complementary:{namefrom:[\"author\"], parent:[\"landmark\"]}, composite:{\"abstract\":!0, childpresentational:!1, namefrom:[\"author\"], parent:[\"widget\"], properties:[\"aria-activedescendant\"]}, contentinfo:{namefrom:[\"author\"], parent:[\"landmark\"]}, definition:{namefrom:[\"author\"], parent:[\"section\"]}, dialog:{namefrom:[\"author\"], namerequired:!0, parent:[\"window\"]}, directory:{namefrom:[\"contents\", \"author\"], parent:[\"list\"]}, document:{namefrom:[\" author\"], namerequired:!0, parent:[\"structure\"], \nproperties:[\"aria-expanded\"]}, form:{namefrom:[\"author\"], parent:[\"landmark\"]}, grid:{mustcontain:[\"row\", \"rowgroup\"], namefrom:[\"author\"], namerequired:!0, parent:[\"composite\", \"region\"], properties:[\"aria-level\", \"aria-multiselectable\", \"aria-readonly\"]}, gridcell:{namefrom:[\"contents\", \"author\"], namerequired:!0, parent:[\"section\", \"widget\"], properties:[\"aria-readonly\", \"aria-required\", \"aria-selected\"], scope:[\"row\"]}, group:{namefrom:[\" author\"], parent:[\"section\"], properties:[\"aria-activedescendant\"]}, \nheading:{namerequired:!0, parent:[\"sectionhead\"], properties:[\"aria-level\"]}, img:{childpresentational:!0, namefrom:[\"author\"], namerequired:!0, parent:[\"section\"]}, input:{\"abstract\":!0, namefrom:[\"author\"], parent:[\"widget\"]}, landmark:{\"abstract\":!0, namefrom:[\"contents\", \"author\"], namerequired:!1, parent:[\"region\"]}, link:{namefrom:[\"contents\", \"author\"], namerequired:!0, parent:[\"command\"], properties:[\"aria-expanded\"]}, list:{mustcontain:[\"group\", \"listitem\"], namefrom:[\"author\"], parent:[\"region\"]}, \nlistbox:{mustcontain:[\"option\"], namefrom:[\"author\"], namerequired:!0, parent:[\"list\", \"select\"], properties:[\"aria-multiselectable\", \"aria-required\"]}, listitem:{namefrom:[\"contents\", \"author\"], namerequired:!0, parent:[\"section\"], properties:[\"aria-level\", \"aria-posinset\", \"aria-setsize\"], scope:[\"list\"]}, log:{namefrom:[\" author\"], namerequired:!0, parent:[\"region\"]}, main:{namefrom:[\"author\"], parent:[\"landmark\"]}, marquee:{namerequired:!0, parent:[\"section\"]}, math:{childpresentational:!0, namefrom:[\"author\"], \nparent:[\"section\"]}, menu:{mustcontain:[\"group\", \"menuitemradio\", \"menuitem\", \"menuitemcheckbox\"], namefrom:[\"author\"], namerequired:!0, parent:[\"list\", \"select\"]}, menubar:{namefrom:[\"author\"], parent:[\"menu\"]}, menuitem:{namefrom:[\"contents\", \"author\"], namerequired:!0, parent:[\"command\"], scope:[\"menu\", \"menubar\"]}, menuitemcheckbox:{namefrom:[\"contents\", \"author\"], namerequired:!0, parent:[\"checkbox\", \"menuitem\"], scope:[\"menu\", \"menubar\"]}, menuitemradio:{namefrom:[\"contents\", \"author\"], namerequired:!0, \nparent:[\"menuitemcheckbox\", \"radio\"], scope:[\"menu\", \"menubar\"]}, navigation:{namefrom:[\"author\"], parent:[\"landmark\"]}, note:{namefrom:[\"author\"], parent:[\"section\"]}, option:{namefrom:[\"contents\", \"author\"], namerequired:!0, parent:[\"input\"], properties:[\"aria-checked\", \"aria-posinset\", \"aria-selected\", \"aria-setsize\"]}, presentation:{parent:[\"structure\"]}, progressbar:{childpresentational:!0, namefrom:[\"author\"], namerequired:!0, parent:[\"range\"]}, radio:{namefrom:[\"contents\", \"author\"], namerequired:!0, \nparent:[\"checkbox\", \"option\"]}, radiogroup:{mustcontain:[\"radio\"], namefrom:[\"author\"], namerequired:!0, parent:[\"select\"], properties:[\"aria-required\"]}, range:{\"abstract\":!0, namefrom:[\"author\"], parent:[\"widget\"], properties:[\"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-valuetext\"]}, region:{namefrom:[\" author\"], parent:[\"section\"]}, roletype:{\"abstract\":!0, properties:\"aria-atomic aria-busy aria-controls aria-describedby aria-disabled aria-dropeffect aria-flowto aria-grabbed aria-haspopup aria-hidden aria-invalid aria-label aria-labelledby aria-live aria-owns aria-relevant\".split(\" \")}, \nrow:{mustcontain:[\"columnheader\", \"gridcell\", \"rowheader\"], namefrom:[\"contents\", \"author\"], parent:[\"group\", \"widget\"], properties:[\"aria-level\", \"aria-selected\"], scope:[\"grid\", \"rowgroup\", \"treegrid\"]}, rowgroup:{mustcontain:[\"row\"], namefrom:[\"contents\", \"author\"], parent:[\"group\"], scope:[\"grid\"]}, rowheader:{namefrom:[\"contents\", \"author\"], namerequired:!0, parent:[\"gridcell\", \"sectionhead\", \"widget\"], properties:[\"aria-sort\"], scope:[\"row\"]}, search:{namefrom:[\"author\"], parent:[\"landmark\"]}, \nsection:{\"abstract\":!0, namefrom:[\"contents\", \"author\"], parent:[\"structure\"], properties:[\"aria-expanded\"]}, sectionhead:{\"abstract\":!0, namefrom:[\"contents\", \"author\"], parent:[\"structure\"], properties:[\"aria-expanded\"]}, select:{\"abstract\":!0, namefrom:[\"author\"], parent:[\"composite\", \"group\", \"input\"]}, separator:{childpresentational:!0, namefrom:[\"author\"], parent:[\"structure\"], properties:[\"aria-expanded\", \"aria-orientation\"]}, scrollbar:{childpresentational:!0, namefrom:[\"author\"], namerequired:!1, \nparent:[\"input\", \"range\"], requiredProperties:[\"aria-controls\", \"aria-orientation\", \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\"], properties:[\"aria-controls\", \"aria-orientation\", \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\"]}, slider:{childpresentational:!0, namefrom:[\"author\"], namerequired:!0, parent:[\"input\", \"range\"], requiredProperties:[\"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\"], properties:[\"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-orientation\"]}, spinbutton:{namefrom:[\"author\"], \nnamerequired:!0, parent:[\"input\", \"range\"], requiredProperties:[\"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\"], properties:[\"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-required\"]}, status:{parent:[\"region\"]}, structure:{\"abstract\":!0, parent:[\"roletype\"]}, tab:{namefrom:[\"contents\", \"author\"], parent:[\"sectionhead\", \"widget\"], properties:[\"aria-selected\"], scope:[\"tablist\"]}, tablist:{mustcontain:[\"tab\"], namefrom:[\"author\"], parent:[\"composite\", \"directory\"], properties:[\"aria-level\"]}, \ntabpanel:{namefrom:[\"author\"], namerequired:!0, parent:[\"region\"]}, textbox:{namefrom:[\"author\"], namerequired:!0, parent:[\"input\"], properties:[\"aria-activedescendant\", \"aria-autocomplete\", \"aria-multiline\", \"aria-readonly\", \"aria-required\"]}, timer:{namefrom:[\"author\"], namerequired:!0, parent:[\"status\"]}, toolbar:{namefrom:[\"author\"], parent:[\"group\"]}, tooltip:{namerequired:!0, parent:[\"section\"]}, tree:{mustcontain:[\"group\", \"treeitem\"], namefrom:[\"author\"], namerequired:!0, parent:[\"select\"], \nproperties:[\"aria-multiselectable\", \"aria-required\"]}, treegrid:{mustcontain:[\"row\"], namefrom:[\"author\"], namerequired:!0, parent:[\"grid\", \"tree\"]}, treeitem:{namefrom:[\"contents\", \"author\"], namerequired:!0, parent:[\"listitem\", \"option\"], scope:[\"group\", \"tree\"]}, widget:{\"abstract\":!0, parent:[\"roletype\"]}, window:{\"abstract\":!0, namefrom:[\" author\"], parent:[\"roletype\"], properties:[\"aria-expanded\"]}};\naxs.constants.WIDGET_ROLES = {};\naxs.constants.addAllParentRolesToSet_ = function(a, b) {\n  if (a.parent) {\n    for (var c = a.parent, d = 0;d < c.length;d++) {\n      var e = c[d];\n      b[e] = !0;\n      axs.constants.addAllParentRolesToSet_(axs.constants.ARIA_ROLES[e], b);\n    }\n  }\n};\naxs.constants.addAllPropertiesToSet_ = function(a, b, c) {\n  var d = a[b];\n  if (d) {\n    for (var e = 0;e < d.length;e++) {\n      c[d[e]] = !0;\n    }\n  }\n  if (a.parent) {\n    for (a = a.parent, d = 0;d < a.length;d++) {\n      axs.constants.addAllPropertiesToSet_(axs.constants.ARIA_ROLES[a[d]], b, c);\n    }\n  }\n};\nfor (var roleName in axs.constants.ARIA_ROLES) {\n  var role = axs.constants.ARIA_ROLES[roleName], propertiesSet = {};\n  axs.constants.addAllPropertiesToSet_(role, \"properties\", propertiesSet);\n  role.propertiesSet = propertiesSet;\n  var requiredPropertiesSet = {};\n  axs.constants.addAllPropertiesToSet_(role, \"requiredProperties\", requiredPropertiesSet);\n  role.requiredPropertiesSet = requiredPropertiesSet;\n  var parentRolesSet = {};\n  axs.constants.addAllParentRolesToSet_(role, parentRolesSet);\n  role.allParentRolesSet = parentRolesSet;\n  \"widget\" in parentRolesSet && (axs.constants.WIDGET_ROLES[roleName] = role);\n}\naxs.constants.ARIA_PROPERTIES = {activedescendant:{type:\"property\", valueType:\"idref\"}, atomic:{defaultValue:\"false\", type:\"property\", valueType:\"boolean\"}, autocomplete:{defaultValue:\"none\", type:\"property\", valueType:\"token\", values:[\"inline\", \"list\", \"both\", \"none\"]}, busy:{defaultValue:\"false\", type:\"state\", valueType:\"boolean\"}, checked:{defaultValue:\"undefined\", type:\"state\", valueType:\"token\", values:[\"true\", \"false\", \"mixed\", \"undefined\"]}, controls:{type:\"property\", valueType:\"idref_list\"}, \ndescribedby:{type:\"property\", valueType:\"idref_list\"}, disabled:{defaultValue:\"false\", type:\"state\", valueType:\"boolean\"}, dropeffect:{defaultValue:\"none\", type:\"property\", valueType:\"token_list\", values:\"copy move link execute popup none\".split(\" \")}, expanded:{defaultValue:\"undefined\", type:\"state\", valueType:\"token\", values:[\"true\", \"false\", \"undefined\"]}, flowto:{type:\"property\", valueType:\"idref_list\"}, grabbed:{defaultValue:\"undefined\", type:\"state\", valueType:\"token\", values:[\"true\", \"false\", \n\"undefined\"]}, haspopup:{defaultValue:\"false\", type:\"property\", valueType:\"boolean\"}, hidden:{defaultValue:\"false\", type:\"state\", valueType:\"boolean\"}, invalid:{defaultValue:\"false\", type:\"state\", valueType:\"token\", values:[\"grammar\", \"false\", \"spelling\", \"true\"]}, label:{type:\"property\", valueType:\"string\"}, labelledby:{type:\"property\", valueType:\"idref_list\"}, level:{type:\"property\", valueType:\"integer\"}, live:{defaultValue:\"off\", type:\"property\", valueType:\"token\", values:[\"off\", \"polite\", \"assertive\"]}, \nmultiline:{defaultValue:\"false\", type:\"property\", valueType:\"boolean\"}, multiselectable:{defaultValue:\"false\", type:\"property\", valueType:\"boolean\"}, orientation:{defaultValue:\"vertical\", type:\"property\", valueType:\"token\", values:[\"horizontal\", \"vertical\"]}, owns:{type:\"property\", valueType:\"idref_list\"}, posinset:{type:\"property\", valueType:\"integer\"}, pressed:{defaultValue:\"undefined\", type:\"state\", valueType:\"token\", values:[\"true\", \"false\", \"mixed\", \"undefined\"]}, readonly:{defaultValue:\"false\", \ntype:\"property\", valueType:\"boolean\"}, relevant:{defaultValue:\"additions text\", type:\"property\", valueType:\"token_list\", values:[\"additions\", \"removals\", \"text\", \"all\"]}, required:{defaultValue:\"false\", type:\"property\", valueType:\"boolean\"}, selected:{defaultValue:\"undefined\", type:\"state\", valueType:\"token\", values:[\"true\", \"false\", \"undefined\"]}, setsize:{type:\"property\", valueType:\"integer\"}, sort:{defaultValue:\"none\", type:\"property\", valueType:\"token\", values:[\"ascending\", \"descending\", \"none\", \n\"other\"]}, valuemax:{type:\"property\", valueType:\"decimal\"}, valuemin:{type:\"property\", valueType:\"decimal\"}, valuenow:{type:\"property\", valueType:\"decimal\"}, valuetext:{type:\"property\", valueType:\"string\"}};\n(function() {\n  for (var a in axs.constants.ARIA_PROPERTIES) {\n    var b = axs.constants.ARIA_PROPERTIES[a];\n    if (b.values) {\n      for (var c = {}, d = 0;d < b.values.length;d++) {\n        c[b.values[d]] = !0;\n      }\n      b.valuesSet = c;\n    }\n  }\n})();\naxs.constants.GLOBAL_PROPERTIES = axs.constants.ARIA_ROLES.roletype.propertiesSet;\naxs.constants.NO_ROLE_NAME = \" \";\naxs.constants.WIDGET_ROLE_TO_NAME = {alert:\"aria_role_alert\", alertdialog:\"aria_role_alertdialog\", button:\"aria_role_button\", checkbox:\"aria_role_checkbox\", columnheader:\"aria_role_columnheader\", combobox:\"aria_role_combobox\", dialog:\"aria_role_dialog\", grid:\"aria_role_grid\", gridcell:\"aria_role_gridcell\", link:\"aria_role_link\", listbox:\"aria_role_listbox\", log:\"aria_role_log\", marquee:\"aria_role_marquee\", menu:\"aria_role_menu\", menubar:\"aria_role_menubar\", menuitem:\"aria_role_menuitem\", menuitemcheckbox:\"aria_role_menuitemcheckbox\", \nmenuitemradio:\"aria_role_menuitemradio\", option:axs.constants.NO_ROLE_NAME, progressbar:\"aria_role_progressbar\", radio:\"aria_role_radio\", radiogroup:\"aria_role_radiogroup\", rowheader:\"aria_role_rowheader\", scrollbar:\"aria_role_scrollbar\", slider:\"aria_role_slider\", spinbutton:\"aria_role_spinbutton\", status:\"aria_role_status\", tab:\"aria_role_tab\", tabpanel:\"aria_role_tabpanel\", textbox:\"aria_role_textbox\", timer:\"aria_role_timer\", toolbar:\"aria_role_toolbar\", tooltip:\"aria_role_tooltip\", treeitem:\"aria_role_treeitem\"};\naxs.constants.STRUCTURE_ROLE_TO_NAME = {article:\"aria_role_article\", application:\"aria_role_application\", banner:\"aria_role_banner\", columnheader:\"aria_role_columnheader\", complementary:\"aria_role_complementary\", contentinfo:\"aria_role_contentinfo\", definition:\"aria_role_definition\", directory:\"aria_role_directory\", document:\"aria_role_document\", form:\"aria_role_form\", group:\"aria_role_group\", heading:\"aria_role_heading\", img:\"aria_role_img\", list:\"aria_role_list\", listitem:\"aria_role_listitem\", \nmain:\"aria_role_main\", math:\"aria_role_math\", navigation:\"aria_role_navigation\", note:\"aria_role_note\", region:\"aria_role_region\", rowheader:\"aria_role_rowheader\", search:\"aria_role_search\", separator:\"aria_role_separator\"};\naxs.constants.ATTRIBUTE_VALUE_TO_STATUS = [{name:\"aria-autocomplete\", values:{inline:\"aria_autocomplete_inline\", list:\"aria_autocomplete_list\", both:\"aria_autocomplete_both\"}}, {name:\"aria-checked\", values:{\"true\":\"aria_checked_true\", \"false\":\"aria_checked_false\", mixed:\"aria_checked_mixed\"}}, {name:\"aria-disabled\", values:{\"true\":\"aria_disabled_true\"}}, {name:\"aria-expanded\", values:{\"true\":\"aria_expanded_true\", \"false\":\"aria_expanded_false\"}}, {name:\"aria-invalid\", values:{\"true\":\"aria_invalid_true\", \ngrammar:\"aria_invalid_grammar\", spelling:\"aria_invalid_spelling\"}}, {name:\"aria-multiline\", values:{\"true\":\"aria_multiline_true\"}}, {name:\"aria-multiselectable\", values:{\"true\":\"aria_multiselectable_true\"}}, {name:\"aria-pressed\", values:{\"true\":\"aria_pressed_true\", \"false\":\"aria_pressed_false\", mixed:\"aria_pressed_mixed\"}}, {name:\"aria-readonly\", values:{\"true\":\"aria_readonly_true\"}}, {name:\"aria-required\", values:{\"true\":\"aria_required_true\"}}, {name:\"aria-selected\", values:{\"true\":\"aria_selected_true\", \n\"false\":\"aria_selected_false\"}}];\naxs.constants.INPUT_TYPE_TO_INFORMATION_TABLE_MSG = {button:\"input_type_button\", checkbox:\"input_type_checkbox\", color:\"input_type_color\", datetime:\"input_type_datetime\", \"datetime-local\":\"input_type_datetime_local\", date:\"input_type_date\", email:\"input_type_email\", file:\"input_type_file\", image:\"input_type_image\", month:\"input_type_month\", number:\"input_type_number\", password:\"input_type_password\", radio:\"input_type_radio\", range:\"input_type_range\", reset:\"input_type_reset\", search:\"input_type_search\", \nsubmit:\"input_type_submit\", tel:\"input_type_tel\", text:\"input_type_text\", url:\"input_type_url\", week:\"input_type_week\"};\naxs.constants.TAG_TO_INFORMATION_TABLE_VERBOSE_MSG = {A:\"tag_link\", BUTTON:\"tag_button\", H1:\"tag_h1\", H2:\"tag_h2\", H3:\"tag_h3\", H4:\"tag_h4\", H5:\"tag_h5\", H6:\"tag_h6\", LI:\"tag_li\", OL:\"tag_ol\", SELECT:\"tag_select\", TEXTAREA:\"tag_textarea\", UL:\"tag_ul\", SECTION:\"tag_section\", NAV:\"tag_nav\", ARTICLE:\"tag_article\", ASIDE:\"tag_aside\", HGROUP:\"tag_hgroup\", HEADER:\"tag_header\", FOOTER:\"tag_footer\", TIME:\"tag_time\", MARK:\"tag_mark\"};\naxs.constants.TAG_TO_INFORMATION_TABLE_BRIEF_MSG = {BUTTON:\"tag_button\", SELECT:\"tag_select\", TEXTAREA:\"tag_textarea\"};\naxs.constants.MIXED_VALUES = {\"true\":!0, \"false\":!0, mixed:!0};\naxs.constants.Severity = {INFO:\"Info\", WARNING:\"Warning\", SEVERE:\"Severe\"};\naxs.constants.AuditResult = {PASS:\"PASS\", FAIL:\"FAIL\", NA:\"NA\"};\naxs.constants.InlineElements = {TT:!0, I:!0, B:!0, BIG:!0, SMALL:!0, EM:!0, STRONG:!0, DFN:!0, CODE:!0, SAMP:!0, KBD:!0, VAR:!0, CITE:!0, ABBR:!0, ACRONYM:!0, A:!0, IMG:!0, OBJECT:!0, BR:!0, SCRIPT:!0, MAP:!0, Q:!0, SUB:!0, SUP:!0, SPAN:!0, BDO:!0, INPUT:!0, SELECT:!0, TEXTAREA:!0, LABEL:!0, BUTTON:!0};\naxs.constants.NATIVELY_DISABLEABLE = {BUTTON:!0, INPUT:!0, SELECT:!0, TEXTAREA:!0, FIELDSET:!0, OPTGROUP:!0, OPTION:!0};\naxs.constants.ARIA_TO_HTML_ATTRIBUTE = {\"aria-checked\":\"checked\", \"aria-disabled\":\"disabled\", \"aria-hidden\":\"hidden\", \"aria-expanded\":\"open\", \"aria-valuemax\":\"max\", \"aria-valuemin\":\"min\", \"aria-readonly\":\"readonly\", \"aria-required\":\"required\", \"aria-selected\":\"selected\", \"aria-valuenow\":\"value\"};\naxs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO = {A:[{role:\"link\", allowed:\"button checkbox menuitem menuitemcheckbox menuitemradio tab treeitem\".split(\" \"), selector:\"a[href]\"}], ADDRESS:[{role:\"\", allowed:[\"contentinfo\", \"presentation\"]}], AREA:[{role:\"link\", selector:\"area[href]\"}], ARTICLE:[{role:\"article\", allowed:[\"presentation\", \"article\", \"document\", \"application\", \"main\"]}], ASIDE:[{role:\"complementary\", allowed:[\"note\", \"complementary\", \"search\", \"presentation\"]}], AUDIO:[{role:\"\", allowed:[\"application\", \n\"presentation\"]}], BASE:[{role:\"\", reserved:!0}], BODY:[{role:\"document\", allowed:[\"presentation\"]}], BUTTON:[{role:\"button\", allowed:[\"link\", \"menuitem\", \"menuitemcheckbox\", \"menuitemradio\", \"radio\"], selector:'button:not([aria-pressed]):not([type=\"menu\"])'}, {role:\"button\", allowed:[\"button\"], selector:\"button[aria-pressed]\"}, {role:\"button\", attributes:{\"aria-haspopup\":!0}, allowed:[\"link\", \"menuitem\", \"menuitemcheckbox\", \"menuitemradio\", \"radio\"], selector:'button[type=\"menu\"]'}], CAPTION:[{role:\"\", \nallowed:[\"presentation\"]}], COL:[{role:\"\", reserved:!0}], COLGROUP:[{role:\"\", reserved:!0}], DATALIST:[{role:\"listbox\", attributes:{\"aria-multiselectable\":!1}, allowed:[\"presentation\"]}], DEL:[{role:\"\", allowed:[\"*\"]}], DD:[{role:\"\", allowed:[\"presentation\"]}], DT:[{role:\"\", allowed:[\"presentation\"]}], DETAILS:[{role:\"group\", allowed:[\"group\", \"presentation\"]}], DIALOG:[{role:\"dialog\", allowed:\"dialog alert alertdialog application log marquee status\".split(\" \"), selector:\"dialog[open]\"}, {role:\"dialog\", \nattributes:{\"aria-hidden\":!0}, allowed:\"dialog alert alertdialog application log marquee status\".split(\" \"), selector:\"dialog:not([open])\"}], DIV:[{role:\"\", allowed:[\"*\"]}], DL:[{role:\"list\", allowed:[\"presentation\"]}], EMBED:[{role:\"\", allowed:[\"application\", \"document\", \"img\", \"presentation\"]}], FIGURE:[{role:\"\", allowed:[\"*\"]}], FOOTER:[{role:\"\", allowed:[\"contentinfo\", \"presentation\"]}], FORM:[{role:\"form\", allowed:[\"presentation\"]}], P:[{role:\"\", allowed:[\"*\"]}], PRE:[{role:\"\", allowed:[\"*\"]}], \nBLOCKQUOTE:[{role:\"\", allowed:[\"*\"]}], H1:[{role:\"heading\"}], H2:[{role:\"heading\"}], H3:[{role:\"heading\"}], H4:[{role:\"heading\"}], H5:[{role:\"heading\"}], H6:[{role:\"heading\"}], HEAD:[{role:\"\", reserved:!0}], HEADER:[{role:\"\", allowed:[\"banner\", \"presentation\"]}], HR:[{role:\"separator\", allowed:[\"presentation\"]}], HTML:[{role:\"\", reserved:!0}], IFRAME:[{role:\"\", allowed:[\"application\", \"document\", \"img\", \"presentation\"], selector:\"iframe:not([seamless])\"}, {role:\"\", allowed:[\"application\", \"document\", \n\"img\", \"presentation\", \"group\"], selector:\"iframe[seamless]\"}], IMG:[{role:\"presentation\", reserved:!0, selector:'img[alt=\"\"]'}, {role:\"img\", allowed:[\"*\"], selector:'img[alt]:not([alt=\"\"])'}], INPUT:[{role:\"button\", allowed:[\"link\", \"menuitem\", \"menuitemcheckbox\", \"menuitemradio\", \"radio\"], selector:'input[type=\"button\"]:not([aria-pressed])'}, {role:\"button\", allowed:[\"button\"], selector:'input[type=\"button\"][aria-pressed]'}, {role:\"checkbox\", allowed:[\"checkbox\"], selector:'input[type=\"checkbox\"]'}, \n{role:\"\", selector:'input[type=\"color\"]'}, {role:\"\", selector:'input[type=\"date\"]'}, {role:\"\", selector:'input[type=\"datetime\"]'}, {role:\"textbox\", selector:'input[type=\"email\"]:not([list])'}, {role:\"\", selector:'input[type=\"file\"]'}, {role:\"\", reserved:!0, selector:'input[type=\"hidden\"]'}, {role:\"button\", allowed:[\"button\"], selector:'input[type=\"image\"][aria-pressed]'}, {role:\"button\", allowed:[\"link\", \"menuitem\", \"menuitemcheckbox\", \"menuitemradio\", \"radio\"], selector:'input[type=\"image\"]:not([aria-pressed])'}, \n{role:\"\", selector:'input[type=\"month\"]'}, {role:\"\", selector:'input[type=\"number\"]'}, {role:\"textbox\", selector:'input[type=\"password\"]'}, {role:\"radio\", allowed:[\"menuitemradio\"], selector:'input[type=\"radio\"]'}, {role:\"slider\", selector:'input[type=\"range\"]'}, {role:\"button\", selector:'input[type=\"reset\"]'}, {role:\"combobox\", selector:'input[type=\"search\"][list]'}, {role:\"textbox\", selector:'input[type=\"search\"]:not([list])'}, {role:\"button\", selector:'input[type=\"submit\"]'}, {role:\"combobox\", \nselector:'input[type=\"tel\"][list]'}, {role:\"textbox\", selector:'input[type=\"tel\"]:not([list])'}, {role:\"combobox\", selector:'input[type=\"text\"][list]'}, {role:\"textbox\", selector:'input[type=\"text\"]:not([list])'}, {role:\"textbox\", selector:\"input:not([type])\"}, {role:\"\", selector:'input[type=\"time\"]'}, {role:\"combobox\", selector:'input[type=\"url\"][list]'}, {role:\"textbox\", selector:'input[type=\"url\"]:not([list])'}, {role:\"\", selector:'input[type=\"week\"]'}], INS:[{role:\"\", allowed:[\"*\"]}], KEYGEN:[{role:\"\"}], \nLABEL:[{role:\"\", allowed:[\"presentation\"]}], LI:[{role:\"listitem\", allowed:\"menuitem menuitemcheckbox menuitemradio option tab treeitem presentation\".split(\" \"), selector:'ol:not([role=\"presentation\"])>li, ul:not([role=\"presentation\"])>li'}, {role:\"listitem\", allowed:\"listitem menuitem menuitemcheckbox menuitemradio option tab treeitem presentation\".split(\" \"), selector:'ol[role=\"presentation\"]>li, ul[role=\"presentation\"]>li'}], LINK:[{role:\"link\", reserved:!0, selector:\"link[href]\"}], MAIN:[{role:\"\", \nallowed:[\"main\", \"presentation\"]}], MAP:[{role:\"\", reserved:!0}], MATH:[{role:\"\", allowed:[\"presentation\"]}], MENU:[{role:\"toolbar\", selector:'menu[type=\"toolbar\"]'}], MENUITEM:[{role:\"menuitem\", selector:'menuitem[type=\"command\"]'}, {role:\"menuitemcheckbox\", selector:'menuitem[type=\"checkbox\"]'}, {role:\"menuitemradio\", selector:'menuitem[type=\"radio\"]'}], META:[{role:\"\", reserved:!0}], METER:[{role:\"progressbar\", allowed:[\"presentation\"]}], NAV:[{role:\"navigation\", allowed:[\"navigation\", \"presentation\"]}], \nNOSCRIPT:[{role:\"\", reserved:!0}], OBJECT:[{role:\"\", allowed:[\"application\", \"document\", \"img\", \"presentation\"]}], OL:[{role:\"list\", allowed:\"directory group listbox menu menubar tablist toolbar tree presentation\".split(\" \")}], OPTGROUP:[{role:\"\", allowed:[\"presentation\"]}], OPTION:[{role:\"option\"}], OUTPUT:[{role:\"status\", allowed:[\"*\"]}], PARAM:[{role:\"\", reserved:!0}], PICTURE:[{role:\"\", reserved:!0}], PROGRESS:[{role:\"progressbar\", allowed:[\"presentation\"]}], SCRIPT:[{role:\"\", reserved:!0}], \nSECTION:[{role:\"region\", allowed:\"alert alertdialog application contentinfo dialog document log marquee search status presentation\".split(\" \")}], SELECT:[{role:\"listbox\"}], SOURCE:[{role:\"\", reserved:!0}], SPAN:[{role:\"\", allowed:[\"*\"]}], STYLE:[{role:\"\", reserved:!0}], SVG:[{role:\"\", allowed:[\"application\", \"document\", \"img\", \"presentation\"]}], SUMMARY:[{role:\"\", allowed:[\"presentation\"]}], TABLE:[{role:\"\", allowed:[\"*\"]}], TEMPLATE:[{role:\"\", reserved:!0}], TEXTAREA:[{role:\"textbox\"}], TBODY:[{role:\"rowgroup\", \nallowed:[\"*\"]}], THEAD:[{role:\"rowgroup\", allowed:[\"*\"]}], TFOOT:[{role:\"rowgroup\", allowed:[\"*\"]}], TITLE:[{role:\"\", reserved:!0}], TD:[{role:\"\", allowed:[\"*\"]}], TH:[{role:\"\", allowed:[\"*\"]}], TR:[{role:\"\", allowed:[\"*\"]}], TRACK:[{role:\"\", reserved:!0}], UL:[{role:\"list\", allowed:\"directory group listbox menu menubar tablist toolbar tree presentation\".split(\" \")}], VIDEO:[{role:\"\", allowed:[\"application\", \"presentation\"]}]};\naxs.dom = {};\naxs.dom.parentElement = function(a) {\n  if (!a) {\n    return null;\n  }\n  a = axs.dom.composedParentNode(a);\n  if (!a) {\n    return null;\n  }\n  switch(a.nodeType) {\n    case Node.ELEMENT_NODE:\n      return a;\n    default:\n      return axs.dom.parentElement(a);\n  }\n};\naxs.dom.shadowHost = function(a) {\n  return \"host\" in a ? a.host : null;\n};\naxs.dom.composedParentNode = function(a) {\n  if (!a) {\n    return null;\n  }\n  if (a.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    return axs.dom.shadowHost(a);\n  }\n  var b = a.parentNode;\n  if (!b) {\n    return null;\n  }\n  if (b.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n    return axs.dom.shadowHost(b);\n  }\n  if (!b.shadowRoot) {\n    return b;\n  }\n  if (a.nodeType === Node.ELEMENT_NODE || a.nodeType === Node.TEXT_NODE) {\n    if (b = a.assignedSlot, HTMLSlotElement && b instanceof HTMLSlotElement) {\n      return axs.dom.composedParentNode(b);\n    }\n  }\n  return \"function\" === typeof a.getDestinationInsertionPoints && (a = a.getDestinationInsertionPoints(), 0 < a.length) ? axs.dom.composedParentNode(a[a.length - 1]) : null;\n};\naxs.dom.asElement = function(a) {\n  switch(a.nodeType) {\n    case Node.COMMENT_NODE:\n      break;\n    case Node.ELEMENT_NODE:\n      if (\"script\" == a.localName || \"template\" == a.localName) {\n        break;\n      }\n      return a;\n    case Node.DOCUMENT_FRAGMENT_NODE:\n      return a.host;\n    case Node.TEXT_NODE:\n      return axs.dom.parentElement(a);\n    default:\n      console.warn(\"Unhandled node type: \", a.nodeType);\n  }\n  return null;\n};\naxs.dom.composedTreeSearch = function(a, b, c, d, e) {\n  if (a === b) {\n    return !0;\n  }\n  if (a.nodeType == Node.ELEMENT_NODE) {\n    var f = a;\n  }\n  var g = !1;\n  d = Object.create(d);\n  if (f) {\n    var h = f.localName;\n    d.collectIdRefs && (d.idrefs = axs.utils.getReferencedIds(f));\n    if (!d.disabled || \"legend\" === h && axs.browserUtils.matchSelector(f, \"fieldset>legend:first-of-type\")) {\n      d.disabled = axs.utils.isElementDisabled(f, !0);\n    }\n    d.hidden || (d.hidden = axs.utils.isElementHidden(f));\n    if (c.preorder && !c.preorder(f, d)) {\n      return g;\n    }\n    var k = f.shadowRoot || f.webkitShadowRoot;\n    if (k) {\n      return d.level++, g = axs.dom.composedTreeSearch(k, b, c, d, k), f && c.postorder && !g && c.postorder(f, d), g;\n    }\n    if (\"content\" == h && \"function\" === typeof f.getDistributedNodes) {\n      a = f.getDistributedNodes();\n      for (h = 0;h < a.length && !g;h++) {\n        g = axs.dom.composedTreeSearch(a[h], b, c, d, e);\n      }\n      c.postorder && !g && c.postorder.call(null, f, d);\n      return g;\n    }\n  }\n  for (a = a.firstChild;null != a && !g;) {\n    g = axs.dom.composedTreeSearch(a, b, c, d, e), a = a.nextSibling;\n  }\n  f && c.postorder && !g && c.postorder.call(null, f, d);\n  return g;\n};\naxs.utils = {};\naxs.utils.FOCUSABLE_ELEMENTS_SELECTOR = \"input:not([type=hidden]):not([disabled]),select:not([disabled]),textarea:not([disabled]),button:not([disabled]),a[href],iframe,[tabindex]\";\naxs.utils.LABELABLE_ELEMENTS_SELECTOR = \"button,input:not([type=hidden]),keygen,meter,output,progress,select,textarea\";\naxs.utils.elementIsTransparent = function(a) {\n  return \"0\" == a.style.opacity;\n};\naxs.utils.elementHasZeroArea = function(a) {\n  a = a.getBoundingClientRect();\n  var b = a.top - a.bottom;\n  return a.right - a.left && b ? !1 : !0;\n};\naxs.utils.elementIsOutsideScrollArea = function(a) {\n  for (var b = axs.dom.parentElement(a), c = a.ownerDocument.defaultView;b != c.document.body;) {\n    if (axs.utils.isClippedBy(a, b)) {\n      return !0;\n    }\n    if (axs.utils.canScrollTo(a, b) && !axs.utils.elementIsOutsideScrollArea(b)) {\n      return !1;\n    }\n    b = axs.dom.parentElement(b);\n  }\n  return !axs.utils.canScrollTo(a, c.document.body);\n};\naxs.utils.canScrollTo = function(a, b) {\n  var c = a.getBoundingClientRect(), d = b.getBoundingClientRect();\n  if (b == b.ownerDocument.body) {\n    var e = d.top, f = d.left;\n  } else {\n    e = d.top - b.scrollTop, f = d.left - b.scrollLeft;\n  }\n  var g = e + b.scrollHeight, h = f + b.scrollWidth;\n  if (c.right < f || c.bottom < e || c.left > h || c.top > g) {\n    return !1;\n  }\n  e = a.ownerDocument.defaultView;\n  f = e.getComputedStyle(b);\n  return c.left > d.right || c.top > d.bottom ? \"scroll\" == f.overflow || \"auto\" == f.overflow || b instanceof e.HTMLBodyElement : !0;\n};\naxs.utils.isClippedBy = function(a, b) {\n  var c = a.getBoundingClientRect(), d = b.getBoundingClientRect(), e = d.top - b.scrollTop, f = d.left - b.scrollLeft, g = a.ownerDocument.defaultView.getComputedStyle(b);\n  return (c.right < d.left || c.bottom < d.top || c.left > d.right || c.top > d.bottom) && \"hidden\" == g.overflow ? !0 : c.right < f || c.bottom < e ? \"visible\" != g.overflow : !1;\n};\naxs.utils.isAncestor = function(a, b) {\n  if (null == b) {\n    return !1;\n  }\n  if (b === a) {\n    return !0;\n  }\n  var c = axs.dom.composedParentNode(b);\n  return axs.utils.isAncestor(a, c);\n};\naxs.utils.overlappingElements = function(a) {\n  if (axs.utils.elementHasZeroArea(a)) {\n    return null;\n  }\n  for (var b = [], c = a.getClientRects(), d = 0;d < c.length;d++) {\n    var e = c[d], e = document.elementFromPoint((e.left + e.right) / 2, (e.top + e.bottom) / 2);\n    if (null != e && e != a && !axs.utils.isAncestor(e, a) && !axs.utils.isAncestor(a, e)) {\n      var f = window.getComputedStyle(e, null);\n      f && (f = axs.utils.getBgColor(f, e)) && 0 < f.alpha && 0 > b.indexOf(e) && b.push(e);\n    }\n  }\n  return b;\n};\naxs.utils.elementIsHtmlControl = function(a) {\n  var b = a.ownerDocument.defaultView;\n  return a instanceof b.HTMLButtonElement || a instanceof b.HTMLInputElement || a instanceof b.HTMLSelectElement || a instanceof b.HTMLTextAreaElement ? !0 : !1;\n};\naxs.utils.elementIsAriaWidget = function(a) {\n  return a.hasAttribute(\"role\") && (a = a.getAttribute(\"role\")) && (a = axs.constants.ARIA_ROLES[a]) && \"widget\" in a.allParentRolesSet ? !0 : !1;\n};\naxs.utils.elementIsVisible = function(a) {\n  return axs.utils.elementIsTransparent(a) || axs.utils.elementHasZeroArea(a) || axs.utils.elementIsOutsideScrollArea(a) || axs.utils.overlappingElements(a).length ? !1 : !0;\n};\naxs.utils.isLargeFont = function(a) {\n  var b = a.fontSize;\n  a = \"bold\" == a.fontWeight;\n  var c = b.match(/(\\d+)px/);\n  if (c) {\n    b = parseInt(c[1], 10);\n    if (c = window.getComputedStyle(document.body, null).fontSize.match(/(\\d+)px/)) {\n      var d = parseInt(c[1], 10), c = 1.2 * d, d = 1.5 * d;\n    } else {\n      c = 19.2, d = 24;\n    }\n    return a && b >= c || b >= d;\n  }\n  if (c = b.match(/(\\d+)em/)) {\n    return b = parseInt(c[1], 10), a && 1.2 <= b || 1.5 <= b ? !0 : !1;\n  }\n  if (c = b.match(/(\\d+)%/)) {\n    return b = parseInt(c[1], 10), a && 120 <= b || 150 <= b ? !0 : !1;\n  }\n  if (c = b.match(/(\\d+)pt/)) {\n    if (b = parseInt(c[1], 10), a && 14 <= b || 18 <= b) {\n      return !0;\n    }\n  }\n  return !1;\n};\naxs.utils.getBgColor = function(a, b) {\n  var c = axs.color.parseColor(a.backgroundColor);\n  if (!c) {\n    return null;\n  }\n  1 > a.opacity && (c.alpha *= a.opacity);\n  if (1 > c.alpha) {\n    var d = axs.utils.getParentBgColor(b);\n    if (null == d) {\n      return null;\n    }\n    c = axs.color.flattenColors(c, d);\n  }\n  return c;\n};\naxs.utils.getParentBgColor = function(a) {\n  var b = a;\n  a = [];\n  for (var c = null;b = axs.dom.parentElement(b);) {\n    var d = window.getComputedStyle(b, null);\n    if (d) {\n      var e = axs.color.parseColor(d.backgroundColor);\n      if (e && (1 > d.opacity && (e.alpha *= d.opacity), 0 != e.alpha && (a.push(e), 1 == e.alpha))) {\n        c = !0;\n        break;\n      }\n    }\n  }\n  c || a.push(new axs.color.Color(255, 255, 255, 1));\n  for (b = a.pop();a.length;) {\n    c = a.pop(), b = axs.color.flattenColors(c, b);\n  }\n  return b;\n};\naxs.utils.getFgColor = function(a, b, c) {\n  var d = axs.color.parseColor(a.color);\n  if (!d) {\n    return null;\n  }\n  1 > d.alpha && (d = axs.color.flattenColors(d, c));\n  1 > a.opacity && (b = axs.utils.getParentBgColor(b), d.alpha *= a.opacity, d = axs.color.flattenColors(d, b));\n  return d;\n};\naxs.utils.getContrastRatioForElement = function(a) {\n  var b = window.getComputedStyle(a, null);\n  return axs.utils.getContrastRatioForElementWithComputedStyle(b, a);\n};\naxs.utils.getContrastRatioForElementWithComputedStyle = function(a, b) {\n  if (axs.utils.isElementHidden(b)) {\n    return null;\n  }\n  var c = axs.utils.getBgColor(a, b);\n  if (!c) {\n    return null;\n  }\n  var d = axs.utils.getFgColor(a, b, c);\n  return d ? axs.color.calculateContrastRatio(d, c) : null;\n};\naxs.utils.isNativeTextElement = function(a) {\n  var b = a.tagName.toLowerCase();\n  a = a.type ? a.type.toLowerCase() : \"\";\n  if (\"textarea\" == b) {\n    return !0;\n  }\n  if (\"input\" != b) {\n    return !1;\n  }\n  switch(a) {\n    case \"email\":\n    case \"number\":\n    case \"password\":\n    case \"search\":\n    case \"text\":\n    case \"tel\":\n    case \"url\":\n    case \"\":\n      return !0;\n    default:\n      return !1;\n  }\n};\naxs.utils.isLowContrast = function(a, b, c) {\n  a = Math.round(10 * a) / 10;\n  return c ? 4.5 > a || !axs.utils.isLargeFont(b) && 7 > a : 3 > a || !axs.utils.isLargeFont(b) && 4.5 > a;\n};\naxs.utils.hasLabel = function(a) {\n  var b = a.tagName.toLowerCase(), c = a.type ? a.type.toLowerCase() : \"\";\n  if (a.hasAttribute(\"aria-label\") || a.hasAttribute(\"title\") || \"img\" == b && a.hasAttribute(\"alt\") || \"input\" == b && \"image\" == c && a.hasAttribute(\"alt\") || \"input\" == b && (\"submit\" == c || \"reset\" == c) || a.hasAttribute(\"aria-labelledby\") || a.hasAttribute(\"id\") && 0 < document.querySelectorAll('label[for=\"' + a.id + '\"]').length) {\n    return !0;\n  }\n  for (b = axs.dom.parentElement(a);b;) {\n    if (\"label\" == b.tagName.toLowerCase() && b.control == a) {\n      return !0;\n    }\n    b = axs.dom.parentElement(b);\n  }\n  return !1;\n};\naxs.utils.isNativelyDisableable = function(a) {\n  return a.tagName.toUpperCase() in axs.constants.NATIVELY_DISABLEABLE;\n};\naxs.utils.isElementDisabled = function(a, b) {\n  if (axs.browserUtils.matchSelector(a, b ? \"[aria-disabled=true]\" : \"[aria-disabled=true], [aria-disabled=true] *\")) {\n    return !0;\n  }\n  if (!axs.utils.isNativelyDisableable(a) || axs.browserUtils.matchSelector(a, \"fieldset>legend:first-of-type *\")) {\n    return !1;\n  }\n  for (var c = a;null !== c;c = axs.dom.parentElement(c)) {\n    if (c.hasAttribute(\"disabled\")) {\n      return !0;\n    }\n    if (b) {\n      break;\n    }\n  }\n  return !1;\n};\naxs.utils.isElementHidden = function(a) {\n  if (!(a instanceof a.ownerDocument.defaultView.HTMLElement)) {\n    return !1;\n  }\n  if (a.hasAttribute(\"chromevoxignoreariahidden\")) {\n    var b = !0;\n  }\n  var c = window.getComputedStyle(a, null);\n  return \"none\" == c.display || \"hidden\" == c.visibility ? !0 : a.hasAttribute(\"aria-hidden\") && \"true\" == a.getAttribute(\"aria-hidden\").toLowerCase() ? !b : !1;\n};\naxs.utils.isElementOrAncestorHidden = function(a) {\n  return axs.utils.isElementHidden(a) ? !0 : axs.dom.parentElement(a) ? axs.utils.isElementOrAncestorHidden(axs.dom.parentElement(a)) : !1;\n};\naxs.utils.isInlineElement = function(a) {\n  a = a.tagName.toUpperCase();\n  return axs.constants.InlineElements[a];\n};\naxs.utils.getRoles = function(a, b) {\n  if (!a || a.nodeType !== Node.ELEMENT_NODE || !a.hasAttribute(\"role\") && !b) {\n    return null;\n  }\n  var c = a.getAttribute(\"role\");\n  !c && b && (c = axs.properties.getImplicitRole(a));\n  if (!c) {\n    return null;\n  }\n  for (var c = c.split(\" \"), d = {roles:[], valid:!1}, e = 0;e < c.length;e++) {\n    var f = c[e], g = axs.constants.ARIA_ROLES[f], f = {name:f};\n    g && !g[\"abstract\"] ? (f.details = g, d.applied || (d.applied = f), f.valid = d.valid = !0) : f.valid = !1;\n    d.roles.push(f);\n  }\n  return d;\n};\naxs.utils.getAriaPropertyValue = function(a, b, c) {\n  var d = a.replace(/^aria-/, \"\"), e = axs.constants.ARIA_PROPERTIES[d], d = {name:a, rawValue:b};\n  if (!e) {\n    return d.valid = !1, d.reason = '\"' + a + '\" is not a valid ARIA property', d;\n  }\n  e = e.valueType;\n  if (!e) {\n    return d.valid = !1, d.reason = '\"' + a + '\" is not a valid ARIA property', d;\n  }\n  switch(e) {\n    case \"idref\":\n      a = axs.utils.isValidIDRefValue(b, c), d.valid = a.valid, d.reason = a.reason, d.idref = a.idref;\n    case \"idref_list\":\n      a = b.split(/\\s+/);\n      d.valid = !0;\n      for (b = 0;b < a.length;b++) {\n        e = axs.utils.isValidIDRefValue(a[b], c), e.valid || (d.valid = !1), d.values ? d.values.push(e) : d.values = [e];\n      }\n      return d;\n    case \"integer\":\n      c = axs.utils.isValidNumber(b);\n      if (!c.valid) {\n        return d.valid = !1, d.reason = c.reason, d;\n      }\n      Math.floor(c.value) !== c.value ? (d.valid = !1, d.reason = \"\" + b + \" is not a whole integer\") : (d.valid = !0, d.value = c.value);\n      return d;\n    case \"decimal\":\n    case \"number\":\n      c = axs.utils.isValidNumber(b);\n      d.valid = c.valid;\n      if (!c.valid) {\n        return d.reason = c.reason, d;\n      }\n      d.value = c.value;\n      return d;\n    case \"string\":\n      return d.valid = !0, d.value = b, d;\n    case \"token\":\n      return c = axs.utils.isValidTokenValue(a, b.toLowerCase()), c.valid ? (d.valid = !0, d.value = c.value) : (d.valid = !1, d.value = b, d.reason = c.reason), d;\n    case \"token_list\":\n      e = b.split(/\\s+/);\n      d.valid = !0;\n      for (b = 0;b < e.length;b++) {\n        c = axs.utils.isValidTokenValue(a, e[b].toLowerCase()), c.valid || (d.valid = !1, d.reason ? (d.reason = [d.reason], d.reason.push(c.reason)) : (d.reason = c.reason, d.possibleValues = c.possibleValues)), d.values ? d.values.push(c.value) : d.values = [c.value];\n      }\n      return d;\n    case \"tristate\":\n      return c = axs.utils.isPossibleValue(b.toLowerCase(), axs.constants.MIXED_VALUES, a), c.valid ? (d.valid = !0, d.value = c.value) : (d.valid = !1, d.value = b, d.reason = c.reason), d;\n    case \"boolean\":\n      return c = axs.utils.isValidBoolean(b), c.valid ? (d.valid = !0, d.value = c.value) : (d.valid = !1, d.value = b, d.reason = c.reason), d;\n  }\n  d.valid = !1;\n  d.reason = \"Not a valid ARIA property\";\n  return d;\n};\naxs.utils.isValidTokenValue = function(a, b) {\n  var c = a.replace(/^aria-/, \"\");\n  return axs.utils.isPossibleValue(b, axs.constants.ARIA_PROPERTIES[c].valuesSet, a);\n};\naxs.utils.isPossibleValue = function(a, b, c) {\n  return b[a] ? {valid:!0, value:a} : {valid:!1, value:a, reason:'\"' + a + '\" is not a valid value for ' + c, possibleValues:Object.keys(b)};\n};\naxs.utils.isValidBoolean = function(a) {\n  try {\n    var b = JSON.parse(a);\n  } catch (c) {\n    b = \"\";\n  }\n  return \"boolean\" != typeof b ? {valid:!1, value:a, reason:'\"' + a + '\" is not a true/false value'} : {valid:!0, value:b};\n};\naxs.utils.isValidIDRefValue = function(a, b) {\n  return 0 == a.length ? {valid:!0, idref:a} : b.ownerDocument.getElementById(a) ? {valid:!0, idref:a} : {valid:!1, idref:a, reason:'No element with ID \"' + a + '\"'};\n};\naxs.utils.isValidNumber = function(a) {\n  var b = {valid:!1, value:a, reason:'\"' + a + '\" is not a number'};\n  if (!a) {\n    return b;\n  }\n  if (/^0x/i.test(a)) {\n    return b.reason = '\"' + a + '\" is not a decimal number', b;\n  }\n  a *= 1;\n  return isFinite(a) ? {valid:!0, value:a} : b;\n};\naxs.utils.isElementImplicitlyFocusable = function(a) {\n  var b = a.ownerDocument.defaultView;\n  return a instanceof b.HTMLAnchorElement || a instanceof b.HTMLAreaElement ? a.hasAttribute(\"href\") : a instanceof b.HTMLInputElement || a instanceof b.HTMLSelectElement || a instanceof b.HTMLTextAreaElement || a instanceof b.HTMLButtonElement || a instanceof b.HTMLIFrameElement ? !a.disabled : !1;\n};\naxs.utils.values = function(a) {\n  var b = [], c;\n  for (c in a) {\n    a.hasOwnProperty(c) && \"function\" != typeof a[c] && b.push(a[c]);\n  }\n  return b;\n};\naxs.utils.namedValues = function(a) {\n  var b = {}, c;\n  for (c in a) {\n    a.hasOwnProperty(c) && \"function\" != typeof a[c] && (b[c] = a[c]);\n  }\n  return b;\n};\nfunction escapeId(a) {\n  return a.replace(/[^a-zA-Z0-9_-]/g, function(a) {\n    return \"\\\\\" + a;\n  });\n}\naxs.utils.getQuerySelectorText = function(a) {\n  if (null == a || \"HTML\" == a.tagName) {\n    return \"html\";\n  }\n  if (\"BODY\" == a.tagName) {\n    return \"body\";\n  }\n  if (a.hasAttribute) {\n    if (a.id) {\n      return \"#\" + escapeId(a.id);\n    }\n    if (a.className) {\n      for (var b = \"\", c = 0;c < a.classList.length;c++) {\n        b += \".\" + a.classList[c];\n      }\n      var d = 0;\n      if (a.parentNode) {\n        for (c = 0;c < a.parentNode.children.length;c++) {\n          var e = a.parentNode.children[c];\n          axs.browserUtils.matchSelector(e, b) && d++;\n          if (e === a) {\n            break;\n          }\n        }\n      } else {\n        d = 1;\n      }\n      if (1 == d) {\n        return axs.utils.getQuerySelectorText(a.parentNode) + \" > \" + b;\n      }\n    }\n    if (a.parentNode) {\n      b = a.parentNode.children;\n      d = 1;\n      for (c = 0;b[c] !== a;) {\n        b[c].tagName == a.tagName && d++, c++;\n      }\n      c = \"\";\n      \"BODY\" != a.parentNode.tagName && (c = axs.utils.getQuerySelectorText(a.parentNode) + \" > \");\n      return 1 == d ? c + a.tagName : c + a.tagName + \":nth-of-type(\" + d + \")\";\n    }\n  } else {\n    if (a.selectorText) {\n      return a.selectorText;\n    }\n  }\n  return \"\";\n};\naxs.utils.getAriaIdReferrers = function(a, b) {\n  var c = function(a) {\n    var b = axs.constants.ARIA_PROPERTIES[a];\n    if (b) {\n      if (\"idref\" === b.valueType) {\n        return \"[aria-\" + a + \"='\" + d + \"']\";\n      }\n      if (\"idref_list\" === b.valueType) {\n        return \"[aria-\" + a + \"~='\" + d + \"']\";\n      }\n    }\n    return \"\";\n  };\n  if (!a) {\n    return null;\n  }\n  var d = a.id;\n  if (!d) {\n    return null;\n  }\n  d = d.replace(/'/g, \"\\\\'\");\n  if (b) {\n    var e = b.replace(/^aria-/, \"\"), f = c(e);\n    if (f) {\n      return a.ownerDocument.querySelectorAll(f);\n    }\n  } else {\n    var g = [];\n    for (e in axs.constants.ARIA_PROPERTIES) {\n      (f = c(e)) && g.push(f);\n    }\n    return a.ownerDocument.querySelectorAll(g.join(\",\"));\n  }\n  return null;\n};\naxs.utils.getHtmlIdReferrers = function(a) {\n  if (!a) {\n    return null;\n  }\n  var b = a.id;\n  if (!b) {\n    return null;\n  }\n  var b = b.replace(/'/g, \"\\\\'\"), c = \"[contextmenu='{id}'] [itemref~='{id}'] button[form='{id}'] button[menu='{id}'] fieldset[form='{id}'] input[form='{id}'] input[list='{id}'] keygen[form='{id}'] label[for='{id}'] label[form='{id}'] menuitem[command='{id}'] object[form='{id}'] output[for~='{id}'] output[form='{id}'] select[form='{id}'] td[headers~='{id}'] textarea[form='{id}'] tr[headers~='{id}']\".split(\" \").map(function(a) {\n    return a.replace(\"{id}\", b);\n  });\n  return a.ownerDocument.querySelectorAll(c.join(\",\"));\n};\naxs.utils.getReferencedIds = function(a) {\n  for (var b = [], c = function(a) {\n    a && (0 < a.indexOf(\" \") ? b = b.concat(f.value.split(\" \")) : b.push(a));\n  }, d = 0;d < a.attributes.length;d++) {\n    var e = a.tagName.toLowerCase(), f = a.attributes[d];\n    if (f.specified) {\n      var g = f.name, h = g.match(/aria-(.+)/);\n      if (h) {\n        e = axs.constants.ARIA_PROPERTIES[h[1]], !e || \"idref\" !== e.valueType && \"idref_list\" !== e.valueType || c(f.value);\n      } else {\n        switch(g) {\n          case \"contextmenu\":\n          case \"itemref\":\n            c(f.value);\n            break;\n          case \"form\":\n            \"button\" != e && \"fieldset\" != e && \"input\" != e && \"keygen\" != e && \"label\" != e && \"object\" != e && \"output\" != e && \"select\" != e && \"textarea\" != e || c(f.value);\n            break;\n          case \"for\":\n            \"label\" != e && \"output\" != e || c(f.value);\n            break;\n          case \"menu\":\n            \"button\" == e && c(f.value);\n            break;\n          case \"list\":\n            \"input\" == e && c(f.value);\n            break;\n          case \"command\":\n            \"menuitem\" == e && c(f.value);\n            break;\n          case \"headers\":\n            \"td\" != e && \"tr\" != e || c(f.value);\n        }\n      }\n    }\n  }\n  return b;\n};\naxs.utils.getIdReferrers = function(a) {\n  var b = [], c = axs.utils.getHtmlIdReferrers(a);\n  c && (b = b.concat(Array.prototype.slice.call(c)));\n  (c = axs.utils.getAriaIdReferrers(a)) && (b = b.concat(Array.prototype.slice.call(c)));\n  return b;\n};\naxs.utils.getIdReferents = function(a, b) {\n  var c = [], d = a.replace(/^aria-/, \"\"), d = axs.constants.ARIA_PROPERTIES[d];\n  if (!d || !b.hasAttribute(a)) {\n    return c;\n  }\n  d = d.valueType;\n  if (\"idref_list\" === d || \"idref\" === d) {\n    for (var d = b.ownerDocument, e = b.getAttribute(a), e = e.split(/\\s+/), f = 0, g = e.length;f < g;f++) {\n      var h = d.getElementById(e[f]);\n      h && (c[c.length] = h);\n    }\n  }\n  return c;\n};\naxs.utils.getAriaPropertiesByValueType = function(a) {\n  var b = {}, c;\n  for (c in axs.constants.ARIA_PROPERTIES) {\n    var d = axs.constants.ARIA_PROPERTIES[c];\n    d && 0 <= a.indexOf(d.valueType) && (b[c] = d);\n  }\n  return b;\n};\naxs.utils.getSelectorForAriaProperties = function(a) {\n  a = Object.keys(a).map(function(a) {\n    return \"[aria-\" + a + \"]\";\n  });\n  a.sort();\n  return a.join(\",\");\n};\naxs.utils.findDescendantsWithRole = function(a, b) {\n  if (!a || !b) {\n    return [];\n  }\n  var c = axs.properties.getSelectorForRole(b);\n  if (c && (c = a.querySelectorAll(c))) {\n    c = Array.prototype.map.call(c, function(a) {\n      return a;\n    });\n  } else {\n    return [];\n  }\n  return c;\n};\naxs.properties = {};\naxs.properties.TEXT_CONTENT_XPATH = './/text()[normalize-space(.)!=\"\"]/parent::*[name()!=\"script\"]';\naxs.properties.getFocusProperties = function(a) {\n  var b = {}, c = a.getAttribute(\"tabindex\");\n  void 0 != c ? b.tabindex = {value:c, valid:!0} : axs.utils.isElementImplicitlyFocusable(a) && (b.implicitlyFocusable = {value:!0, valid:!0});\n  if (0 == Object.keys(b).length) {\n    return null;\n  }\n  var d = axs.utils.elementIsTransparent(a), e = axs.utils.elementHasZeroArea(a), f = axs.utils.elementIsOutsideScrollArea(a), g = axs.utils.overlappingElements(a);\n  if (d || e || f || 0 < g.length) {\n    var c = axs.utils.isElementOrAncestorHidden(a), h = {value:!1, valid:c};\n    d && (h.transparent = !0);\n    e && (h.zeroArea = !0);\n    f && (h.outsideScrollArea = !0);\n    g && 0 < g.length && (h.overlappingElements = g);\n    d = {value:c, valid:c};\n    c && (d.reason = axs.properties.getHiddenReason(a));\n    h.hidden = d;\n    b.visible = h;\n  } else {\n    b.visible = {value:!0, valid:!0};\n  }\n  return b;\n};\naxs.properties.getHiddenReason = function(a) {\n  if (!(a && a instanceof a.ownerDocument.defaultView.HTMLElement)) {\n    return null;\n  }\n  if (a.hasAttribute(\"chromevoxignoreariahidden\")) {\n    var b = !0;\n  }\n  var c = window.getComputedStyle(a, null);\n  return \"none\" == c.display ? {property:\"display: none\", on:a} : \"hidden\" == c.visibility ? {property:\"visibility: hidden\", on:a} : a.hasAttribute(\"aria-hidden\") && \"true\" == a.getAttribute(\"aria-hidden\").toLowerCase() && !b ? {property:\"aria-hidden\", on:a} : axs.properties.getHiddenReason(axs.dom.parentElement(a));\n};\naxs.properties.getColorProperties = function(a) {\n  var b = {};\n  (a = axs.properties.getContrastRatioProperties(a)) && (b.contrastRatio = a);\n  return 0 == Object.keys(b).length ? null : b;\n};\naxs.properties.hasDirectTextDescendant = function(a) {\n  function b() {\n    for (var b = c.evaluate(axs.properties.TEXT_CONTENT_XPATH, a, null, XPathResult.ANY_TYPE, null), e = b.iterateNext();null != e;e = b.iterateNext()) {\n      if (e === a) {\n        return !0;\n      }\n    }\n    return !1;\n  }\n  var c;\n  c = a.nodeType == Node.DOCUMENT_NODE ? a : a.ownerDocument;\n  return c.evaluate ? b() : function() {\n    for (var b = c.createTreeWalker(a, NodeFilter.SHOW_TEXT, null, !1);b.nextNode();) {\n      var e = b.currentNode, f = e.parentNode, f = f.host || f, f = f.tagName.toLowerCase();\n      if (e.nodeValue.trim() && \"script\" !== f && a !== e) {\n        return !0;\n      }\n    }\n    return !1;\n  }();\n};\naxs.properties.getContrastRatioProperties = function(a) {\n  if (!axs.properties.hasDirectTextDescendant(a)) {\n    return null;\n  }\n  var b = {}, c = window.getComputedStyle(a, null), d = axs.utils.getBgColor(c, a);\n  if (!d) {\n    return null;\n  }\n  b.backgroundColor = axs.color.colorToString(d);\n  var e = axs.utils.getFgColor(c, a, d);\n  b.foregroundColor = axs.color.colorToString(e);\n  a = axs.utils.getContrastRatioForElementWithComputedStyle(c, a);\n  if (!a) {\n    return null;\n  }\n  b.value = a.toFixed(2);\n  axs.utils.isLowContrast(a, c) && (b.alert = !0);\n  var f = axs.utils.isLargeFont(c) ? 3 : 4.5, c = axs.utils.isLargeFont(c) ? 4.5 : 7, g = {};\n  f > a && (g.AA = f);\n  c > a && (g.AAA = c);\n  if (!Object.keys(g).length) {\n    return b;\n  }\n  (d = axs.color.suggestColors(d, e, g)) && Object.keys(d).length && (b.suggestedColors = d);\n  return b;\n};\naxs.properties.findTextAlternatives = function(a, b, c, d) {\n  var e = c || !1;\n  c = axs.dom.asElement(a);\n  if (!c || !d && axs.utils.isElementOrAncestorHidden(c)) {\n    return null;\n  }\n  if (a.nodeType == Node.TEXT_NODE) {\n    return c = {type:\"text\"}, c.text = a.textContent, c.lastWord = axs.properties.getLastWord(c.text), b.content = c, a.textContent;\n  }\n  a = null;\n  e || (a = axs.properties.getTextFromAriaLabelledby(c, b));\n  if (c.hasAttribute(\"aria-label\")) {\n    var f = {type:\"text\"};\n    f.text = c.getAttribute(\"aria-label\");\n    f.lastWord = axs.properties.getLastWord(f.text);\n    a ? f.unused = !0 : e && axs.utils.elementIsHtmlControl(c) || (a = f.text);\n    b.ariaLabel = f;\n  }\n  c.hasAttribute(\"role\") && \"presentation\" == c.getAttribute(\"role\") || (a = axs.properties.getTextFromHostLanguageAttributes(c, b, a, e));\n  e && axs.utils.elementIsHtmlControl(c) && (f = c.ownerDocument.defaultView, c instanceof f.HTMLInputElement && (\"text\" == c.type && c.value && 0 < c.value.length && (b.controlValue = {text:c.value}), \"range\" == c.type && (b.controlValue = {text:c.value})), c instanceof f.HTMLSelectElement && (b.controlValue = {text:c.value}), b.controlValue && (f = b.controlValue, a ? f.unused = !0 : a = f.text));\n  if (e && axs.utils.elementIsAriaWidget(c)) {\n    e = c.getAttribute(\"role\");\n    \"textbox\" == e && c.textContent && 0 < c.textContent.length && (b.controlValue = {text:c.textContent});\n    if (\"slider\" == e || \"spinbutton\" == e) {\n      c.hasAttribute(\"aria-valuetext\") ? b.controlValue = {text:c.getAttribute(\"aria-valuetext\")} : c.hasAttribute(\"aria-valuenow\") && (b.controlValue = {value:c.getAttribute(\"aria-valuenow\"), text:\"\" + c.getAttribute(\"aria-valuenow\")});\n    }\n    if (\"menu\" == e) {\n      for (var g = c.querySelectorAll(\"[role=menuitemcheckbox], [role=menuitemradio]\"), f = [], h = 0;h < g.length;h++) {\n        \"true\" == g[h].getAttribute(\"aria-checked\") && f.push(g[h]);\n      }\n      if (0 < f.length) {\n        g = \"\";\n        for (h = 0;h < f.length;h++) {\n          g += axs.properties.findTextAlternatives(f[h], {}, !0), h < f.length - 1 && (g += \", \");\n        }\n        b.controlValue = {text:g};\n      }\n    }\n    if (\"combobox\" == e || \"select\" == e) {\n      b.controlValue = {text:\"TODO\"};\n    }\n    b.controlValue && (f = b.controlValue, a ? f.unused = !0 : a = f.text);\n  }\n  f = !0;\n  c.hasAttribute(\"role\") && (e = c.getAttribute(\"role\"), (e = axs.constants.ARIA_ROLES[e]) && (!e.namefrom || 0 > e.namefrom.indexOf(\"contents\")) && (f = !1));\n  (d = axs.properties.getTextFromDescendantContent(c, d)) && f && (e = {type:\"text\"}, e.text = d, e.lastWord = axs.properties.getLastWord(e.text), a ? e.unused = !0 : a = d, b.content = e);\n  c.hasAttribute(\"title\") && (d = {type:\"string\", valid:!0}, d.text = c.getAttribute(\"title\"), d.lastWord = axs.properties.getLastWord(d.lastWord), a ? d.unused = !0 : a = d.text, b.title = d);\n  return 0 == Object.keys(b).length && null == a ? null : a;\n};\naxs.properties.getTextFromDescendantContent = function(a, b) {\n  for (var c = a.childNodes, d = [], e = 0;e < c.length;e++) {\n    var f = axs.properties.findTextAlternatives(c[e], {}, !0, b);\n    f && d.push(f.trim());\n  }\n  if (d.length) {\n    c = \"\";\n    for (e = 0;e < d.length;e++) {\n      c = [c, d[e]].join(\" \").trim();\n    }\n    return c;\n  }\n  return null;\n};\naxs.properties.getTextFromAriaLabelledby = function(a, b) {\n  var c = null;\n  if (!a.hasAttribute(\"aria-labelledby\")) {\n    return c;\n  }\n  for (var d = a.getAttribute(\"aria-labelledby\").split(/\\s+/), e = {valid:!0}, f = [], g = [], h = 0;h < d.length;h++) {\n    var k = {type:\"element\"}, m = d[h];\n    k.value = m;\n    var l = document.getElementById(m);\n    l ? (k.valid = !0, k.text = axs.properties.findTextAlternatives(l, {}, !0, !0), k.lastWord = axs.properties.getLastWord(k.text), f.push(k.text), k.element = l) : (k.valid = !1, e.valid = !1, k.errorMessage = {messageKey:\"noElementWithId\", args:[m]});\n    g.push(k);\n  }\n  0 < g.length && (g[g.length - 1].last = !0, e.values = g, e.text = f.join(\" \"), e.lastWord = axs.properties.getLastWord(e.text), c = e.text, b.ariaLabelledby = e);\n  return c;\n};\naxs.properties.getTextFromHostLanguageAttributes = function(a, b, c, d) {\n  if (axs.browserUtils.matchSelector(a, \"img\") && a.hasAttribute(\"alt\")) {\n    var e = {type:\"string\", valid:!0};\n    e.text = a.getAttribute(\"alt\");\n    c ? e.unused = !0 : c = e.text;\n    b.alt = e;\n  }\n  if (axs.browserUtils.matchSelector(a, 'input:not([type=\"hidden\"]):not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), video:not([disabled])') && !d) {\n    if (a.hasAttribute(\"id\")) {\n      d = document.querySelectorAll('label[for=\"' + a.id + '\"]');\n      for (var e = {}, f = [], g = [], h = 0;h < d.length;h++) {\n        var k = {type:\"element\"}, m = d[h], l = axs.properties.findTextAlternatives(m, {}, !0);\n        l && 0 < l.trim().length && (k.text = l.trim(), g.push(l.trim()));\n        k.element = m;\n        f.push(k);\n      }\n      0 < f.length && (f[f.length - 1].last = !0, e.values = f, e.text = g.join(\" \"), e.lastWord = axs.properties.getLastWord(e.text), c ? e.unused = !0 : c = e.text, b.labelFor = e);\n    }\n    d = axs.dom.parentElement(a);\n    for (e = {};d;) {\n      if (\"label\" == d.tagName.toLowerCase() && (f = d, f.control == a)) {\n        e.type = \"element\";\n        e.text = axs.properties.findTextAlternatives(f, {}, !0);\n        e.lastWord = axs.properties.getLastWord(e.text);\n        e.element = f;\n        break;\n      }\n      d = axs.dom.parentElement(d);\n    }\n    e.text && (c ? e.unused = !0 : c = e.text, b.labelWrapped = e);\n    axs.browserUtils.matchSelector(a, 'input[type=\"image\"]') && a.hasAttribute(\"alt\") && (e = {type:\"string\", valid:!0}, e.text = a.getAttribute(\"alt\"), c ? e.unused = !0 : c = e.text, b.alt = e);\n    Object.keys(b).length || (b.noLabel = !0);\n  }\n  return c;\n};\naxs.properties.getLastWord = function(a) {\n  if (!a) {\n    return null;\n  }\n  var b = a.lastIndexOf(\" \") + 1, c = a.length - 10;\n  return a.substring(b > c ? b : c);\n};\naxs.properties.getTextProperties = function(a) {\n  var b = {}, c = axs.properties.findTextAlternatives(a, b, !1, !0);\n  if (0 == Object.keys(b).length && ((a = axs.dom.asElement(a)) && axs.browserUtils.matchSelector(a, \"img\") && (b.alt = {valid:!1, errorMessage:\"No alt value provided\"}, a = a.src, \"string\" == typeof a && (c = a.split(\"/\").pop(), b.filename = {text:c})), !c)) {\n    return null;\n  }\n  b.hasProperties = !!Object.keys(b).length;\n  b.computedText = c;\n  b.lastWord = axs.properties.getLastWord(c);\n  return b;\n};\naxs.properties.getAriaProperties = function(a) {\n  var b = {}, c = axs.properties.getGlobalAriaProperties(a), d;\n  for (d in axs.constants.ARIA_PROPERTIES) {\n    var e = \"aria-\" + d;\n    if (a.hasAttribute(e)) {\n      var f = a.getAttribute(e);\n      c[e] = axs.utils.getAriaPropertyValue(e, f, a);\n    }\n  }\n  0 < Object.keys(c).length && (b.properties = axs.utils.values(c));\n  f = axs.utils.getRoles(a);\n  if (!f) {\n    return Object.keys(b).length ? b : null;\n  }\n  b.roles = f;\n  if (!f.valid || !f.roles) {\n    return b;\n  }\n  for (var e = f.roles, g = 0;g < e.length;g++) {\n    var h = e[g];\n    if (h.details && h.details.propertiesSet) {\n      for (d in h.details.propertiesSet) {\n        d in c || (a.hasAttribute(d) ? (f = a.getAttribute(d), c[d] = axs.utils.getAriaPropertyValue(d, f, a), \"values\" in c[d] && (f = c[d].values, f[f.length - 1].isLast = !0)) : h.details.requiredPropertiesSet[d] && (c[d] = {name:d, valid:!1, reason:\"Required property not set\"}));\n      }\n    }\n  }\n  0 < Object.keys(c).length && (b.properties = axs.utils.values(c));\n  return 0 < Object.keys(b).length ? b : null;\n};\naxs.properties.getGlobalAriaProperties = function(a) {\n  var b = {}, c;\n  for (c in axs.constants.GLOBAL_PROPERTIES) {\n    if (a.hasAttribute(c)) {\n      var d = a.getAttribute(c);\n      b[c] = axs.utils.getAriaPropertyValue(c, d, a);\n    }\n  }\n  return b;\n};\naxs.properties.getVideoProperties = function(a) {\n  if (!axs.browserUtils.matchSelector(a, \"video\")) {\n    return null;\n  }\n  var b = {};\n  b.captionTracks = axs.properties.getTrackElements(a, \"captions\");\n  b.descriptionTracks = axs.properties.getTrackElements(a, \"descriptions\");\n  b.chapterTracks = axs.properties.getTrackElements(a, \"chapters\");\n  return b;\n};\naxs.properties.getTrackElements = function(a, b) {\n  var c = a.querySelectorAll(\"track[kind=\" + b + \"]\"), d = {};\n  if (!c.length) {\n    return d.valid = !1, d.reason = {messageKey:\"noTracksProvided\", args:[[b]]}, d;\n  }\n  d.valid = !0;\n  for (var e = [], f = 0;f < c.length;f++) {\n    var g = {}, h = c[f].getAttribute(\"src\"), k = c[f].getAttribute(\"srcLang\"), m = c[f].getAttribute(\"label\");\n    h ? (g.valid = !0, g.src = h) : (g.valid = !1, g.reason = {messageKey:\"noSrcProvided\"});\n    h = \"\";\n    m && (h += m, k && (h += \" \"));\n    k && (h += \"(\" + k + \")\");\n    \"\" == h && (h = \"[[object Object]]\");\n    g.name = h;\n    e.push(g);\n  }\n  d.values = e;\n  return d;\n};\naxs.properties.getAllProperties = function(a) {\n  var b = axs.dom.asElement(a);\n  if (!b) {\n    return {};\n  }\n  var c = {};\n  c.ariaProperties = axs.properties.getAriaProperties(b);\n  c.colorProperties = axs.properties.getColorProperties(b);\n  c.focusProperties = axs.properties.getFocusProperties(b);\n  c.textProperties = axs.properties.getTextProperties(a);\n  c.videoProperties = axs.properties.getVideoProperties(b);\n  return c;\n};\n(function() {\n  function a(a) {\n    if (!a) {\n      return null;\n    }\n    var b = a.tagName;\n    if (!b) {\n      return null;\n    }\n    b = b.toUpperCase();\n    b = axs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO[b];\n    if (!b || !b.length) {\n      return null;\n    }\n    for (var d = null, e = 0, f = b.length;e < f;e++) {\n      var g = b[e];\n      if (g.selector) {\n        if (axs.browserUtils.matchSelector(a, g.selector)) {\n          return g;\n        }\n      } else {\n        d = g;\n      }\n    }\n    return d;\n  }\n  axs.properties.getImplicitRole = function(b) {\n    return (b = a(b)) ? b.role : \"\";\n  };\n  axs.properties.canTakeAriaAttributes = function(b) {\n    return (b = a(b)) ? !b.reserved : !0;\n  };\n})();\naxs.properties.getNativelySupportedAttributes = function(a) {\n  var b = [];\n  if (!a) {\n    return b;\n  }\n  a = a.cloneNode(!1);\n  for (var c = Object.keys(axs.constants.ARIA_TO_HTML_ATTRIBUTE), d = 0;d < c.length;d++) {\n    var e = c[d];\n    axs.constants.ARIA_TO_HTML_ATTRIBUTE[e] in a && (b[b.length] = e);\n  }\n  return b;\n};\n(function() {\n  var a = {};\n  axs.properties.getSelectorForRole = function(b) {\n    if (!b) {\n      return \"\";\n    }\n    if (a[b] && a.hasOwnProperty(b)) {\n      return a[b];\n    }\n    var c = ['[role=\"' + b + '\"]'];\n    Object.keys(axs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO).forEach(function(a) {\n      var d = axs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO[a];\n      if (d && d.length) {\n        for (var f = 0;f < d.length;f++) {\n          var g = d[f];\n          if (g.role === b) {\n            if (g.selector) {\n              c[c.length] = g.selector;\n            } else {\n              c[c.length] = a;\n              break;\n            }\n          }\n        }\n      }\n    });\n    return a[b] = c.join(\",\");\n  };\n})();\naxs.AuditRule = function(a) {\n  for (var b = a.opt_requires || {}, c = !0, d = [], e = 0;e < axs.AuditRule.requiredFields.length;e++) {\n    var f = axs.AuditRule.requiredFields[e];\n    f in a || (c = !1, d.push(f));\n  }\n  if (!c) {\n    throw \"Invalid spec; the following fields were not specified: \" + d.join(\", \") + \"\\n\" + JSON.stringify(a);\n  }\n  this.name = a.name;\n  this.severity = a.severity;\n  this.relevantElementMatcher_ = a.relevantElementMatcher;\n  this.isRelevant_ = a.isRelevant || function(a, b) {\n    return !0;\n  };\n  this.test_ = a.test;\n  this.code = a.code;\n  this.heading = a.heading || \"\";\n  this.url = a.url || \"\";\n  this.requiresConsoleAPI = !!b.consoleAPI;\n  this.relevantElements = [];\n  this.relatedElements = [];\n  this.collectIdRefs = b.idRefs || !1;\n};\naxs.AuditRule.requiredFields = \"name severity relevantElementMatcher test code heading\".split(\" \");\naxs.AuditRule.NOT_APPLICABLE = {result:axs.constants.AuditResult.NA};\naxs.AuditRule.prototype.addElement = function(a, b) {\n  a.push(b);\n};\naxs.AuditRule.prototype.collectMatchingElement = function(a, b) {\n  return this.relevantElementMatcher_(a, b) && b.inScope ? (this.relevantElements.push({element:a, flags:b}), !0) : !1;\n};\naxs.AuditRule.prototype.canRun = function(a) {\n  return this.disabled || !a.withConsoleApi && this.requiresConsoleAPI ? !1 : !0;\n};\naxs.AuditRule.Result = function(a, b) {\n  var c = axs.utils.namedValues(b);\n  c.severity = a.getSeverity(b.name) || c.severity;\n  this.rule = c;\n  this.maxResults = a.maxResults;\n  this.update(axs.constants.AuditResult.NA);\n};\naxs.AuditRule.Result.prototype.update = function(a, b) {\n  if (a === axs.constants.AuditResult.FAIL) {\n    var c = this.elements || (this.elements = []);\n    this.result = a;\n    this.maxResults && this.elements.length >= this.maxResults ? this.resultsTruncated = !0 : b && c.push(b);\n  } else {\n    a === axs.constants.AuditResult.PASS ? (this.elements || (this.elements = []), this.result !== axs.constants.AuditResult.FAIL && (this.result = a)) : this.result || (this.result = a);\n  }\n};\naxs.AuditRule.prototype.run = function(a) {\n  try {\n    for (var b = this._options || {}, c = new axs.AuditRule.Result(a, this), d;d = this.relevantElements.shift();) {\n      var e = d.element, f = d.flags;\n      this.isRelevant_(e, f) && (this.test_(e, f, b.config) ? c.update(axs.constants.AuditResult.FAIL, e) : c.update(axs.constants.AuditResult.PASS, e));\n    }\n    return c;\n  } finally {\n    this.relatedElements.length = 0;\n  }\n};\naxs.AuditRules = {};\n(function() {\n  var a = {}, b = {};\n  axs.AuditRules.specs = {};\n  axs.AuditRules.addRule = function(c) {\n    var d = new axs.AuditRule(c);\n    if (d.code in b) {\n      throw Error('Can not add audit rule with same code: \"' + d.code + '\"');\n    }\n    if (d.name in a) {\n      throw Error('Can not add audit rule with same name: \"' + d.name + '\"');\n    }\n    a[d.name] = b[d.code] = d;\n    axs.AuditRules.specs[c.name] = c;\n  };\n  axs.AuditRules.getRule = function(c) {\n    return a[c] || b[c] || null;\n  };\n  axs.AuditRules.getRules = function(b) {\n    var c = Object.keys(a);\n    return b ? c : c.map(function(a) {\n      return this.getRule(a);\n    }, axs.AuditRules);\n  };\n  axs.AuditRules.getActiveRules = function(a) {\n    var b;\n    b = a.auditRulesToRun && 0 < a.auditRulesToRun.length ? a.auditRulesToRun : axs.AuditRules.getRules(!0);\n    if (a.auditRulesToIgnore) {\n      for (var c = 0;c < a.auditRulesToIgnore.length;c++) {\n        var f = a.auditRulesToIgnore[c];\n        0 > b.indexOf(f) || b.splice(b.indexOf(f), 1);\n      }\n    }\n    return b.map(axs.AuditRules.getRule);\n  };\n})();\naxs.AuditResults = function() {\n  this.errors_ = [];\n  this.warnings_ = [];\n};\ngoog.exportSymbol(\"axs.AuditResults\", axs.AuditResults);\naxs.AuditResults.prototype.addError = function(a) {\n  \"\" != a && this.errors_.push(a);\n};\ngoog.exportProperty(axs.AuditResults.prototype, \"addError\", axs.AuditResults.prototype.addError);\naxs.AuditResults.prototype.addWarning = function(a) {\n  \"\" != a && this.warnings_.push(a);\n};\ngoog.exportProperty(axs.AuditResults.prototype, \"addWarning\", axs.AuditResults.prototype.addWarning);\naxs.AuditResults.prototype.numErrors = function() {\n  return this.errors_.length;\n};\ngoog.exportProperty(axs.AuditResults.prototype, \"numErrors\", axs.AuditResults.prototype.numErrors);\naxs.AuditResults.prototype.numWarnings = function() {\n  return this.warnings_.length;\n};\ngoog.exportProperty(axs.AuditResults.prototype, \"numWarnings\", axs.AuditResults.prototype.numWarnings);\naxs.AuditResults.prototype.getErrors = function() {\n  return this.errors_;\n};\ngoog.exportProperty(axs.AuditResults.prototype, \"getErrors\", axs.AuditResults.prototype.getErrors);\naxs.AuditResults.prototype.getWarnings = function() {\n  return this.warnings_;\n};\ngoog.exportProperty(axs.AuditResults.prototype, \"getWarnings\", axs.AuditResults.prototype.getWarnings);\naxs.AuditResults.prototype.toString = function() {\n  for (var a = \"\", b = 0;b < this.errors_.length;b++) {\n    0 == b && (a += \"\\nErrors:\\n\");\n    var c = this.errors_[b], a = a + (c + \"\\n\\n\");\n  }\n  for (b = 0;b < this.warnings_.length;b++) {\n    0 == b && (a += \"\\nWarnings:\\n\"), c = this.warnings_[b], a += c + \"\\n\\n\";\n  }\n  return a;\n};\ngoog.exportProperty(axs.AuditResults.prototype, \"toString\", axs.AuditResults.prototype.toString);\naxs.Audit = {};\naxs.AuditConfiguration = function(a) {\n  null == a && (a = {});\n  this.rules_ = {};\n  this.maxResults = this.auditRulesToIgnore = this.auditRulesToRun = this.scope = null;\n  this.withConsoleApi = !1;\n  this.showUnsupportedRulesWarning = this.walkDom = !0;\n  for (var b in this) {\n    this.hasOwnProperty(b) && b in a && (this[b] = a[b]);\n  }\n  goog.exportProperty(this, \"scope\", this.scope);\n  goog.exportProperty(this, \"auditRulesToRun\", this.auditRulesToRun);\n  goog.exportProperty(this, \"auditRulesToIgnore\", this.auditRulesToIgnore);\n  goog.exportProperty(this, \"withConsoleApi\", this.withConsoleApi);\n  goog.exportProperty(this, \"walkDom\", this.walkDom);\n  goog.exportProperty(this, \"showUnsupportedRulesWarning\", this.showUnsupportedRulesWarning);\n};\ngoog.exportSymbol(\"axs.AuditConfiguration\", axs.AuditConfiguration);\naxs.AuditConfiguration.prototype = {ignoreSelectors:function(a, b) {\n  a in this.rules_ || (this.rules_[a] = {});\n  \"ignore\" in this.rules_[a] || (this.rules_[a].ignore = []);\n  Array.prototype.push.call(this.rules_[a].ignore, b);\n}, getIgnoreSelectors:function(a) {\n  return a in this.rules_ && \"ignore\" in this.rules_[a] ? this.rules_[a].ignore : [];\n}, setSeverity:function(a, b) {\n  a in this.rules_ || (this.rules_[a] = {});\n  this.rules_[a].severity = b;\n}, getSeverity:function(a) {\n  return a in this.rules_ && \"severity\" in this.rules_[a] ? this.rules_[a].severity : null;\n}, setRuleConfig:function(a, b) {\n  a in this.rules_ || (this.rules_[a] = {});\n  this.rules_[a].config = b;\n}, getRuleConfig:function(a) {\n  return a in this.rules_ && \"config\" in this.rules_[a] ? this.rules_[a].config : null;\n}};\ngoog.exportProperty(axs.AuditConfiguration.prototype, \"ignoreSelectors\", axs.AuditConfiguration.prototype.ignoreSelectors);\ngoog.exportProperty(axs.AuditConfiguration.prototype, \"getIgnoreSelectors\", axs.AuditConfiguration.prototype.getIgnoreSelectors);\naxs.Audit.unsupportedRulesWarningShown = !1;\naxs.Audit.getRulesCannotRun = function(a) {\n  return a.withConsoleApi ? [] : axs.AuditRules.getRules().filter(function(a) {\n    return a.requiresConsoleAPI;\n  }).map(function(a) {\n    return a.code;\n  });\n};\naxs.Audit.run = function(a) {\n  a = a || new axs.AuditConfiguration;\n  if (!axs.Audit.unsupportedRulesWarningShown && a.showUnsupportedRulesWarning) {\n    var b = axs.Audit.getRulesCannotRun(a);\n    0 < b.length && (console.warn(\"Some rules cannot be checked using the axs.Audit.run() method call. Use the Chrome plugin to check these rules: \" + b.join(\", \")), console.warn(\"To remove this message, pass an AuditConfiguration object to axs.Audit.run() and set configuration.showUnsupportedRulesWarning = false.\"));\n    axs.Audit.unsupportedRulesWarningShown = !0;\n  }\n  b = axs.AuditRules.getActiveRules(a);\n  a.collectIdRefs = b.some(function(a) {\n    return a.collectIdRefs;\n  });\n  a.scope || (a.scope = document.documentElement);\n  axs.Audit.collectMatchingElements(a, b);\n  for (var c = [], d = 0;d < b.length;d++) {\n    var e = b[d];\n    e.canRun(a) && c.push(e.run(a));\n  }\n  return c;\n};\ngoog.exportSymbol(\"axs.Audit.run\", axs.Audit.run);\n(function() {\n  function a(a, c) {\n    var b = a.getIgnoreSelectors(c.name);\n    if (0 < b.length || a.scope) {\n      this.ignoreSelectors = b;\n    }\n    if (b = a.getRuleConfig(c.name)) {\n      this.config = b;\n    }\n  }\n  axs.Audit.collectMatchingElements = function(b, c) {\n    axs.dom.composedTreeSearch(b.walkDom ? document.documentElement : b.scope, null, {preorder:function(d, e) {\n      e.inScope || (e.inScope = d === b.scope);\n      for (var f = 0;f < c.length;f++) {\n        var g = c[f];\n        g.canRun(b) && (g._options = new a(b, g), e.ignoring[g.name] || (e.ignoring[g.name] = g._options.shouldIgnore(d)) || g.collectMatchingElement(d, e));\n      }\n      return !0;\n    }}, {walkDom:b.walkDom, collectIdRefs:b.collectIdRefs, level:0, ignoring:{}, disabled:!1, hidden:!1});\n  };\n  a.prototype.shouldIgnore = function(a) {\n    var b = this.ignoreSelectors;\n    if (b) {\n      for (var d = 0;d < b.length;d++) {\n        if (axs.browserUtils.matchSelector(a, b[d])) {\n          return !0;\n        }\n      }\n    }\n    return !1;\n  };\n})();\naxs.Audit.auditResults = function(a) {\n  for (var b = new axs.AuditResults, c = 0;c < a.length;c++) {\n    var d = a[c];\n    d.result == axs.constants.AuditResult.FAIL && (d.rule.severity == axs.constants.Severity.SEVERE ? b.addError(axs.Audit.accessibilityErrorMessage(d)) : b.addWarning(axs.Audit.accessibilityErrorMessage(d)));\n  }\n  return b;\n};\ngoog.exportSymbol(\"axs.Audit.auditResults\", axs.Audit.auditResults);\naxs.Audit.createReport = function(a, b) {\n  var c;\n  c = \"*** Begin accessibility audit results ***\\nAn accessibility audit found \" + axs.Audit.auditResults(a).toString();\n  b && (c = c + \"\\nFor more information, please see \" + b);\n  return c + \"\\n*** End accessibility audit results ***\";\n};\ngoog.exportSymbol(\"axs.Audit.createReport\", axs.Audit.createReport);\naxs.Audit.accessibilityErrorMessage = function(a) {\n  for (var b = a.rule.severity == axs.constants.Severity.SEVERE ? \"Error: \" : \"Warning: \", b = b + (a.rule.code + \" (\" + a.rule.heading + \") failed on the following \" + (1 == a.elements.length ? \"element\" : \"elements\")), b = 1 == a.elements.length ? b + \":\" : b + (\" (1 - \" + Math.min(5, a.elements.length) + \" of \" + a.elements.length + \"):\"), c = Math.min(a.elements.length, 5), d = 0;d < c;d++) {\n    var e = a.elements[d], b = b + \"\\n\";\n    try {\n      b += axs.utils.getQuerySelectorText(e);\n    } catch (f) {\n      b += \" tagName:\" + e.tagName, b += \" id:\" + e.id;\n    }\n  }\n  \"\" != a.rule.url && (b += \"\\nSee \" + a.rule.url + \" for more information.\");\n  return b;\n};\ngoog.exportSymbol(\"axs.Audit.accessibilityErrorMessage\", axs.Audit.accessibilityErrorMessage);\naxs.AuditRules.addRule({name:\"ariaOnReservedElement\", heading:\"This element does not support ARIA roles, states and properties\", url:\"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_12\", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return !axs.properties.canTakeAriaAttributes(a);\n}, test:function(a) {\n  return null !== axs.properties.getAriaProperties(a);\n}, code:\"AX_ARIA_12\"});\naxs.AuditRules.addRule({name:\"ariaOwnsDescendant\", heading:\"aria-owns should not be used if ownership is implicit in the DOM\", url:\"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_06\", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, \"[aria-owns]\");\n}, test:function(a) {\n  return axs.utils.getIdReferents(\"aria-owns\", a).some(function(b) {\n    return a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_CONTAINED_BY;\n  });\n}, code:\"AX_ARIA_06\"});\naxs.AuditRules.addRule({name:\"ariaRoleNotScoped\", heading:\"Elements with ARIA roles must be in the correct scope\", url:\"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_09\", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, \"[role]\");\n}, test:function(a) {\n  var b = axs.utils.getRoles(a);\n  if (!b || !b.applied) {\n    return !1;\n  }\n  b = b.applied.details.scope;\n  if (!b || 0 === b.length) {\n    return !1;\n  }\n  for (var c = a;c = axs.dom.parentElement(c);) {\n    var d = axs.utils.getRoles(c, !0);\n    if (d && d.applied && 0 <= b.indexOf(d.applied.name)) {\n      return !1;\n    }\n  }\n  if (a = axs.utils.getAriaIdReferrers(a, \"aria-owns\")) {\n    for (c = 0;c < a.length;c++) {\n      if ((d = axs.utils.getRoles(a[c], !0)) && d.applied && 0 <= b.indexOf(d.applied.name)) {\n        return !1;\n      }\n    }\n  }\n  return !0;\n}, code:\"AX_ARIA_09\"});\naxs.AuditRules.addRule({name:\"audioWithoutControls\", heading:\"Audio elements should have controls\", url:\"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_audio_01\", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, \"audio[autoplay]\");\n}, test:function(a) {\n  return !a.querySelectorAll(\"[controls]\").length && 3 < a.duration;\n}, code:\"AX_AUDIO_01\"});\n(function() {\n  var a = /^aria\\-/;\n  axs.AuditRules.addRule({name:\"badAriaAttribute\", heading:\"This element has an invalid ARIA attribute\", url:\"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_11\", severity:axs.constants.Severity.WARNING, relevantElementMatcher:function(b) {\n    b = b.attributes;\n    for (var c = 0, d = b.length;c < d;c++) {\n      if (a.test(b[c].name)) {\n        return !0;\n      }\n    }\n    return !1;\n  }, test:function(b) {\n    b = b.attributes;\n    for (var c = 0, d = b.length;c < d;c++) {\n      var e = b[c].name;\n      if (a.test(e) && (e = e.replace(a, \"\"), !axs.constants.ARIA_PROPERTIES.hasOwnProperty(e))) {\n        return !0;\n      }\n    }\n    return !1;\n  }, code:\"AX_ARIA_11\"});\n})();\naxs.AuditRules.addRule({name:\"badAriaAttributeValue\", heading:\"ARIA state and property values must be valid\", url:\"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_04\", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  var b = axs.utils.getSelectorForAriaProperties(axs.constants.ARIA_PROPERTIES);\n  return axs.browserUtils.matchSelector(a, b);\n}, test:function(a) {\n  for (var b in axs.constants.ARIA_PROPERTIES) {\n    var c = \"aria-\" + b;\n    if (a.hasAttribute(c)) {\n      var d = a.getAttribute(c);\n      if (!axs.utils.getAriaPropertyValue(c, d, a).valid) {\n        return !0;\n      }\n    }\n  }\n  return !1;\n}, code:\"AX_ARIA_04\"});\naxs.AuditRules.addRule({name:\"badAriaRole\", heading:\"Elements with ARIA roles must use a valid, non-abstract ARIA role\", url:\"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_01\", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  return axs.browserUtils.matchSelector(a, \"[role]\");\n}, test:function(a) {\n  return !axs.utils.getRoles(a).valid;\n}, code:\"AX_ARIA_01\"});\naxs.AuditRules.addRule({name:\"controlsWithoutLabel\", heading:\"Controls and media elements should have labels\", url:\"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_text_01\", severity:axs.constants.Severity.SEVERE, relevantElementMatcher:function(a) {\n  if (!axs.browserUtils.matchSelector(a, 'input:not([type=\"hidden\"]):not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), video:not([disabled])') || \"presentation\" == a.getAttribute(\"role\")) {\n    return !1;\n  }\n  if (0 <= a.tabIndex) {\n    return !0;\n  }\n  for (a = axs.dom.parentElement(a);null != a;a = axs.dom.parentElement(a)) {\n    if (axs.utils.elementIsAriaWidget(a)) {\n      return !1;\n    }\n  }\n  return !0;\n}, test:function(a, b) {\n  if (b.hidden || \"input\" == a.tagName.toLowerCase() && \"button\" == a.type && a.value.length || \"button\" == a.tagName.toLowerCase() && a.textContent.replace(/^\\s+|\\s+$/g, \"\").length || axs.utils.hasLabel(a)) {\n    return !1;\n  }\n  var c = axs.properties.findTextAlternatives(a, {});\n  return null === c || \"\" === c.trim() ? !0 : !1;\n}, code:\"AX_TEXT_01\", ruleName:\"Controls and media elements should have labels\"});\naxs.AuditRules.addRule({name:\"duplicateId\", heading:\"Any ID referred to via an IDREF must be unique in the DOM\", url:\"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_html_02\", severity:axs.constants.Severity.SEVERE, opt_requires:{idRefs:!0}, relevantElementMatcher:function(a, b) {\n  b.idrefs.length && !b.hidden && this.relatedElements.push({element:a, flags:b});\n  return a.hasAttribute(\"id\") ? !0 : !1;\n}, isRelevant:function(a, b) {\n  var c = a.id, d = b.level;\n  return this.relatedElements.some(function(a) {\n    var b = a.flags.idrefs;\n    return a.flags.level === d && 0 <= b.indexOf(c);\n  });\n}, test:function(a) {\n  var b = \"[id='\" + a.id.replace(/'/g, \"\\\\'\") + \"']\";\n  return 1 < a.ownerDocument.querySelectorAll(b).length;\n}, code:\"AX_HTML_02\"});\n\n  return axs;\n});\n\n// Define AMD module if possible, export globals otherwise.\nif (typeof define !== 'undefined' && define.amd) {\n  define([], fn);\n} else {\n  var axs = fn.call(this);\n}\n\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/Gruntfile.js":"module.exports = function(grunt) {\n  'use strict';\n\n  require('load-grunt-tasks')(grunt);\n  require('google-closure-compiler').grunt(grunt);\n\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n    changelog: 'Changelog.md',\n\n    'gh-release': {},\n\n    'closure-compiler': {\n      minify: {\n        requiresConfig: 'git-revision',\n        files: {\n          '.tmp/build/axs_testing.js': [\n              './lib/closure-library/closure/goog/base.js',\n              './src/js/axs.js',\n              './src/js/BrowserUtils.js',\n              './src/js/Constants.js',\n              './src/js/Color.js',\n              './src/js/DOMUtils.js',\n              './src/js/AccessibilityUtils.js',\n              './src/js/Properties.js',\n              './src/js/AuditRule.js',\n              './src/js/AuditRules.js',\n              './src/js/AuditResults.js',\n              './src/js/Audit.js',\n              './src/audits/*'\n          ]\n        },\n        options: {\n          'language_in': 'ECMASCRIPT5',\n          'formatting': 'PRETTY_PRINT',\n          'summary_detail_level': 3,\n          'warning_level': 'VERBOSE',\n          'compilation_level': 'SIMPLE_OPTIMIZATIONS',\n          'output_wrapper': \"<%= grunt.file.read('scripts/output_wrapper.txt') %>\",\n          'externs': './src/js/externs/externs.js'\n        }\n      }\n    },\n\n    qunit: {\n      all: ['test/index.html']\n    },\n\n    copy: {\n      dist: {\n        expand: true,\n        cwd: '.tmp/build',\n        src: '**/*',\n        dest: 'dist/js'\n      }\n    },\n\n    clean: {\n      local: ['.tmp'],\n      dist: ['dist']\n    },\n\n    bump: {\n      options: {\n        prereleaseName: 'rc',\n        files: ['package.json', 'bower.json'],\n        updateConfigs: ['pkg'],\n        pushTo: \"<%= grunt.config.get('gh-release.remote') %>\",\n        commitFiles: ['package.json', \"<%= grunt.config.get('changelog') %>\", 'bower.json', 'dist']\n      }\n    },\n\n    coffee: {\n      compile: {\n        files: {\n          '.tmp/util/gh_repo.js': 'scripts/gh_repo.coffee'\n        }\n      }\n    },\n\n    eslint: {\n        options: {\n            configFile: '.eslintrc'\n        },\n        target: ['./src/js/', './src/audits/', './Gruntfile.js', './main.js']\n    },\n\n    prompt: {\n      'gh-release': {\n        options: {\n          questions: [\n            {\n              config: 'gh-release.remote',\n              type: 'input',\n              message: 'Git Remote (usually upstream or origin)',\n              default: 'upstream',\n              validate: function(val) {\n                return (grunt.util._.size(val) > 0);\n              }\n            },\n            {\n              config: 'gh-release.repo',\n              type: 'input',\n              message: 'Github Repository',\n              default: 'GoogleChrome/accessibility-developer-tools',\n              validate: function(val) {\n                return (grunt.util._.size(val) > 0);\n              }\n            },\n            {\n              config: 'gh-release.username',\n              type: 'input',\n              message: 'Github Username',\n              validate: function(val) {\n                return (grunt.util._.size(val) > 0);\n              }\n            },\n            {\n              config: 'gh-release.password',\n              type: 'password',\n              message: 'Github Password or Token',\n              validate: function(val) {\n                return (grunt.util._.size(val) > 0);\n              }\n            }\n          ]\n        }\n      }\n    }\n  });\n\n  grunt.registerTask('changelog', function(type) {\n    grunt.task.requires('bump-only:' + type);\n\n    var dryRun = grunt.option('dry-run');\n    var config = {\n      data: {\n        version: grunt.config.get('pkg.version'),\n        releaseDate: grunt.template.today(\"yyyy-mm-dd\")\n      }\n    };\n\n    var stopRegex = /^\\#\\#\\ [0-9]+.*$/m;\n    var stopIndex = 0;\n    var releaseNotes = '';\n    var dest = grunt.config.get('changelog');\n    var contents = grunt.file.read(dest);\n    var headerTpl = \"## <%= version %> - <%= releaseDate %>\\n\\n\";\n    var header = grunt.template.process(headerTpl, config);\n\n    grunt.log.ok('changelog: Extracting release notes.');\n    if (contents.length > 0) {\n      if ((stopIndex = contents.search(stopRegex)) !== -1) {\n        releaseNotes = contents.slice(0, stopIndex);\n      }\n    }\n\n    grunt.config.set(\"gh-release.release-notes\", releaseNotes);\n\n    if (dryRun) {\n      grunt.log.ok('changelog (dry): Prepending header to ' + dest);\n      grunt.log.writeln(header);\n    } else {\n      grunt.file.write(dest, \"\" + header + contents);\n    }\n\n    grunt.log.writeln(\"Release Notes:\\n\" + releaseNotes);\n    grunt.log.ok('changelog: Task completed.');\n  });\n\n  grunt.registerTask('gh-release', function() {\n    // Compile and load GH Repo manager.\n    grunt.task.requires('coffee:compile');\n    var GHRepo = require('./.tmp/util/gh_repo');\n\n    var dryRun = grunt.option('dry-run');\n    var done = this.async();\n    var config = grunt.config.get('gh-release');\n    var pkg = grunt.config.get('pkg');\n    var currentRelease = 'v' + pkg.version;\n    var nextRelease = currentRelease.replace(/-rc\\.[0-9]+/, '');\n    var repo = new GHRepo(config);\n    repo.log = function() { grunt.log.writeln.apply(grunt, arguments); };\n\n    var payload = {\n      tag_name: currentRelease,\n      name: nextRelease,\n      body: config['release-notes'],\n      draft: true\n    };\n\n    grunt.log.writeln(\"gh-release: Searching for existing Github release:\", nextRelease);\n    repo.getReleaseByName(nextRelease)\n      .then(function(release) {\n        if (release) {\n          if (dryRun) {\n            grunt.log.ok('gh-release (dry): Updating existing Github release: ' + nextRelease);\n            done();\n          } else {\n            payload.body += \"\\n\" + release.body;\n            repo.updateRelease(release, payload).then(function() {\n              grunt.log.ok('Github release ' + nextRelease + ' updated successfully.');\n              done();\n            });\n          }\n        } else {\n          if (dryRun) {\n            grunt.log.ok('gh-release (dry): Creating new Github release: ' + nextRelease);\n            done();\n          } else {\n            repo.createRelease(payload).then(function() {\n              grunt.log.ok('Github release ' + nextRelease + ' created successfully');\n              done();\n            });\n          }\n        }\n      })\n      .catch(function(err) {\n        throw err;\n      });\n  });\n\n  grunt.registerTask('git-describe', function() {\n    // Start async task\n    var done = this.async();\n\n    grunt.util.spawn({\n      'cmd' : 'git',\n      'args' : [ 'rev-parse', 'HEAD' ],\n      'opts' : {\n        'cwd' : '.'\n      }\n    }, function(err, result) {\n      if (err) {\n          grunt.log.error(err).verbose.error(result);\n          done();\n          return;\n      }\n\n      grunt.event.emit('git-describe', result.stdout);\n      done();\n    });\n  });\n\n  grunt.registerTask('release', function(releaseType) {\n    if (typeof releaseType === 'undefined' || releaseType === null) {\n      grunt.fail.fatal('You must specify a release type. i.e. grunt release:prerelease');\n    }\n\n    var dryRun = grunt.option('dry-run');\n\n    var tasks = ['prompt:gh-release'];\n\n    if (dryRun) {\n      grunt.log.ok('Skipping build, clean:dist and copy:dist tasks in dry-run');\n    } else {\n      tasks.push('build', 'clean:dist', 'copy:dist');\n    }\n\n    tasks = tasks.concat([\n      'test:unit',\n      'bump-only:' + releaseType,\n      'changelog:' + releaseType,\n      'bump-commit',\n      'coffee:compile',\n      'gh-release'\n    ]);\n\n    grunt.task.run(tasks);\n  });\n\n  grunt.registerTask('save-revision', function() {\n    grunt.event.once('git-describe', function (rev) {\n      grunt.log.writeln('Git Revision: ' + rev);\n      grunt.config.set('git-revision', rev);\n    });\n    grunt.task.run('git-describe');\n  });\n\n  grunt.registerTask('build', ['clean:local', 'save-revision', 'closure-compiler:minify']);\n  grunt.registerTask('lint', ['eslint']);\n  grunt.registerTask('test:unit', ['qunit']);\n  grunt.registerTask('dist', ['clean:dist', 'build', 'copy:dist']);\n  grunt.registerTask('travis', ['closure-compiler:minify', 'test:unit']);\n  grunt.registerTask('default', ['build']);\n};\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/lib/closure-library/alltests.js":"// Copyright 2009 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar _allTests = [\n  'closure/goog/a11y/aria/announcer_test.html',\n  'closure/goog/a11y/aria/aria_test.html',\n  'closure/goog/array/array_test.html',\n  'closure/goog/asserts/asserts_test.html',\n  'closure/goog/async/animationdelay_test.html',\n  'closure/goog/async/conditionaldelay_test.html',\n  'closure/goog/async/debouncer_test.html',\n  'closure/goog/async/delay_test.html',\n  'closure/goog/async/nexttick_test.html',\n  'closure/goog/async/throttle_test.html',\n  'closure/goog/base_module_test.html',\n  'closure/goog/base_test.html',\n  'closure/goog/color/alpha_test.html',\n  'closure/goog/color/color_test.html',\n  'closure/goog/crypt/aes_test.html',\n  'closure/goog/crypt/arc4_test.html',\n  'closure/goog/crypt/base64_test.html',\n  'closure/goog/crypt/basen_test.html',\n  'closure/goog/crypt/blobhasher_test.html',\n  'closure/goog/crypt/cbc_test.html',\n  'closure/goog/crypt/crypt_test.html',\n  'closure/goog/crypt/hash32_test.html',\n  'closure/goog/crypt/hmac_test.html',\n  'closure/goog/crypt/md5_test.html',\n  'closure/goog/crypt/pbkdf2_test.html',\n  'closure/goog/crypt/sha1_test.html',\n  'closure/goog/crypt/sha224_test.html',\n  'closure/goog/crypt/sha256_test.html',\n  'closure/goog/crypt/sha2_64bit_test.html',\n  'closure/goog/cssom/cssom_test.html',\n  'closure/goog/cssom/iframe/style_test.html',\n  'closure/goog/datasource/datasource_test.html',\n  'closure/goog/datasource/expr_test.html',\n  'closure/goog/datasource/fastdatanode_test.html',\n  'closure/goog/datasource/jsxmlhttpdatasource_test.html',\n  'closure/goog/date/daterange_test.html',\n  'closure/goog/date/date_test.html',\n  'closure/goog/date/duration_test.html',\n  'closure/goog/date/relative_test.html',\n  'closure/goog/date/relativewithplurals_test.html',\n  'closure/goog/date/utcdatetime_test.html',\n  'closure/goog/debug/console_test.html',\n  'closure/goog/debug/debug_test.html',\n  'closure/goog/debug/debugwindow_test.html',\n  'closure/goog/debug/devcss/devcss_test.html',\n  'closure/goog/debug/enhanceerror_test.html',\n  'closure/goog/debug/entrypointregistry_test.html',\n  'closure/goog/debug/errorhandler_async_test.html',\n  'closure/goog/debug/errorhandler_test.html',\n  'closure/goog/debug/errorreporter_test.html',\n  'closure/goog/debug/error_test.html',\n  'closure/goog/debug/formatter_test.html',\n  'closure/goog/debug/fpsdisplay_test.html',\n  'closure/goog/debug/logbuffer_test.html',\n  'closure/goog/debug/logger_test.html',\n  'closure/goog/debug/logrecordserializer_test.html',\n  'closure/goog/debug/tracer_test.html',\n  'closure/goog/defineclass_test.html',\n  'closure/goog/disposable/disposable_test.html',\n  'closure/goog/dom/abstractrange_test.html',\n  'closure/goog/dom/annotate_test.html',\n  'closure/goog/dom/browserrange/browserrange_test.html',\n  'closure/goog/dom/bufferedviewportsizemonitor_test.html',\n  'closure/goog/dom/classes_quirks_test.html',\n  'closure/goog/dom/classes_test.html',\n  'closure/goog/dom/classlist_test.html',\n  'closure/goog/dom/controlrange_test.html',\n  'closure/goog/dom/dataset_test.html',\n  'closure/goog/dom/dom_test.html',\n  'closure/goog/dom/fontsizemonitor_test.html',\n  'closure/goog/dom/forms_test.html',\n  'closure/goog/dom/iframe_test.html',\n  'closure/goog/dom/inputtype_test.html',\n  'closure/goog/dom/iter_test.html',\n  'closure/goog/dom/multirange_test.html',\n  'closure/goog/dom/nodeiterator_test.html',\n  'closure/goog/dom/nodeoffset_test.html',\n  'closure/goog/dom/pattern/matcher_test.html',\n  'closure/goog/dom/pattern/pattern_test.html',\n  'closure/goog/dom/range_test.html',\n  'closure/goog/dom/safe_test.html',\n  'closure/goog/dom/savedcaretrange_test.html',\n  'closure/goog/dom/savedrange_test.html',\n  'closure/goog/dom/selection_test.html',\n  'closure/goog/dom/tagiterator_test.html',\n  'closure/goog/dom/tagname_test.html',\n  'closure/goog/dom/textrangeiterator_test.html',\n  'closure/goog/dom/textrange_test.html',\n  'closure/goog/dom/vendor_test.html',\n  'closure/goog/dom/viewportsizemonitor_test.html',\n  'closure/goog/dom/xml_test.html',\n  'closure/goog/editor/clicktoeditwrapper_test.html',\n  'closure/goog/editor/contenteditablefield_test.html',\n  'closure/goog/editor/field_test.html',\n  'closure/goog/editor/focus_test.html',\n  'closure/goog/editor/icontent_test.html',\n  'closure/goog/editor/link_test.html',\n  'closure/goog/editor/node_test.html',\n  'closure/goog/editor/plugins/abstractbubbleplugin_test.html',\n  'closure/goog/editor/plugins/abstractdialogplugin_test.html',\n  'closure/goog/editor/plugins/abstracttabhandler_test.html',\n  'closure/goog/editor/plugins/basictextformatter_test.html',\n  'closure/goog/editor/plugins/blockquote_test.html',\n  'closure/goog/editor/plugins/emoticons_test.html',\n  'closure/goog/editor/plugins/enterhandler_test.html',\n  'closure/goog/editor/plugins/firststrong_test.html',\n  'closure/goog/editor/plugins/headerformatter_test.html',\n  'closure/goog/editor/plugins/linkbubble_test.html',\n  'closure/goog/editor/plugins/linkdialogplugin_test.html',\n  'closure/goog/editor/plugins/linkshortcutplugin_test.html',\n  'closure/goog/editor/plugins/listtabhandler_test.html',\n  'closure/goog/editor/plugins/loremipsum_test.html',\n  'closure/goog/editor/plugins/removeformatting_test.html',\n  'closure/goog/editor/plugins/spacestabhandler_test.html',\n  'closure/goog/editor/plugins/tableeditor_test.html',\n  'closure/goog/editor/plugins/tagonenterhandler_test.html',\n  'closure/goog/editor/plugins/undoredomanager_test.html',\n  'closure/goog/editor/plugins/undoredostate_test.html',\n  'closure/goog/editor/plugins/undoredo_test.html',\n  'closure/goog/editor/plugin_test.html',\n  'closure/goog/editor/range_test.html',\n  'closure/goog/editor/seamlessfield_quirks_test.html',\n  'closure/goog/editor/seamlessfield_test.html',\n  'closure/goog/editor/style_test.html',\n  'closure/goog/editor/table_test.html',\n  'closure/goog/events/actioneventwrapper_test.html',\n  'closure/goog/events/actionhandler_test.html',\n  'closure/goog/events/browserevent_test.html',\n  'closure/goog/events/eventhandler_test.html',\n  'closure/goog/events/events_test.html',\n  'closure/goog/events/eventtarget_test.html',\n  'closure/goog/events/eventtarget_via_googevents_test.html',\n  'closure/goog/events/eventtarget_via_w3cinterface_test.html',\n  'closure/goog/events/event_test.html',\n  'closure/goog/events/filedrophandler_test.html',\n  'closure/goog/events/imehandler_test.html',\n  'closure/goog/events/inputhandler_test.html',\n  'closure/goog/events/keycodes_test.html',\n  'closure/goog/events/keyhandler_test.html',\n  'closure/goog/events/listenable_test.html',\n  'closure/goog/events/listenermap_test.html',\n  'closure/goog/events/mousewheelhandler_test.html',\n  'closure/goog/events/onlinelistener_test.html',\n  'closure/goog/events/pastehandler_test.html',\n  'closure/goog/events/wheelhandler_test.html',\n  'closure/goog/format/emailaddress_test.html',\n  'closure/goog/format/format_test.html',\n  'closure/goog/format/htmlprettyprinter_test.html',\n  'closure/goog/format/internationalizedemailaddress_test.html',\n  'closure/goog/format/jsonprettyprinter_test.html',\n  'closure/goog/fs/fs_test.html',\n  'closure/goog/fs/url_test.html',\n  'closure/goog/functions/functions_test.html',\n  'closure/goog/fx/abstractdragdrop_test.html',\n  'closure/goog/fx/anim/anim_test.html',\n  'closure/goog/fx/animationqueue_test.html',\n  'closure/goog/fx/animation_test.html',\n  'closure/goog/fx/css3/transition_test.html',\n  'closure/goog/fx/cssspriteanimation_test.html',\n  'closure/goog/fx/dragdropgroup_test.html',\n  'closure/goog/fx/dragger_test.html',\n  'closure/goog/fx/draglistgroup_test.html',\n  'closure/goog/fx/dragscrollsupport_test.html',\n  'closure/goog/fx/fx_test.html',\n  'closure/goog/graphics/affinetransform_test.html',\n  'closure/goog/graphics/canvasgraphics_test.html',\n  'closure/goog/graphics/ext/coordinates_test.html',\n  'closure/goog/graphics/ext/element_test.html',\n  'closure/goog/graphics/ext/path_test.html',\n  'closure/goog/graphics/paths_test.html',\n  'closure/goog/graphics/path_test.html',\n  'closure/goog/graphics/solidfill_test.html',\n  'closure/goog/graphics/svggraphics_test.html',\n  'closure/goog/history/history_test.html',\n  'closure/goog/history/html5history_test.html',\n  'closure/goog/html/flash_test.html',\n  'closure/goog/html/legacyconversions_test.html',\n  'closure/goog/html/safehtmlformatter_test.html',\n  'closure/goog/html/safehtml_test.html',\n  'closure/goog/html/safescript_test.html',\n  'closure/goog/html/safestylesheet_test.html',\n  'closure/goog/html/safestyle_test.html',\n  'closure/goog/html/safeurl_test.html',\n  'closure/goog/html/silverlight_test.html',\n  'closure/goog/html/trustedresourceurl_test.html',\n  'closure/goog/html/uncheckedconversions_test.html',\n  'closure/goog/html/utils_test.html',\n  'closure/goog/i18n/bidiformatter_test.html',\n  'closure/goog/i18n/bidi_test.html',\n  'closure/goog/i18n/charlistdecompressor_test.html',\n  'closure/goog/i18n/collation_test.html',\n  'closure/goog/i18n/currency_test.html',\n  'closure/goog/i18n/datetimeformat_test.html',\n  'closure/goog/i18n/datetimeparse_test.html',\n  'closure/goog/i18n/graphemebreak_test.html',\n  'closure/goog/i18n/messageformat_test.html',\n  'closure/goog/i18n/mime_test.html',\n  'closure/goog/i18n/numberformat_test.html',\n  'closure/goog/i18n/pluralrules_test.html',\n  'closure/goog/i18n/timezone_test.html',\n  'closure/goog/i18n/uchar/localnamefetcher_test.html',\n  'closure/goog/i18n/uchar/remotenamefetcher_test.html',\n  'closure/goog/i18n/uchar_test.html',\n  'closure/goog/iter/iter_test.html',\n  'closure/goog/json/hybridjsonprocessor_test.html',\n  'closure/goog/json/hybrid_test.html',\n  'closure/goog/json/json_test.html',\n  'closure/goog/json/processor_test.html',\n  'closure/goog/labs/events/nondisposableeventtarget_test.html',\n  'closure/goog/labs/events/nondisposableeventtarget_via_googevents_test.html',\n  'closure/goog/labs/events/touch_test.html',\n  'closure/goog/labs/format/csv_test.html',\n  'closure/goog/labs/i18n/listformat_test.html',\n  'closure/goog/labs/mock/mock_test.html',\n  'closure/goog/labs/net/image_test.html',\n  'closure/goog/labs/net/webchannel/channelrequest_test.html',\n  'closure/goog/labs/net/webchannel/forwardchannelrequestpool_test.html',\n  'closure/goog/labs/net/webchannel/webchannelbase_test.html',\n  'closure/goog/labs/net/webchannel/webchannelbasetransport_test.html',\n  'closure/goog/labs/net/webchannel/wirev8_test.html',\n  'closure/goog/labs/net/xhr_test.html',\n  'closure/goog/labs/storage/boundedcollectablestorage_test.html',\n  'closure/goog/labs/structs/map_test.html',\n  'closure/goog/labs/structs/multimap_test.html',\n  'closure/goog/labs/style/pixeldensitymonitor_test.html',\n  'closure/goog/labs/testing/assertthat_test.html',\n  'closure/goog/labs/testing/decoratormatcher_test.html',\n  'closure/goog/labs/testing/dictionarymatcher_test.html',\n  'closure/goog/labs/testing/environment_test.html',\n  'closure/goog/labs/testing/json_fuzzing_test.html',\n  'closure/goog/labs/testing/logicmatcher_test.html',\n  'closure/goog/labs/testing/numbermatcher_test.html',\n  'closure/goog/labs/testing/objectmatcher_test.html',\n  'closure/goog/labs/testing/stringmatcher_test.html',\n  'closure/goog/labs/useragent/browser_test.html',\n  'closure/goog/labs/useragent/device_test.html',\n  'closure/goog/labs/useragent/engine_test.html',\n  'closure/goog/labs/useragent/platform_test.html',\n  'closure/goog/labs/useragent/util_test.html',\n  'closure/goog/labs/useragent/verifier_test.html',\n  'closure/goog/locale/countrylanguagenames_test.html',\n  'closure/goog/locale/genericfontnames_test.html',\n  'closure/goog/locale/timezonedetection_test.html',\n  'closure/goog/locale/timezonelist_test.html',\n  'closure/goog/math/affinetransform_test.html',\n  'closure/goog/math/bezier_test.html',\n  'closure/goog/math/box_test.html',\n  'closure/goog/math/coordinate3_test.html',\n  'closure/goog/math/coordinate_test.html',\n  'closure/goog/math/exponentialbackoff_test.html',\n  'closure/goog/math/integer_test.html',\n  'closure/goog/math/interpolator/linear1_test.html',\n  'closure/goog/math/interpolator/pchip1_test.html',\n  'closure/goog/math/interpolator/spline1_test.html',\n  'closure/goog/math/line_test.html',\n  'closure/goog/math/long_test.html',\n  'closure/goog/math/math_test.html',\n  'closure/goog/math/matrix_test.html',\n  'closure/goog/math/paths_test.html',\n  'closure/goog/math/path_test.html',\n  'closure/goog/math/rangeset_test.html',\n  'closure/goog/math/range_test.html',\n  'closure/goog/math/rect_test.html',\n  'closure/goog/math/size_test.html',\n  'closure/goog/math/tdma_test.html',\n  'closure/goog/math/vec2_test.html',\n  'closure/goog/math/vec3_test.html',\n  'closure/goog/memoize/memoize_test.html',\n  'closure/goog/messaging/abstractchannel_test.html',\n  'closure/goog/messaging/bufferedchannel_test.html',\n  'closure/goog/messaging/deferredchannel_test.html',\n  'closure/goog/messaging/loggerclient_test.html',\n  'closure/goog/messaging/loggerserver_test.html',\n  'closure/goog/messaging/messaging_test.html',\n  'closure/goog/messaging/multichannel_test.html',\n  'closure/goog/messaging/portcaller_test.html',\n  'closure/goog/messaging/portchannel_test.html',\n  'closure/goog/messaging/portnetwork_test.html',\n  'closure/goog/messaging/portoperator_test.html',\n  'closure/goog/messaging/respondingchannel_test.html',\n  'closure/goog/module/moduleinfo_test.html',\n  'closure/goog/module/moduleloadcallback_test.html',\n  'closure/goog/module/moduleloader_test.html',\n  'closure/goog/module/modulemanager_test.html',\n  'closure/goog/net/browserchannel_test.html',\n  'closure/goog/net/bulkloader_test.html',\n  'closure/goog/net/channelrequest_test.html',\n  'closure/goog/net/cookies_test.html',\n  'closure/goog/net/corsxmlhttpfactory_test.html',\n  'closure/goog/net/crossdomainrpc_test.html',\n  'closure/goog/net/filedownloader_test.html',\n  'closure/goog/net/iframeio_different_base_test.html',\n  'closure/goog/net/iframeio_test.html',\n  'closure/goog/net/iframeloadmonitor_test.html',\n  'closure/goog/net/imageloader_test.html',\n  'closure/goog/net/ipaddress_test.html',\n  'closure/goog/net/jsloader_test.html',\n  'closure/goog/net/jsonp_test.html',\n  'closure/goog/net/multiiframeloadmonitor_test.html',\n  'closure/goog/net/networktester_test.html',\n  'closure/goog/net/streams/base64streamdecoder_test.html',\n  'closure/goog/net/streams/jsonstreamparser_test.html',\n  'closure/goog/net/streams/pbstreamparser_test.html',\n  'closure/goog/net/streams/xhrnodereadablestream_test.html',\n  'closure/goog/net/streams/xhrstreamreader_test.html',\n  'closure/goog/net/websocket_test.html',\n  'closure/goog/net/xhriopool_test.html',\n  'closure/goog/net/xhrio_test.html',\n  'closure/goog/net/xhrmanager_test.html',\n  'closure/goog/net/xpc/iframepollingtransport_test.html',\n  'closure/goog/net/xpc/nativemessagingtransport_test.html',\n  'closure/goog/object/object_test.html',\n  'closure/goog/positioning/anchoredposition_test.html',\n  'closure/goog/positioning/anchoredviewportposition_test.html',\n  'closure/goog/positioning/clientposition_test.html',\n  'closure/goog/positioning/menuanchoredposition_test.html',\n  'closure/goog/positioning/positioning_test.html',\n  'closure/goog/positioning/viewportclientposition_test.html',\n  'closure/goog/promise/promise_test.html',\n  'closure/goog/proto2/descriptor_test.html',\n  'closure/goog/proto2/fielddescriptor_test.html',\n  'closure/goog/proto2/message_test.html',\n  'closure/goog/proto2/objectserializer_test.html',\n  'closure/goog/proto2/pbliteserializer_test.html',\n  'closure/goog/proto2/proto_test.html',\n  'closure/goog/proto2/textformatserializer_test.html',\n  'closure/goog/proto/serializer_test.html',\n  'closure/goog/pubsub/pubsub_test.html',\n  'closure/goog/pubsub/typedpubsub_test.html',\n  'closure/goog/reflect/reflect_test.html',\n  'closure/goog/result/chain_test.html',\n  'closure/goog/result/combine_test.html',\n  'closure/goog/result/deferredadaptor_test.html',\n  'closure/goog/result/resultutil_test.html',\n  'closure/goog/result/simpleresult_test.html',\n  'closure/goog/result/transform_test.html',\n  'closure/goog/result/wait_test.html',\n  'closure/goog/soy/data_test.html',\n  'closure/goog/soy/renderer_test.html',\n  'closure/goog/soy/soy_test.html',\n  'closure/goog/spell/spellcheck_test.html',\n  'closure/goog/stats/basicstat_test.html',\n  'closure/goog/storage/collectablestorage_test.html',\n  'closure/goog/storage/encryptedstorage_test.html',\n  'closure/goog/storage/expiringstorage_test.html',\n  'closure/goog/storage/mechanism/errorhandlingmechanism_test.html',\n  'closure/goog/storage/mechanism/html5localstorage_test.html',\n  'closure/goog/storage/mechanism/html5sessionstorage_test.html',\n  'closure/goog/storage/mechanism/html5webstorage_test.html',\n  'closure/goog/storage/mechanism/ieuserdata_test.html',\n  'closure/goog/storage/mechanism/mechanismfactory_test.html',\n  'closure/goog/storage/mechanism/prefixedmechanism_test.html',\n  'closure/goog/storage/richstorage_test.html',\n  'closure/goog/storage/storage_test.html',\n  'closure/goog/string/const_test.html',\n  'closure/goog/string/linkify_test.html',\n  'closure/goog/string/newlines_test.html',\n  'closure/goog/string/path_test.html',\n  'closure/goog/string/stringbuffer_test.html',\n  'closure/goog/string/stringformat_test.html',\n  'closure/goog/string/string_test.html',\n  'closure/goog/structs/avltree_test.html',\n  'closure/goog/structs/circularbuffer_test.html',\n  'closure/goog/structs/collection_test.html',\n  'closure/goog/structs/heap_test.html',\n  'closure/goog/structs/inversionmap_test.html',\n  'closure/goog/structs/linkedmap_test.html',\n  'closure/goog/structs/map_test.html',\n  'closure/goog/structs/pool_test.html',\n  'closure/goog/structs/prioritypool_test.html',\n  'closure/goog/structs/priorityqueue_test.html',\n  'closure/goog/structs/quadtree_test.html',\n  'closure/goog/structs/queue_test.html',\n  'closure/goog/structs/set_test.html',\n  'closure/goog/structs/stringset_test.html',\n  'closure/goog/structs/structs_test.html',\n  'closure/goog/structs/treenode_test.html',\n  'closure/goog/structs/trie_test.html',\n  'closure/goog/style/bidi_test.html',\n  'closure/goog/style/cursor_test.html',\n  'closure/goog/style/style_document_scroll_test.html',\n  'closure/goog/style/style_quirks_test.html',\n  'closure/goog/style/style_test.html',\n  'closure/goog/style/style_webkit_scrollbars_test.html',\n  'closure/goog/style/transition_test.html',\n  'closure/goog/testing/asserts_test.html',\n  'closure/goog/testing/async/mockcontrol_test.html',\n  'closure/goog/testing/asynctestcase_async_test.html',\n  'closure/goog/testing/asynctestcase_noasync_test.html',\n  'closure/goog/testing/asynctestcase_test.html',\n  'closure/goog/testing/continuationtestcase_test.html',\n  'closure/goog/testing/deferredtestcase_test.html',\n  'closure/goog/testing/dom_test.html',\n  'closure/goog/testing/editor/dom_test.html',\n  'closure/goog/testing/editor/testhelper_test.html',\n  'closure/goog/testing/events/eventobserver_test.html',\n  'closure/goog/testing/events/events_test.html',\n  'closure/goog/testing/events/matchers_test.html',\n  'closure/goog/testing/events/onlinehandler_test.html',\n  'closure/goog/testing/expectedfailures_test.html',\n  'closure/goog/testing/fs/blob_test.html',\n  'closure/goog/testing/fs/directoryentry_test.html',\n  'closure/goog/testing/fs/entry_test.html',\n  'closure/goog/testing/fs/fileentry_test.html',\n  'closure/goog/testing/fs/filereader_test.html',\n  'closure/goog/testing/fs/filewriter_test.html',\n  'closure/goog/testing/fs/fs_test.html',\n  'closure/goog/testing/fs/integration_test.html',\n  'closure/goog/testing/functionmock_test.html',\n  'closure/goog/testing/i18n/asserts_test.html',\n  'closure/goog/testing/loosemock_test.html',\n  'closure/goog/testing/mockclassfactory_test.html',\n  'closure/goog/testing/mockclock_test.html',\n  'closure/goog/testing/mockcontrol_test.html',\n  'closure/goog/testing/mockmatchers_test.html',\n  'closure/goog/testing/mockrandom_test.html',\n  'closure/goog/testing/mockrange_test.html',\n  'closure/goog/testing/mockstorage_test.html',\n  'closure/goog/testing/mock_test.html',\n  'closure/goog/testing/mockuseragent_test.html',\n  'closure/goog/testing/multitestrunner_test.html',\n  'closure/goog/testing/net/xhrio_test.html',\n  'closure/goog/testing/parallel_closure_test_suite_test.html',\n  'closure/goog/testing/performancetimer_test.html',\n  'closure/goog/testing/propertyreplacer_test.html',\n  'closure/goog/testing/proto2/proto2_test.html',\n  'closure/goog/testing/pseudorandom_test.html',\n  'closure/goog/testing/recordfunction_test.html',\n  'closure/goog/testing/shardingtestcase_test.html',\n  'closure/goog/testing/singleton_test.html',\n  'closure/goog/testing/stacktrace_test.html',\n  'closure/goog/testing/strictmock_test.html',\n  'closure/goog/testing/style/layoutasserts_test.html',\n  'closure/goog/testing/style/style_test.html',\n  'closure/goog/testing/ui/rendererasserts_test.html',\n  'closure/goog/testing/ui/style_test.html',\n  'closure/goog/timer/timer_test.html',\n  'closure/goog/tweak/entries_test.html',\n  'closure/goog/tweak/registry_test.html',\n  'closure/goog/tweak/tweakui_test.html',\n  'closure/goog/ui/ac/ac_test.html',\n  'closure/goog/ui/ac/arraymatcher_test.html',\n  'closure/goog/ui/ac/autocomplete_test.html',\n  'closure/goog/ui/ac/cachingmatcher_test.html',\n  'closure/goog/ui/ac/inputhandler_test.html',\n  'closure/goog/ui/ac/remotearraymatcher_test.html',\n  'closure/goog/ui/ac/renderer_test.html',\n  'closure/goog/ui/advancedtooltip_test.html',\n  'closure/goog/ui/animatedzippy_test.html',\n  'closure/goog/ui/bidiinput_test.html',\n  'closure/goog/ui/buttonrenderer_test.html',\n  'closure/goog/ui/button_test.html',\n  'closure/goog/ui/charcounter_test.html',\n  'closure/goog/ui/charpicker_test.html',\n  'closure/goog/ui/checkbox_test.html',\n  'closure/goog/ui/colorbutton_test.html',\n  'closure/goog/ui/colormenubuttonrenderer_test.html',\n  'closure/goog/ui/colorpalette_test.html',\n  'closure/goog/ui/combobox_test.html',\n  'closure/goog/ui/component_test.html',\n  'closure/goog/ui/containerrenderer_test.html',\n  'closure/goog/ui/containerscroller_test.html',\n  'closure/goog/ui/container_test.html',\n  'closure/goog/ui/controlrenderer_test.html',\n  'closure/goog/ui/control_test.html',\n  'closure/goog/ui/cookieeditor_test.html',\n  'closure/goog/ui/customcolorpalette_test.html',\n  'closure/goog/ui/datepicker_test.html',\n  'closure/goog/ui/decorate_test.html',\n  'closure/goog/ui/dimensionpickerrenderer_test.html',\n  'closure/goog/ui/dimensionpicker_test.html',\n  'closure/goog/ui/drilldownrow_test.html',\n  'closure/goog/ui/editor/abstractdialog_test.html',\n  'closure/goog/ui/editor/linkdialog_test.html',\n  'closure/goog/ui/editor/toolbarfactory_test.html',\n  'closure/goog/ui/emoji/emojipicker_test.html',\n  'closure/goog/ui/emoji/popupemojipicker_test.html',\n  'closure/goog/ui/emoji/spriteinfo_test.html',\n  'closure/goog/ui/filteredmenu_test.html',\n  'closure/goog/ui/formpost_test.html',\n  'closure/goog/ui/hovercard_test.html',\n  'closure/goog/ui/hsvapalette_test.html',\n  'closure/goog/ui/hsvpalette_test.html',\n  'closure/goog/ui/idletimer_test.html',\n  'closure/goog/ui/iframemask_test.html',\n  'closure/goog/ui/inputdatepicker_test.html',\n  'closure/goog/ui/keyboardshortcuthandler_test.html',\n  'closure/goog/ui/media/flashobject_test.html',\n  'closure/goog/ui/media/flickr_test.html',\n  'closure/goog/ui/media/googlevideo_test.html',\n  'closure/goog/ui/media/mediamodel_test.html',\n  'closure/goog/ui/media/media_test.html',\n  'closure/goog/ui/media/mp3_test.html',\n  'closure/goog/ui/media/photo_test.html',\n  'closure/goog/ui/media/picasa_test.html',\n  'closure/goog/ui/media/vimeo_test.html',\n  'closure/goog/ui/media/youtube_test.html',\n  'closure/goog/ui/menubuttonrenderer_test.html',\n  'closure/goog/ui/menuitemrenderer_test.html',\n  'closure/goog/ui/menuitem_test.html',\n  'closure/goog/ui/menuseparatorrenderer_test.html',\n  'closure/goog/ui/menu_test.html',\n  'closure/goog/ui/mockactivitymonitor_test.html',\n  'closure/goog/ui/modalariavisibilityhelper_test.html',\n  'closure/goog/ui/modalpopup_test.html',\n  'closure/goog/ui/nativebuttonrenderer_test.html',\n  'closure/goog/ui/paletterenderer_test.html',\n  'closure/goog/ui/palette_test.html',\n  'closure/goog/ui/plaintextspellchecker_test.html',\n  'closure/goog/ui/popupbase_test.html',\n  'closure/goog/ui/popupcolorpicker_test.html',\n  'closure/goog/ui/popupdatepicker_test.html',\n  'closure/goog/ui/popupmenu_test.html',\n  'closure/goog/ui/popup_test.html',\n  'closure/goog/ui/prompt_test.html',\n  'closure/goog/ui/rangemodel_test.html',\n  'closure/goog/ui/registry_test.html',\n  'closure/goog/ui/richtextspellchecker_test.html',\n  'closure/goog/ui/roundedpanel_test.html',\n  'closure/goog/ui/scrollfloater_test.html',\n  'closure/goog/ui/selectionmenubutton_test.html',\n  'closure/goog/ui/selectionmodel_test.html',\n  'closure/goog/ui/select_test.html',\n  'closure/goog/ui/serverchart_test.html',\n  'closure/goog/ui/sliderbase_test.html',\n  'closure/goog/ui/splitbehavior_test.html',\n  'closure/goog/ui/splitpane_test.html',\n  'closure/goog/ui/style/app/buttonrenderer_test.html',\n  'closure/goog/ui/style/app/menubuttonrenderer_test.html',\n  'closure/goog/ui/style/app/primaryactionbuttonrenderer_test.html',\n  'closure/goog/ui/submenu_test.html',\n  'closure/goog/ui/tabbarrenderer_test.html',\n  'closure/goog/ui/tabbar_test.html',\n  'closure/goog/ui/tablesorter_test.html',\n  'closure/goog/ui/tabpane_test.html',\n  'closure/goog/ui/tabrenderer_test.html',\n  'closure/goog/ui/tab_test.html',\n  'closure/goog/ui/textarea_test.html',\n  'closure/goog/ui/toolbarcolormenubuttonrenderer_test.html',\n  'closure/goog/ui/toolbarseparatorrenderer_test.html',\n  'closure/goog/ui/toolbar_test.html',\n  'closure/goog/ui/tree/basenode_test.html',\n  'closure/goog/ui/tree/treecontrol_test.html',\n  'closure/goog/ui/tree/typeahead_test.html',\n  'closure/goog/ui/twothumbslider_test.html',\n  'closure/goog/ui/zippy_test.html',\n  'closure/goog/uri/uri_test.html',\n  'closure/goog/uri/utils_test.html',\n  'closure/goog/useragent/adobereader_test.html',\n  'closure/goog/useragent/flash_test.html',\n  'closure/goog/useragent/jscript_test.html',\n  'closure/goog/useragent/platform_test.html',\n  'closure/goog/useragent/product_test.html',\n  'closure/goog/useragent/useragent_quirks_test.html',\n  'closure/goog/useragent/useragent_test.html',\n  'closure/goog/vec/float32array_test.html',\n  'closure/goog/vec/float64array_test.html',\n  'closure/goog/vec/mat3d_test.html',\n  'closure/goog/vec/mat3f_test.html',\n  'closure/goog/vec/mat3_test.html',\n  'closure/goog/vec/mat4d_test.html',\n  'closure/goog/vec/mat4f_test.html',\n  'closure/goog/vec/mat4_test.html',\n  'closure/goog/vec/quaternion_test.html',\n  'closure/goog/vec/ray_test.html',\n  'closure/goog/vec/vec2d_test.html',\n  'closure/goog/vec/vec2f_test.html',\n  'closure/goog/vec/vec2_test.html',\n  'closure/goog/vec/vec3d_test.html',\n  'closure/goog/vec/vec3f_test.html',\n  'closure/goog/vec/vec3_test.html',\n  'closure/goog/vec/vec4d_test.html',\n  'closure/goog/vec/vec4f_test.html',\n  'closure/goog/vec/vec4_test.html',\n  'third_party/closure/goog/dojo/dom/query_test.html',\n  'third_party/closure/goog/loremipsum/text/loremipsum_test.html',\n  'third_party/closure/goog/mochikit/async/deferred_async_test.html',\n  'third_party/closure/goog/mochikit/async/deferredlist_test.html',\n  'third_party/closure/goog/mochikit/async/deferred_test.html'\n];\n\n// If we're running in a nodejs context, export tests. Used when running tests\n// externally on Travis.\nif (typeof module !== 'undefined' && module.exports) {\n  module.exports = _allTests;\n}\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/lib/closure-library/browser_capabilities.js":"var sauceBrowsers = require('./sauce_browsers.json');\n\nfunction getBrowserName(browserCap) {\n  var name = browserCap.browserName == 'internet explorer' ?\n      'ie' :\n      browserCap.browserName;\n  var version = browserCap.version || '-latest';\n  return name + version;\n}\n\nfunction getJobName(browserCap) {\n  var browserName = getBrowserName(browserCap);\n\n  return process.env.TRAVIS_PULL_REQUEST == 'false' ?\n      'CO-' + process.env.TRAVIS_BRANCH + '-' + browserName :\n      'PR-' + process.env.TRAVIS_PULL_REQUEST + '-' + browserName + '-' +\n          process.env.TRAVIS_BRANCH;\n}\n\nfunction getBrowserCapabilities(browsers) {\n  var caps = [];\n  for (var i = 0; i < browsers.length; i++) {\n    var b = browsers[i];\n    b['tunnel-identifier'] = process.env.TRAVIS_JOB_NUMBER;\n    b['build'] = process.env.TRAVIS_BUILD_NUMBER;\n    b['name'] = getJobName(b);\n    caps.push(b);\n  }\n  return caps;\n}\n\nmodule.exports = getBrowserCapabilities(sauceBrowsers);\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/lib/closure-library/protractor.conf.js":"// See https://github.com/angular/protractor/blob/master/docs/referenceConf.js\n// for full protractor config reference.\nvar browserCapabilities = require('./browser_capabilities');\n\nvar SAUCE_ACCESS_KEY =\n    process.env.SAUCE_ACCESS_KEY.split('').reverse().join('');\n\nexports.config = {\n  sauceUser: process.env.SAUCE_USERNAME,\n\n  sauceKey: SAUCE_ACCESS_KEY,\n\n  multiCapabilities: browserCapabilities,\n\n  // Testing framework used for spec file.\n  framework: 'jasmine2',\n\n  // Relative path to spec (i.e., tests).\n  specs: ['protractor_spec.js'],\n\n  jasmineNodeOpts: {\n    // Timeout in ms before a test fails.\n    defaultTimeoutInterval: 30 * 60 * 1000\n  }\n};\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/AriaOnReservedElement.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.properties');\n\n/**\n * Based on recommendations in document: http://www.w3.org/TR/aria-in-html/\n */\naxs.AuditRules.addRule({\n    name: 'ariaOnReservedElement',\n    heading: 'This element does not support ARIA roles, states and properties',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_12',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element) {\n        return !axs.properties.canTakeAriaAttributes(element);\n    },\n    test: function(element) {\n        return axs.properties.getAriaProperties(element) !== null;\n    },\n    code: 'AX_ARIA_12'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/AriaOwnsDescendant.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.utils');\n\n/**\n * This test checks that aria-owns does not reference an element that is already owned implicitly.\n */\naxs.AuditRules.addRule({\n    // TODO(RickSBrown): check for elements that try to 'aria-own' an ancestor;\n    // Also: own self does not make sense. Perhaps any IDREF pointing to itself is bad?\n    // Perhaps even extend this beyond ARIA (e.g. label for itself). Have to change return code?\n    // Also: other \"bad hierarchy\" tests - e.g. active-descendant owning a non-descendant...\n    name: 'ariaOwnsDescendant',\n    heading: 'aria-owns should not be used if ownership is implicit in the DOM',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_06',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element) {\n        return axs.browserUtils.matchSelector(element, '[aria-owns]');\n    },\n    test: function(element) {\n        var attr = 'aria-owns';\n        var ownedElements = axs.utils.getIdReferents(attr, element);\n        return ownedElements.some(function(ownedElement) {\n            return (element.compareDocumentPosition(ownedElement) & Node.DOCUMENT_POSITION_CONTAINED_BY);\n        });\n    },\n    code: 'AX_ARIA_06'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/AriaRoleNotScoped.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants');\ngoog.require('axs.dom');\ngoog.require('axs.utils');\n\n/**\n * This test checks ARIA roles which must be owned by another role.\n *    For example a role of `tab` can only exist within a `tablist`.\n *    This ownership can be represented implicitly by DOM hierarchy or explictly through the `aria-owns` attribute.\n */\naxs.AuditRules.addRule({\n    name: 'ariaRoleNotScoped',\n    heading: 'Elements with ARIA roles must be in the correct scope',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_09',\n    severity: axs.constants.Severity.SEVERE,\n    relevantElementMatcher: function(element) {\n        return axs.browserUtils.matchSelector(element, '[role]');\n    },\n    test: function(element) {\n        /*\n         * Checks that this element is in the required scope for its role.\n         */\n        var elementRole = axs.utils.getRoles(element);\n        if (!elementRole || !elementRole.applied)\n            return false;\n        var appliedRole = elementRole.applied;\n        var ariaRole = appliedRole.details;\n        var requiredScope = ariaRole['scope'];\n        if (!requiredScope || requiredScope.length === 0) {\n            return false;\n        }\n        var parent = element;\n        while (parent = axs.dom.parentElement(parent)) {\n            var parentRole = axs.utils.getRoles(parent, true);\n            if (parentRole && parentRole.applied) {\n                var appliedParentRole = parentRole.applied;\n                if (requiredScope.indexOf(appliedParentRole.name) >= 0)  // if this ancestor role is one of the required roles\n                    return false;\n            }\n        }\n        // If we made it this far then no DOM ancestor has a required scope role.\n        // Now we need to check if anything aria-owns this element.\n        var owners = axs.utils.getAriaIdReferrers(element, 'aria-owns');  // there can only be ONE explicit owner but that's a different test\n        if (owners) {\n            for (var i = 0; i < owners.length; i++) {\n                var ownerRole = axs.utils.getRoles(owners[i], true);\n                if (ownerRole && ownerRole.applied && requiredScope.indexOf(ownerRole.applied.name) >= 0)\n                    return false;  // the owner role is one of the required roles\n            }\n        }\n        return true;\n    },\n    code: 'AX_ARIA_09'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/AudioWithoutControls.js":"// Copyright 2013 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\n\n/**\n * This audit flags any audio elements that do not have controls.\n */\naxs.AuditRules.addRule({\n    name: 'audioWithoutControls',\n    heading: 'Audio elements should have controls',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_audio_01',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element) {\n        return axs.browserUtils.matchSelector(element, 'audio[autoplay]');\n    },\n    test: function(audio) {\n        var controls = audio.querySelectorAll('[controls]');\n        return !controls.length && audio.duration > 3;\n    },\n    code: 'AX_AUDIO_01'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/BadAriaAttribute.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.constants');\n\n(function() {\n    'use strict';\n    // Over many iterations significant performance gain not re-instantiating regex\n    var ARIA_ATTR_RE = /^aria\\-/;\n\n    /**\n     * This test basically looks for unknown attributes that start with 'aria-'.\n     *\n     * It is a warning because it is probably not \"illegal\" to use an expando that starts\n     *    with 'aria-', just a generally bad idea. Right?\n     *\n     * It will catch common typos like \"aria-labeledby\" and uncommon ones, like \"aria-helicopter\" :)\n     *\n     * @type {axs.AuditRule.Spec}\n     */\n    var badAriaAttribute = {\n        name: 'badAriaAttribute',\n        heading: 'This element has an invalid ARIA attribute',\n        url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_11',\n        severity: axs.constants.Severity.WARNING,\n        relevantElementMatcher: function(element) {\n            var attributes = element.attributes;\n            for (var i = 0, len = attributes.length; i < len; i++) {\n                if (ARIA_ATTR_RE.test(attributes[i].name)) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        test: function(element) {\n            var attributes = element.attributes;\n            for (var i = 0, len = attributes.length; i < len; i++) {\n                var attributeName = attributes[i].name;\n                if (ARIA_ATTR_RE.test(attributeName)) {\n                    var lookupName = attributeName.replace(ARIA_ATTR_RE, '');\n                    if (!axs.constants.ARIA_PROPERTIES.hasOwnProperty(lookupName)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        code: 'AX_ARIA_11'\n    };\n    axs.AuditRules.addRule(badAriaAttribute);\n})();\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/BadAriaAttributeValue.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants');\ngoog.require('axs.utils');\n\n/**\n * This audit checks the values of ARIA states and properties to ensure they are valid.\n */\naxs.AuditRules.addRule({\n    name: 'badAriaAttributeValue',\n    heading: 'ARIA state and property values must be valid',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_04',\n    severity: axs.constants.Severity.SEVERE,\n    relevantElementMatcher: function(element) {\n        var selector = axs.utils.getSelectorForAriaProperties(axs.constants.ARIA_PROPERTIES);\n        return axs.browserUtils.matchSelector(element, selector);\n    },\n    test: function(element) {\n        for (var property in axs.constants.ARIA_PROPERTIES) {\n            var ariaProperty = 'aria-' + property;\n            if (!element.hasAttribute(ariaProperty))\n                continue;\n            var propertyValueText = element.getAttribute(ariaProperty);\n            var propertyValue = axs.utils.getAriaPropertyValue(ariaProperty, propertyValueText, element);\n            if (!propertyValue.valid)\n                return true;\n        }\n        return false;\n    },\n    code: 'AX_ARIA_04'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/BadAriaRole.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants');\ngoog.require('axs.utils');\n\n/**\n * This audit checks the `role` attribute to ensure it contains a valid, non-abstract ARIA role.\n */\naxs.AuditRules.addRule({\n    name: 'badAriaRole',\n    heading: 'Elements with ARIA roles must use a valid, non-abstract ARIA role',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_01',\n    severity: axs.constants.Severity.SEVERE,\n    relevantElementMatcher: function(element) {\n        return axs.browserUtils.matchSelector(element, '[role]');\n    },\n    test: function(element) {\n        var roles = axs.utils.getRoles(element);\n        return !roles.valid;\n    },\n    code: 'AX_ARIA_01'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/ControlsWithoutLabel.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.dom');\ngoog.require('axs.utils');\n\n/**\n * This audit checks that form controls and media elements have labels.\n */\naxs.AuditRules.addRule({\n    name: 'controlsWithoutLabel',\n    heading: 'Controls and media elements should have labels',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_text_01',\n    severity: axs.constants.Severity.SEVERE,\n    relevantElementMatcher: function(element) {\n        var controlsSelector = ['input:not([type=\"hidden\"]):not([disabled])',\n                                'select:not([disabled])',\n                                'textarea:not([disabled])',\n                                'button:not([disabled])',\n                                'video:not([disabled])'].join(', ');\n        var isControl = axs.browserUtils.matchSelector(element, controlsSelector);\n        if (!isControl || element.getAttribute('role') == 'presentation')\n            return false;\n        if (element.tabIndex >= 0)\n            return true;\n        // Ignore elements which have negative tabindex and an ancestor with a\n        // widget role, since they can be accessed neither with tab nor with\n        // a screen reader\n        for (var parent = axs.dom.parentElement(element); parent != null;\n             parent = axs.dom.parentElement(parent)) {\n            if (axs.utils.elementIsAriaWidget(parent))\n                return false;\n        }\n        return true;\n    },\n    test: function(control, flags) {\n        if (flags.hidden)\n            return false;\n        if (control.tagName.toLowerCase() == 'input' &&\n            control.type == 'button' &&\n            control.value.length) {\n            return false;\n        }\n        if (control.tagName.toLowerCase() == 'button') {\n            var innerText = control.textContent.replace(/^\\s+|\\s+$/g, '');\n            if (innerText.length)\n                return false;\n        }\n        if (axs.utils.hasLabel(control))\n            return false;\n        var textAlternatives = axs.properties.findTextAlternatives(control, {});\n        if (textAlternatives === null || textAlternatives.trim() === '')\n            return true;\n        return false;\n    },\n    code: 'AX_TEXT_01',\n    ruleName: 'Controls and media elements should have labels'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/DuplicateId.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.utils');\n\n/**\n * This audit checks for duplicate IDs in the DOM.\n */\naxs.AuditRules.addRule({\n    name: 'duplicateId',\n    heading: 'Any ID referred to via an IDREF must be unique in the DOM',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_html_02',\n    severity: axs.constants.Severity.SEVERE,\n    opt_requires: {\n        idRefs: true\n    },\n    /**\n     * @this {axs.AuditRule}\n     */\n    relevantElementMatcher: function(element, flags) {\n        if (flags.idrefs.length && !flags.hidden) {\n            this.relatedElements.push({\n                element: element,\n                flags: flags\n            });\n        }\n        if (element.hasAttribute('id')) {\n            return true;\n        }\n        return false;\n    },\n    /**\n     * @this {axs.AuditRule}\n     */\n    isRelevant: function(element, flags) {\n        var id = element.id;\n        var level = flags.level;\n        return this.relatedElements.some(function(related) {\n            var idrefs = related.flags.idrefs;\n            return related.flags.level === level && idrefs.indexOf(id) >= 0;\n        });\n    },\n    test: function(element) {\n        /*\n         * Checks for duplicate IDs within the context of this element.\n         * This is not a pure a11y check however IDREF attributes in ARIA and HTML (label 'for', td 'headers)\n         *    depend on IDs being correctly implemented.\n         * Because this audit is noisy (in practice duplicate IDs are not unusual and often harmless)\n         *    we limit this audit to IDs which are actually referred to via any IDREF attribute.\n         */\n        var id = element.id;\n        var selector = '[id=\\'' + id.replace(/'/g, '\\\\\\'') + '\\']';\n        var elementsWithId = element.ownerDocument.querySelectorAll(selector);\n        return (elementsWithId.length > 1);\n    },\n    code: 'AX_HTML_02'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/FocusableElementNotVisibleAndNotAriaHidden.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.dom');\ngoog.require('axs.utils');\n\n/**\n * This audit checks for elements that are focusable but invisible or obscured by another element.\n */\naxs.AuditRules.addRule({\n    name: 'focusableElementNotVisibleAndNotAriaHidden',\n    heading: 'These elements are focusable but either invisible or obscured by another element',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_focus_01',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element) {\n        var isFocusable = axs.browserUtils.matchSelector(\n            element, axs.utils.FOCUSABLE_ELEMENTS_SELECTOR);\n        if (!isFocusable)\n            return false;\n        if (element.tabIndex >= 0)\n            return true;\n        // Ignore elements which have negative tabindex and an ancestor with a\n        // widget role, since they can be accessed neither with tab nor with\n        // a screen reader\n        for (var parent = axs.dom.parentElement(element); parent != null;\n             parent = axs.dom.parentElement(parent)) {\n            if (axs.utils.elementIsAriaWidget(parent))\n                return false;\n        }\n        // Ignore elements which have a negative tabindex and no text content,\n        // as they will be skipped by assistive technology\n        var textAlternatives = axs.properties.findTextAlternatives(element, {});\n        if (textAlternatives === null || textAlternatives.trim() === '')\n            return false;\n\n        return true;\n\n    },\n    test: function(element, flags) {\n        if (flags.hidden)\n            return false;\n        element.focus();\n        return !axs.utils.elementIsVisible(element);\n    },\n    code: 'AX_FOCUS_01'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/HumanLangMissing.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.constants.Severity');\n\naxs.AuditRules.addRule({\n    name: 'humanLangMissing',\n    heading: 'The web page should have the content\\'s human language indicated in the markup',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_html_01',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element) {\n        return element instanceof element.ownerDocument.defaultView.HTMLHtmlElement;\n    },\n    test: function(scope) {\n        if (!scope.lang)\n          return true;\n        return false;\n    },\n    code: 'AX_HTML_01'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/ImageWithoutAltText.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.properties');\ngoog.require('axs.utils');\n\naxs.AuditRules.addRule({\n    name: 'imagesWithoutAltText',\n    heading: 'Images should have a text alternative or presentational role',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_text_02',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element, flags) {\n        return axs.browserUtils.matchSelector(element, 'img') && !flags.hidden;\n    },\n    test: function(image) {\n        var imageIsPresentational = (image.hasAttribute('alt') && image.alt == '') || image.getAttribute('role') == 'presentation';\n        if (imageIsPresentational)\n            return false;\n        var textAlternatives = {};\n        axs.properties.findTextAlternatives(image, textAlternatives);\n        var numTextAlternatives = Object.keys(textAlternatives).length;\n        if (numTextAlternatives == 0)\n            return true;\n        return false;\n    },\n    code: 'AX_TEXT_02'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/LinkWithUnclearPurpose.js":"// Copyright 2013 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\n\n/**\n * The purpose of each link should be clear from the link text.\n */\naxs.AuditRules.addRule({\n    name: 'linkWithUnclearPurpose',\n    heading: 'The purpose of each link should be clear from the link text',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_text_04',\n    severity: axs.constants.Severity.WARNING,\n    /**\n     * @param {Element} element\n     * @return {boolean}\n     */\n    relevantElementMatcher: function(element, flags) {\n        return axs.browserUtils.matchSelector(element, 'a[href]') && !flags.hidden;\n    },\n    /**\n     * @param {Element} anchor\n     * @param {Object=} opt_config\n     * @return {boolean}\n     */\n    test: function(anchor, flags, opt_config) {\n        var config = opt_config || {};\n        var blacklistPhrases = config['blacklistPhrases'] || [];\n        var whitespaceRE = /\\s+/;\n        for (var i = 0; i < blacklistPhrases.length; i++) {\n            // Match the blacklist phrase, case insensitively, as the whole string (allowing for\n            // punctuation at the end).\n            // For example, a blacklist phrase of \"click here\" will match \"Click here.\" and\n            // \"click here...\" but not \"Click here to learn more about trout fishing\".\n            var phraseREString =\n                '^\\\\s*' + blacklistPhrases[i].trim().replace(whitespaceRE, '\\\\s*') + '\\s*[^a-z]$';\n            var phraseRE = new RegExp(phraseREString, 'i');\n            if (phraseRE.test(anchor.textContent))\n                return true;\n        }\n\n        // Remove punctuation from phrase, then strip out all stopwords. Fail if remaining text is\n        // all whitespace.\n        var stopwords = config['stopwords'] ||\n            ['click', 'tap', 'go', 'here', 'learn', 'more', 'this', 'page', 'link', 'about'];\n        var filteredText = axs.properties.findTextAlternatives(anchor, {});\n        if (filteredText === null || filteredText.trim() === '')\n            return true;\n        filteredText = filteredText.replace(/[^a-zA-Z ]/g, '');\n        for (var i = 0; i < stopwords.length; i++) {\n            var stopwordRE = new RegExp('\\\\b' + stopwords[i] + '\\\\b', 'ig');\n            filteredText = filteredText.replace(stopwordRE, '');\n            if (filteredText.trim() == '')\n                return true;\n        }\n        return false;\n    },\n    code: 'AX_TEXT_04'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/LowContrast.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.properties');\ngoog.require('axs.utils');\n\n/**\n * Text elements should have a reasonable contrast ratio\n */\naxs.AuditRules.addRule({\n    name: 'lowContrastElements',\n    heading: 'Text elements should have a reasonable contrast ratio',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_color_01',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element, flags) {\n        return !flags.disabled && axs.properties.hasDirectTextDescendant(element);\n    },\n    test: function(element) {\n        var style = window.getComputedStyle(element, null);\n        var contrastRatio =\n            axs.utils.getContrastRatioForElementWithComputedStyle(style, element);\n        return (contrastRatio && axs.utils.isLowContrast(contrastRatio, style));\n    },\n    code: 'AX_COLOR_01'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/MainRoleOnInappropriateElement.js":"// Copyright 2013 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.properties');\ngoog.require('axs.utils');\n\n/**\n * role=main should only appear on significant elements\n */\naxs.AuditRules.addRule({\n    name: 'mainRoleOnInappropriateElement',\n    heading: 'role=main should only appear on significant elements',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_05',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element) {\n        return axs.browserUtils.matchSelector(element, '[role~=main]');\n    },\n    test: function(element) {\n        if (axs.utils.isInlineElement(element))\n            return true;\n        var computedTextContent = axs.properties.getTextFromDescendantContent(element);\n        if (!computedTextContent || computedTextContent.length < 50)\n            return true;\n\n        return false;\n    },\n    code: 'AX_ARIA_05'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/MeaningfulBackgroundImage.js":"// Copyright 2013 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.utils');\n\n/**\n * Meaningful images should not be used in element backgrounds.\n */\naxs.AuditRules.addRule({\n    name: 'elementsWithMeaningfulBackgroundImage',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element, flags) {\n        return !flags.hidden;\n    },\n    heading: 'Meaningful images should not be used in element backgrounds',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_image_01',\n    test: function(el) {\n        if (el.textContent && el.textContent.length > 0) {\n            return false;\n        }\n        var style = window.getComputedStyle(el, null);\n        var bgImage = style.backgroundImage;\n        if (!bgImage || bgImage === 'undefined' || bgImage === 'none' ||\n                bgImage.indexOf('url') != 0) {\n            return false;\n        }\n        var width = parseInt(style.width, 10);\n        var height = parseInt(style.height, 10);\n        // TODO(bobbrose): could also check for background repeat and position.\n        return width < 150 && height < 150;\n    },\n    code: 'AX_IMAGE_01'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/MultipleAriaOwners.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.utils');\n\n/**\n * An element's ID must not be present in more that one aria-owns attribute at any time.\n */\naxs.AuditRules.addRule({\n    name: 'multipleAriaOwners',\n    heading: 'An element\\'s ID must not be present in more that one aria-owns attribute at any time',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_07',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element) {\n        /*\n         * While technically we could instead match elements with ID attribute\n         * if there are no [aria-owns] elements then this rule is not relevant.\n         * The fact that the element which will end up having an error is not\n         * one of these elements is OK.\n         */\n        return axs.browserUtils.matchSelector(element, '[aria-owns]');\n    },\n    test: function(element) {\n        var attr = 'aria-owns';\n        var ownedElements = axs.utils.getIdReferents(attr, element);\n        return ownedElements.some(function(ownedElement) {\n            var owners = axs.utils.getAriaIdReferrers(ownedElement, attr);\n            return (owners.length > 1);\n        });\n    },\n    code: 'AX_ARIA_07'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/MultipleLabelableElementsPerLabel.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.utils');\n\naxs.AuditRules.addRule({\n    name: 'multipleLabelableElementsPerLabel',\n    heading: 'A label element may not have labelable descendants other than its labeled control.',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#-ax_text_03--labels-should-only-contain-one-labelable-element',\n    severity: axs.constants.Severity.SEVERE,\n    relevantElementMatcher: function(element) {\n        return axs.browserUtils.matchSelector(element, 'label');\n    },\n    test: function(scope) {\n        var controls = scope.querySelectorAll(axs.utils.LABELABLE_ELEMENTS_SELECTOR);\n        if (controls.length > 1)\n            return true;\n    },\n    code: 'AX_TEXT_03'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/NonExistentAriaRelatedElement.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.utils');\n\n/**\n * Attributes which refer to other elements by ID should refer to elements which exist in the DOM'.\n */\naxs.AuditRules.addRule({\n    name: 'nonExistentRelatedElement',\n    heading: 'Attributes which refer to other elements by ID should refer to elements which exist in the DOM',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_html_03',\n    severity: axs.constants.Severity.SEVERE,\n    opt_requires: {\n        idRefs: true\n    },\n    relevantElementMatcher: function(element, flags) {\n        return flags.idrefs.length > 0;\n    },\n    test: function(element, flags) {\n        var idRefs = flags.idrefs;\n        var missing = idRefs.some(function(id) {\n            var refElement = document.getElementById(id);\n            return !refElement;\n        });\n        return missing;\n    },\n    code: 'AX_HTML_03'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/PageWithoutTitle.js":"// Copyright 2013 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.constants.Severity');\n\naxs.AuditRules.addRule({\n    name: 'pageWithoutTitle',\n    heading: 'The web page should have a title that describes topic or purpose',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_title_01',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element) {\n        return element.tagName.toLowerCase() == 'html';\n    },\n    test: function(scope) {\n        var head = scope.querySelector('head');\n        if (!head)\n          return true;\n        var title = head.querySelector('title');\n        if (!title)\n            return true;\n        return !title.textContent;\n    },\n    code: 'AX_TITLE_01'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/RequiredAriaAttributeMissing.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants');\ngoog.require('axs.properties');\ngoog.require('axs.utils');\n\naxs.AuditRules.addRule({\n    name: 'requiredAriaAttributeMissing',\n    heading: 'Elements with ARIA roles must have all required attributes for that role',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_03',\n    severity: axs.constants.Severity.SEVERE,\n    relevantElementMatcher: function(element) {\n        return axs.browserUtils.matchSelector(element, '[role]');\n    },\n    test: function(element) {\n        var roles = axs.utils.getRoles(element);\n        if (!roles.valid)\n            return false;  // That's a different error.\n        for (var i = 0; i < roles.roles.length; i++) {\n            var role = roles.roles[i];\n            var requiredProperties = role.details.requiredPropertiesSet;\n            for (var property in requiredProperties) {\n                var propertyKey = property.replace(/^aria-/, '');\n                var propertyDetails = axs.constants.ARIA_PROPERTIES[propertyKey];\n                if ('defaultValue' in propertyDetails)\n                    continue;\n                if (!element.hasAttribute(property)) {\n                    var nativelySupported = axs.properties.getNativelySupportedAttributes(element);\n                    if (nativelySupported.indexOf(property) < 0) {\n                        return true;\n                    }\n                }\n            }\n        }\n    },\n    code: 'AX_ARIA_03'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/RequiredOwnedAriaRoleMissing.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants');\ngoog.require('axs.utils');\n\n(function() {\n    /**\n     * @type {axs.AuditRule.Spec}\n     */\n    var spec = {\n        name: 'requiredOwnedAriaRoleMissing',\n        heading: 'Elements with ARIA roles must ensure required owned elements are present',\n        url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_08',\n        severity: axs.constants.Severity.SEVERE,\n        relevantElementMatcher: function(element) {\n            if (!axs.browserUtils.matchSelector(element, '[role]'))\n                return false;\n            var required = getRequired(element);\n            return required.length > 0;\n\n        },\n        test: function(element) {\n            /*\n             * Checks that this element contains everything it \"must contain\".\n             */\n            var busy = element.getAttribute('aria-busy');\n            if (busy === 'true')  // In future this will lower the severity of the warning instead\n                return false;  // https://github.com/GoogleChrome/accessibility-developer-tools/issues/101\n\n            var required = getRequired(element);\n            for (var i = required.length - 1; i >= 0; i--) {\n                var descendants = axs.utils.findDescendantsWithRole(element, required[i]);\n                if (descendants && descendants.length) {  // if we found at least one descendant with a required role\n                    return false;\n                }\n            }\n            // if we get to this point our element has 'required owned elements' but it does not own them implicitly in the DOM\n            var ownedElements = axs.utils.getIdReferents('aria-owns', element);\n            for (var i = ownedElements.length - 1; i >= 0; i--) {\n                var ownedElement = ownedElements[i];\n                var ownedElementRole = axs.utils.getRoles(ownedElement, true);\n                if (ownedElementRole && ownedElementRole.applied) {\n                    var appliedRole = ownedElementRole.applied;\n                    for (var j = required.length - 1; j >= 0; j--) {\n                        if (appliedRole.name === required[j]) {  // if this explicitly owned element has a required role\n                            return false;\n                        }\n                    }\n                }\n            }\n            return true;  // if we made it here then we did not find the required owned elements in the DOM\n        },\n        code: 'AX_ARIA_08'\n    };\n\n    /**\n     * Get a list of the roles this element must contain, if any, based on its ARIA role.\n     * @param {Element} element A DOM element.\n     * @return {Array.<string>} The roles this element must contain.\n     */\n    function getRequired(element) {\n        var elementRole = axs.utils.getRoles(element);\n        if (!elementRole || !elementRole.applied)\n            return [];\n        var appliedRole = elementRole.applied;\n        if (!appliedRole.valid)\n            return [];\n        return appliedRole.details['mustcontain'] || [];\n    }\n    axs.AuditRules.addRule(spec);\n})();\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/RoleTooltipRequiresDescribedBy.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.utils');\n\n/**\n * 'Elements with role=tooltip should have at least one other element with aria-describedby referring to them.'\n */\naxs.AuditRules.addRule({\n    name: 'roleTooltipRequiresDescribedby',\n    heading: 'Elements with role=tooltip should have a corresponding element with aria-describedby',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_02',\n    severity: axs.constants.Severity.SEVERE,\n    relevantElementMatcher: function(element, flags) {\n        return axs.browserUtils.matchSelector(element, '[role=tooltip]') && !flags.hidden;\n    },\n    test: function(element) {\n        var referrers = axs.utils.getAriaIdReferrers(element, 'aria-describedby');\n        return !referrers || referrers.length === 0;\n    },\n    code: 'AX_TOOLTIP_01'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/TabIndexGreaterThanZero.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\n\naxs.AuditRules.addRule({\n    name: 'tabIndexGreaterThanZero',\n    heading: 'Avoid positive integer values for tabIndex',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_focus_03',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element) {\n        var selector = '[tabindex]';\n        return axs.browserUtils.matchSelector(element, selector);\n    },\n    test: function(element) {\n        if (element.tabIndex > 0)\n            return true;\n    },\n    code: 'AX_FOCUS_03'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/TableHasAppropriateHeaders.js":"// Copyright 2015 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\n\n(function () {\n    /**\n     * Checks for a header row in a table.\n     *\n     * @param {NodeList} rows tr elements\n     * @returns {boolean} Table does not have a complete header row\n     */\n    function tableDoesNotHaveHeaderRow(rows) {\n        var headerRow = rows[0];\n\n        var headerCells = headerRow.children;\n\n        for (var i = 0; i < headerCells.length; i++) {\n            if (headerCells[i].tagName != 'TH') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Checks for a header column in a table.\n     *\n     * @param {NodeList} rows tr elements\n     * @returns {boolean} Table does not have a complete header column\n     */\n    function tableDoesNotHaveHeaderColumn(rows) {\n        for (var i = 0; i < rows.length; i++) {\n            if (rows[i].children[0].tagName != 'TH') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Checks whether a table has grid layout with both row and column headers.\n     *\n     * @param {NodeList} rows tr elements\n     * @returns {boolean} Table does not have a complete grid layout\n     */\n    function tableDoesNotHaveGridLayout(rows) {\n        var headerCells = rows[0].children;\n\n        for (var i = 1; i < headerCells.length; i++) {\n            if (headerCells[i].tagName != 'TH') {\n                return true;\n            }\n        }\n\n        for (var i = 1; i < rows.length; i++) {\n            if (rows[i].children[0].tagName != 'TH') {\n                return true;\n            }\n        }\n        return false;\n    }\n\t\n    /**\n     * Checks whether a table is a layout table.\n     *\n     * @returns {boolean} Table is a layout table\n     */\n    function isLayoutTable(element) {\n        if (element.childElementCount == 0) {\n            return true;\n        }\n\n        if (element.hasAttribute('role') && element.getAttribute('role') != 'presentation') {\n            return false;\n        }\n\n        if (element.getAttribute('role') == 'presentation') {\n            var tableChildren = element.querySelectorAll('*')\n\n            // layout tables should only contain TR and TD elements\n            for (var i = 0; i < tableChildren.length; i++) {\n                if (tableChildren[i].tagName != 'TR' && tableChildren[i].tagName != 'TD') {\n                    return false;\n                }\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    axs.AuditRules.addRule({\n        name: 'tableHasAppropriateHeaders',\n        heading: 'Tables should have appropriate headers',\n        url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_table_01',\n        severity: axs.constants.Severity.SEVERE,\n        relevantElementMatcher: function (element) {\n            return axs.browserUtils.matchSelector(element, 'table') && !isLayoutTable(element) && element.querySelectorAll('tr').length > 0;\n        },\n        test: function (element) {\n                var rows = element.querySelectorAll('tr');\n\n                return tableDoesNotHaveHeaderRow(rows) &&\n                    tableDoesNotHaveHeaderColumn(rows) &&\n                    tableDoesNotHaveGridLayout(rows);\n        },\n        code: 'AX_TABLE_01',\n    });\n})();\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/UncontrolledTabpanel.js":"// Copyright 2015 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\n\n(function() {\n    /**\n     * Checks if the tabpanel is labeled by a tab\n     *\n     * @param {Element} element the tabpanel element\n     * @returns {boolean} the tabpanel has an aria-labelledby with the id of a tab\n     */\n    function labeledByATab(element) {\n        if (element.hasAttribute('aria-labelledby')) {\n            var labelingElements = document.querySelectorAll('#' + element.getAttribute('aria-labelledby'));\n            return labelingElements.length === 1 && labelingElements[0].getAttribute('role') === 'tab';\n        }\n        return false;\n    }\n\n    /**\n     * Checks if the tabpanel is controlled by a tab\n     * @param {Element} element the tabpanel element\n     * @returns {*|boolean}\n     */\n    function controlledByATab(element) {\n        var controlledBy = document.querySelectorAll('[role=\"tab\"][aria-controls=\"' + element.id + '\"]')\n        return element.id && (controlledBy.length === 1);\n    }\n\n    // This rule addresses the suggested relationship between a tabpanel and a tab here:\n    // http://www.w3.org/TR/wai-aria/roles#tabpanel\n    axs.AuditRules.addRule({\n        name: \"uncontrolledTabpanel\",\n        heading: \"A tabpanel should be related to a tab via aria-controls or aria-labelledby\",\n        url: \"https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_13\",\n        severity: axs.constants.Severity.WARNING,\n        relevantElementMatcher: function(element) {\n            return axs.browserUtils.matchSelector(element, '[role=\"tabpanel\"]');\n        },\n        test: function(element) {\n            return !(controlledByATab(element) || labeledByATab(element));\n        },\n        code: 'AX_ARIA_13'\n    });\n})();\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/UnfocusableElementsWithOnClick.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.constants.Severity');\ngoog.require('axs.utils');\n\naxs.AuditRules.addRule({\n    name: 'unfocusableElementsWithOnClick',\n    heading: 'Elements with onclick handlers must be focusable',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_focus_02',\n    severity: axs.constants.Severity.WARNING,\n    opt_requires: {\n        consoleAPI: true\n    },\n    relevantElementMatcher: function(element, flags) {\n        // element.ownerDocument may not be current document if it is in an iframe\n        if (element instanceof element.ownerDocument.defaultView.HTMLBodyElement) {\n            return false;\n        }\n        if (flags.hidden) {\n            return false;\n        }\n        var eventListeners = getEventListeners(element);\n        if ('click' in eventListeners) {\n            return true;\n        }\n        return false;\n    },\n    test: function(element) {\n        return !element.hasAttribute('tabindex') &&\n               !axs.utils.isElementImplicitlyFocusable(element) &&\n               !element.disabled;\n    },\n    code: 'AX_FOCUS_02'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/UnsupportedAriaAttribute.js":"// Copyright 2014 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants');\ngoog.require('axs.utils');\n\n(function() {\n    'use strict';\n    // Over many iterations it makes a significant performance difference not to re-instantiate regex\n    var ARIA_ATTR_RE = /^aria\\-/;\n    // No need to compute the selector for every element in the DOM.\n    var selector = axs.utils.getSelectorForAriaProperties(axs.constants.ARIA_PROPERTIES);\n\n    /**\n     * This test looks for known ARIA states and properties that have been used with a role that does\n     *    not support it.\n     *\n     * Severe because people think they are converying information they are not. Right?\n     *\n     * @type {axs.AuditRule.Spec}\n     */\n    var unsupportedAriaAttribute = {\n        name: 'unsupportedAriaAttribute',\n        heading: 'This element has an unsupported ARIA attribute',\n        url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_aria_10',\n        severity: axs.constants.Severity.SEVERE,\n        relevantElementMatcher: function(element) {\n            return axs.browserUtils.matchSelector(element, selector);\n        },\n        test: function(element) {\n            // Even though we may not need to look up role, supported etc it's better performance to do it here than in loop\n            var role = axs.utils.getRoles(element, true);\n            var supported;\n            if (role && role.applied) {\n                supported = /** @type {Object<string, boolean>} */ (role.applied.details.propertiesSet);\n            } else {\n                // This test ignores the fact that some HTML elements should not take even global attributes.\n                supported = axs.constants.GLOBAL_PROPERTIES;\n            }\n            var attributes = element.attributes;\n            for (var i = 0, len = attributes.length; i < len; i++) {\n                var attributeName = attributes[i].name;\n                if (ARIA_ATTR_RE.test(attributeName)) {\n                    var lookupName = attributeName.replace(ARIA_ATTR_RE, '');\n                    // we're only interested in known aria properties\n                    if (axs.constants.ARIA_PROPERTIES.hasOwnProperty(lookupName) && !(attributeName in supported)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        code: 'AX_ARIA_10'\n    };\n    axs.AuditRules.addRule(unsupportedAriaAttribute);\n})();\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/audits/VideoWithoutCaptions.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRules');\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants.Severity');\n\naxs.AuditRules.addRule({\n    name: 'videoWithoutCaptions',\n    heading: 'Video elements should use <track> elements to provide captions',\n    url: 'https://github.com/GoogleChrome/accessibility-developer-tools/wiki/Audit-Rules#ax_video_01',\n    severity: axs.constants.Severity.WARNING,\n    relevantElementMatcher: function(element) {\n        return axs.browserUtils.matchSelector(element, 'video');\n    },\n    test: function(video) {\n        var captions = video.querySelectorAll('track[kind=captions]');\n        return !captions.length;\n    },\n    code: 'AX_VIDEO_01'\n});\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/AccessibilityUtils.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.browserUtils');\ngoog.require('axs.color');\ngoog.require('axs.color.Color');\ngoog.require('axs.constants');\ngoog.require('axs.dom');\n\ngoog.provide('axs.utils');\n\n/**\n * @const\n * @type {string}\n */\naxs.utils.FOCUSABLE_ELEMENTS_SELECTOR =\n    'input:not([type=hidden]):not([disabled]),' +\n    'select:not([disabled]),' +\n    'textarea:not([disabled]),' +\n    'button:not([disabled]),' +\n    'a[href],' +\n    'iframe,' +\n    '[tabindex]';\n\n/**\n * Elements that can have labels: https://html.spec.whatwg.org/multipage/forms.html#category-label\n * @const\n * @type {string}\n */\naxs.utils.LABELABLE_ELEMENTS_SELECTOR =\n    'button,' +\n    'input:not([type=hidden]),' +\n    'keygen,' +\n    'meter,' +\n    'output,' +\n    'progress,' +\n    'select,' +\n    'textarea';\n\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\naxs.utils.elementIsTransparent = function(element) {\n    return element.style.opacity == '0';\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\naxs.utils.elementHasZeroArea = function(element) {\n    var rect = element.getBoundingClientRect();\n    var width = rect.right - rect.left;\n    var height = rect.top - rect.bottom;\n    if (!width || !height)\n        return true;\n    return false;\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\naxs.utils.elementIsOutsideScrollArea = function(element) {\n    var parent = axs.dom.parentElement(element);\n\n    var defaultView = element.ownerDocument.defaultView;\n    while (parent != defaultView.document.body) {\n        if (axs.utils.isClippedBy(element, parent))\n            return true;\n\n        if (axs.utils.canScrollTo(element, parent) && !axs.utils.elementIsOutsideScrollArea(parent))\n            return false;\n\n        parent = axs.dom.parentElement(parent);\n    }\n\n    return !axs.utils.canScrollTo(element, defaultView.document.body);\n};\n\n/**\n * Checks whether it's possible to scroll to the given element within the given container.\n * Assumes that |container| is an ancestor of |element|.\n * If |container| cannot be scrolled, returns True if the element is within its bounding client\n * rect.\n * @param {Element} element\n * @param {Element} container\n * @return {boolean} True iff it's possible to scroll to |element| within |container|.\n */\naxs.utils.canScrollTo = function(element, container) {\n    var rect = element.getBoundingClientRect();\n    var containerRect = container.getBoundingClientRect();\n    if (container == container.ownerDocument.body) {\n        var absoluteTop = containerRect.top;\n        var absoluteLeft = containerRect.left;\n    } else {\n        var absoluteTop = containerRect.top - container.scrollTop;\n        var absoluteLeft = containerRect.left - container.scrollLeft;\n    }\n    var containerScrollArea =\n        { top: absoluteTop,\n          bottom: absoluteTop + container.scrollHeight,\n          left: absoluteLeft,\n          right: absoluteLeft + container.scrollWidth };\n\n    if (rect.right < containerScrollArea.left || rect.bottom < containerScrollArea.top ||\n        rect.left > containerScrollArea.right || rect.top > containerScrollArea.bottom) {\n        return false;\n    }\n\n    var defaultView = element.ownerDocument.defaultView;\n    var style = defaultView.getComputedStyle(container);\n\n    if (rect.left > containerRect.right || rect.top > containerRect.bottom) {\n        return (style.overflow == 'scroll' || style.overflow == 'auto' ||\n                container instanceof defaultView.HTMLBodyElement);\n    }\n\n    return true;\n};\n\n/**\n * Checks whether the given element is clipped by the given container.\n * Assumes that |container| is an ancestor of |element|.\n * @param {Element} element\n * @param {Element} container\n * @return {boolean} True iff |element| is clipped by |container|.\n */\naxs.utils.isClippedBy = function(element, container) {\n    var rect = element.getBoundingClientRect();\n    var containerRect = container.getBoundingClientRect();\n    var containerTop = containerRect.top;\n    var containerLeft = containerRect.left;\n    var containerScrollArea =\n        { top: containerTop - container.scrollTop,\n          bottom: containerTop - container.scrollTop + container.scrollHeight,\n          left: containerLeft - container.scrollLeft,\n          right: containerLeft - container.scrollLeft + container.scrollWidth };\n\n    var defaultView = element.ownerDocument.defaultView;\n    var style = defaultView.getComputedStyle(container);\n\n    if ((rect.right < containerRect.left || rect.bottom < containerRect.top ||\n             rect.left > containerRect.right || rect.top > containerRect.bottom) &&\n             style.overflow == 'hidden') {\n        return true;\n    }\n\n    if (rect.right < containerScrollArea.left || rect.bottom < containerScrollArea.top)\n        return (style.overflow != 'visible');\n\n    return false;\n};\n\n/**\n * @param {Node} ancestor A potential ancestor of |node|.\n * @param {Node} node\n * @return {boolean} true if |ancestor| is an ancestor of |node| (including\n *     |ancestor| === |node|).\n */\naxs.utils.isAncestor = function(ancestor, node) {\n    if (node == null)\n        return false;\n    if (node === ancestor)\n        return true;\n\n    var parentNode = axs.dom.composedParentNode(node);\n    return axs.utils.isAncestor(ancestor, parentNode);\n};\n\n/**\n * @param {Element} element\n * @return {Array.<Element>} An array of any non-transparent elements which\n *     overlap the given element.\n */\naxs.utils.overlappingElements = function(element) {\n    if (axs.utils.elementHasZeroArea(element))\n        return null;\n\n    var overlappingElements = [];\n    var clientRects = element.getClientRects();\n    for (var i = 0; i < clientRects.length; i++) {\n        var rect = clientRects[i];\n        var center_x = (rect.left + rect.right) / 2;\n        var center_y = (rect.top + rect.bottom) / 2;\n        var elementAtPoint = document.elementFromPoint(center_x, center_y);\n\n        if (elementAtPoint == null || elementAtPoint == element ||\n            axs.utils.isAncestor(elementAtPoint, element) ||\n            axs.utils.isAncestor(element, elementAtPoint)) {\n            continue;\n        }\n\n        var overlappingElementStyle = window.getComputedStyle(elementAtPoint, null);\n        if (!overlappingElementStyle)\n            continue;\n\n        var overlappingElementBg = axs.utils.getBgColor(overlappingElementStyle,\n                                                        elementAtPoint);\n        if (overlappingElementBg && overlappingElementBg.alpha > 0 &&\n            overlappingElements.indexOf(elementAtPoint) < 0) {\n            overlappingElements.push(elementAtPoint);\n        }\n    }\n\n    return overlappingElements;\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\naxs.utils.elementIsHtmlControl = function(element) {\n    var defaultView = element.ownerDocument.defaultView;\n\n    // HTML control\n    if (element instanceof defaultView.HTMLButtonElement)\n        return true;\n    if (element instanceof defaultView.HTMLInputElement)\n        return true;\n    if (element instanceof defaultView.HTMLSelectElement)\n        return true;\n    if (element instanceof defaultView.HTMLTextAreaElement)\n        return true;\n\n    return false;\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\naxs.utils.elementIsAriaWidget = function(element) {\n    if (element.hasAttribute('role')) {\n        var roleValue = element.getAttribute('role');\n        // TODO is this correct?\n        if (roleValue) {\n            var role = axs.constants.ARIA_ROLES[roleValue];\n            if (role && 'widget' in role['allParentRolesSet'])\n                return true;\n        }\n    }\n    return false;\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\naxs.utils.elementIsVisible = function(element) {\n    if (axs.utils.elementIsTransparent(element))\n        return false;\n    if (axs.utils.elementHasZeroArea(element))\n        return false;\n    if (axs.utils.elementIsOutsideScrollArea(element))\n        return false;\n\n    var overlappingElements = axs.utils.overlappingElements(element);\n    if (overlappingElements.length)\n        return false;\n\n    return true;\n};\n\n/**\n * @param {CSSStyleDeclaration} style\n * @return {boolean}\n */\naxs.utils.isLargeFont = function(style) {\n    var fontSize = style.fontSize;\n    var bold = style.fontWeight == 'bold';\n    var matches = fontSize.match(/(\\d+)px/);\n    if (matches) {\n        var fontSizePx = parseInt(matches[1], 10);\n        var bodyStyle = window.getComputedStyle(document.body, null);\n        var bodyFontSize = bodyStyle.fontSize;\n        matches = bodyFontSize.match(/(\\d+)px/);\n        if (matches) {\n            var bodyFontSizePx = parseInt(matches[1], 10);\n            var boldLarge = bodyFontSizePx * 1.2;\n            var large = bodyFontSizePx * 1.5;\n        } else {\n            var boldLarge = 19.2;\n            var large = 24;\n        }\n        return (bold && fontSizePx >= boldLarge || fontSizePx >= large);\n    }\n    matches = fontSize.match(/(\\d+)em/);\n    if (matches) {\n        var fontSizeEm = parseInt(matches[1], 10);\n        if (bold && fontSizeEm >= 1.2 || fontSizeEm >= 1.5)\n            return true;\n        return false;\n    }\n    matches = fontSize.match(/(\\d+)%/);\n    if (matches) {\n        var fontSizePercent = parseInt(matches[1], 10);\n        if (bold && fontSizePercent >= 120 || fontSizePercent >= 150)\n            return true;\n        return false;\n    }\n    matches = fontSize.match(/(\\d+)pt/);\n    if (matches) {\n        var fontSizePt = parseInt(matches[1], 10);\n        if (bold && fontSizePt >= 14 || fontSizePt >= 18)\n            return true;\n        return false;\n    }\n    return false;\n};\n\n/**\n * @param {CSSStyleDeclaration} style\n * @param {Element} element\n * @return {?axs.color.Color}\n */\naxs.utils.getBgColor = function(style, element) {\n    var bgColorString = style.backgroundColor;\n    var bgColor = axs.color.parseColor(bgColorString);\n    if (!bgColor)\n        return null;\n\n    if (style.opacity < 1)\n        bgColor.alpha = bgColor.alpha * style.opacity;\n\n    if (bgColor.alpha < 1) {\n        var parentBg = axs.utils.getParentBgColor(element);\n        if (parentBg == null)\n            return null;\n\n        bgColor = axs.color.flattenColors(bgColor, parentBg);\n    }\n    return bgColor;\n};\n\n/**\n * Gets the effective background color of the parent of |element|.\n * @param {Element} element\n * @return {?axs.color.Color}\n */\naxs.utils.getParentBgColor = function(element) {\n    /** @type {Element} */ var parent = element;\n    var bgStack = [];\n    var foundSolidColor = null;\n    while ((parent = axs.dom.parentElement(parent))) {\n        var computedStyle = window.getComputedStyle(parent, null);\n        if (!computedStyle)\n            continue;\n\n        var parentBg = axs.color.parseColor(computedStyle.backgroundColor);\n        if (!parentBg)\n            continue;\n\n        if (computedStyle.opacity < 1)\n            parentBg.alpha = parentBg.alpha * computedStyle.opacity;\n\n        if (parentBg.alpha == 0)\n            continue;\n\n        bgStack.push(parentBg);\n\n        if (parentBg.alpha == 1) {\n            foundSolidColor = true;\n            break;\n        }\n    }\n\n    if (!foundSolidColor)\n        bgStack.push(new axs.color.Color(255, 255, 255, 1));\n\n    var bg = bgStack.pop();\n    while (bgStack.length) {\n        var fg = bgStack.pop();\n        bg = axs.color.flattenColors(fg, bg);\n    }\n    return bg;\n};\n\n/**\n * @param {CSSStyleDeclaration} style\n * @param {Element} element\n * @param {axs.color.Color} bgColor The background color, which may come from\n *    another element (such as a parent element), for flattening into the\n *    foreground color.\n * @return {?axs.color.Color}\n */\naxs.utils.getFgColor = function(style, element, bgColor) {\n    var fgColorString = style.color;\n    var fgColor = axs.color.parseColor(fgColorString);\n    if (!fgColor)\n        return null;\n\n    if (fgColor.alpha < 1)\n        fgColor = axs.color.flattenColors(fgColor, bgColor);\n\n    if (style.opacity < 1) {\n        var parentBg = axs.utils.getParentBgColor(element);\n        fgColor.alpha = fgColor.alpha * style.opacity;\n        fgColor = axs.color.flattenColors(fgColor, parentBg);\n    }\n\n    return fgColor;\n};\n\n/**\n * @param {Element} element\n * @return {?number}\n */\naxs.utils.getContrastRatioForElement = function(element) {\n    var style = window.getComputedStyle(element, null);\n    return axs.utils.getContrastRatioForElementWithComputedStyle(style, element);\n};\n\n/**\n * @param {CSSStyleDeclaration} style\n * @param {Element} element\n * @return {?number}\n */\naxs.utils.getContrastRatioForElementWithComputedStyle = function(style, element) {\n    if (axs.utils.isElementHidden(element))\n        return null;\n\n    var bgColor = axs.utils.getBgColor(style, element);\n    if (!bgColor)\n        return null;\n\n    var fgColor = axs.utils.getFgColor(style, element, bgColor);\n    if (!fgColor)\n        return null;\n\n    return axs.color.calculateContrastRatio(fgColor, bgColor);\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\naxs.utils.isNativeTextElement = function(element) {\n    var tagName = element.tagName.toLowerCase();\n    var type = element.type ? element.type.toLowerCase() : '';\n    if (tagName == 'textarea')\n        return true;\n    if (tagName != 'input')\n        return false;\n\n    switch (type) {\n    case 'email':\n    case 'number':\n    case 'password':\n    case 'search':\n    case 'text':\n    case 'tel':\n    case 'url':\n    case '':\n        return true;\n    default:\n        return false;\n    }\n};\n\n/**\n * @param {number} contrastRatio\n * @param {CSSStyleDeclaration} style\n * @param {boolean=} opt_strict Whether to use AA (false) or AAA (true) level\n * @return {boolean}\n */\naxs.utils.isLowContrast = function(contrastRatio, style, opt_strict) {\n    // Round to nearest 0.1\n    var roundedContrastRatio = (Math.round(contrastRatio * 10) / 10);\n    if (!opt_strict) {\n        return roundedContrastRatio < 3.0 ||\n            (!axs.utils.isLargeFont(style) && roundedContrastRatio < 4.5);\n    } else {\n        return roundedContrastRatio < 4.5 ||\n            (!axs.utils.isLargeFont(style) && roundedContrastRatio < 7.0);\n    }\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\naxs.utils.hasLabel = function(element) {\n    var tagName = element.tagName.toLowerCase();\n    var type = element.type ? element.type.toLowerCase() : '';\n\n    if (element.hasAttribute('aria-label'))\n        return true;\n    if (element.hasAttribute('title'))\n        return true;\n    if (tagName == 'img' && element.hasAttribute('alt'))\n        return true;\n    if (tagName == 'input' && type == 'image' && element.hasAttribute('alt'))\n        return true;\n    if (tagName == 'input' && (type == 'submit' || type == 'reset'))\n        return true;\n\n    // There's a separate audit that makes sure this points to an actual element or elements.\n    if (element.hasAttribute('aria-labelledby'))\n        return true;\n\n    if (element.hasAttribute('id')) {\n        var labelsFor = document.querySelectorAll('label[for=\"' + element.id + '\"]');\n        if (labelsFor.length > 0)\n            return true;\n    }\n\n    var parent = axs.dom.parentElement(element);\n    while (parent) {\n        if (parent.tagName.toLowerCase() == 'label') {\n            var parentLabel = /** HTMLLabelElement */ parent;\n            if (parentLabel.control == element)\n                return true;\n        }\n        parent = axs.dom.parentElement(parent);\n    }\n    return false;\n};\n\n/**\n * Determine if this element natively supports being disabled (i.e. via the `disabled` attribute.\n * Disabled here means that the element should be considered disabled according to specification.\n * This element may or may not be effectively disabled in practice as this is dependent on implementation.\n *\n * @param {Element} element An element to check.\n * @return {boolean} true If the element supports being natively disabled.\n */\naxs.utils.isNativelyDisableable = function(element) {\n    var tagName = element.tagName.toUpperCase();\n    return (tagName in axs.constants.NATIVELY_DISABLEABLE);\n};\n\n/**\n * Determine if this element is disabled directly or indirectly by a disabled ancestor.\n * Disabled here means that the element should be considered disabled according to specification.\n * This element may or may not be effectively disabled in practice as this is dependent on implementation.\n *\n * @param {Element} element An element to check.\n * @param {boolean=} ignoreAncestors If true do not check for disabled ancestors.\n * @return {boolean} true if the element or one of its ancestors is disabled.\n */\naxs.utils.isElementDisabled = function(element, ignoreAncestors) {\n    var selector = ignoreAncestors ? '[aria-disabled=true]' : '[aria-disabled=true], [aria-disabled=true] *';\n    if (axs.browserUtils.matchSelector(element, selector)) {\n        return true;\n    }\n    if (!axs.utils.isNativelyDisableable(element) ||\n            axs.browserUtils.matchSelector(element, 'fieldset>legend:first-of-type *')) {\n        return false;\n    }\n    for (var next = element; next !== null; next = axs.dom.parentElement(next)) {\n        if (next.hasAttribute('disabled')) {\n            return true;\n        }\n        if (ignoreAncestors) {\n            return false;\n        }\n    }\n    return false;\n};\n\n/**\n * @param {Element} element An element to check.\n * @return {boolean} True if the element is hidden from accessibility.\n */\naxs.utils.isElementHidden = function(element) {\n    if (!(element instanceof element.ownerDocument.defaultView.HTMLElement))\n      return false;\n\n    if (element.hasAttribute('chromevoxignoreariahidden'))\n        var chromevoxignoreariahidden = true;\n\n    var style = window.getComputedStyle(element, null);\n    if (style.display == 'none' || style.visibility == 'hidden')\n        return true;\n\n    if (element.hasAttribute('aria-hidden') &&\n        element.getAttribute('aria-hidden').toLowerCase() == 'true') {\n        return !chromevoxignoreariahidden;\n    }\n\n    return false;\n};\n\n/**\n * @param {Element} element An element to check.\n * @return {boolean} True if the element or one of its ancestors is\n *     hidden from accessibility.\n */\naxs.utils.isElementOrAncestorHidden = function(element) {\n    if (axs.utils.isElementHidden(element))\n        return true;\n\n    if (axs.dom.parentElement(element))\n        return axs.utils.isElementOrAncestorHidden(axs.dom.parentElement(element));\n    else\n        return false;\n};\n\n/**\n * @param {Element} element An element to check\n * @return {boolean} True if the given element is an inline element, false\n *     otherwise.\n */\naxs.utils.isInlineElement = function(element) {\n    var tagName = element.tagName.toUpperCase();\n    return axs.constants.InlineElements[tagName];\n};\n\n/**\n *\n * Gets role details from an element.\n * @param {Element} element The DOM element whose role we want.\n * @param {boolean=} implicit if true then implicit semantics will be considered if there is no role attribute.\n *\n * @return {Object}\n */\naxs.utils.getRoles = function(element, implicit) {\n    if (!element || element.nodeType !== Node.ELEMENT_NODE || (!element.hasAttribute('role') && !implicit))\n        return null;\n    var roleValue = element.getAttribute('role');\n    if (!roleValue && implicit)\n        roleValue = axs.properties.getImplicitRole(element);\n    if (!roleValue)  // role='' or implicit role came up empty\n        return null;\n    var roleNames = roleValue.split(' ');\n    var result = { roles: [], valid: false };\n    for (var i = 0; i < roleNames.length; i++) {\n        var role = roleNames[i];\n        var ariaRole = axs.constants.ARIA_ROLES[role];\n        var roleObject = { 'name': role };\n        if (ariaRole && !ariaRole.abstract) {\n            roleObject.details = ariaRole;\n            if (!result.applied) {\n                result.applied = roleObject;\n            }\n            roleObject.valid = result.valid = true;\n        } else {\n            roleObject.valid = false;\n        }\n        result.roles.push(roleObject);\n    }\n\n    return result;\n};\n\n/**\n * @param {!string} propertyName\n * @param {!string} value\n * @param {!Element} element\n * @return {!Object}\n */\naxs.utils.getAriaPropertyValue = function(propertyName, value, element) {\n    var propertyKey = propertyName.replace(/^aria-/, '');\n    var property = axs.constants.ARIA_PROPERTIES[propertyKey];\n    var result = { 'name': propertyName, 'rawValue': value };\n    if (!property) {\n        result.valid = false;\n        result.reason = '\"' + propertyName + '\" is not a valid ARIA property';\n        return result;\n    }\n\n    var propertyType = property.valueType;\n    if (!propertyType) {\n        result.valid = false;\n        result.reason = '\"' + propertyName + '\" is not a valid ARIA property';\n        return result;\n    }\n\n    switch (propertyType) {\n    case \"idref\":\n        var isValid = axs.utils.isValidIDRefValue(value, element);\n        result.valid = isValid.valid;\n        result.reason = isValid.reason;\n        result.idref = isValid.idref;\n        // falls through\n    case \"idref_list\":\n        var idrefValues = value.split(/\\s+/);\n        result.valid = true;\n        for (var i = 0; i < idrefValues.length; i++) {\n            var refIsValid = axs.utils.isValidIDRefValue(idrefValues[i],  element);\n            if (!refIsValid.valid)\n                result.valid = false;\n            if (result.values)\n                result.values.push(refIsValid);\n            else\n                result.values = [refIsValid];\n        }\n        return result;\n    case \"integer\":\n        var validNumber = axs.utils.isValidNumber(value);\n        if (!validNumber.valid) {\n            result.valid = false;\n            result.reason = validNumber.reason;\n            return result;\n        }\n        if (Math.floor(validNumber.value) !== validNumber.value) {\n            result.valid = false;\n            result.reason = '' + value + ' is not a whole integer';\n        } else {\n            result.valid = true;\n            result.value = validNumber.value;\n        }\n        return result;\n    case \"decimal\":\n    case \"number\":\n        var validNumber = axs.utils.isValidNumber(value);\n        result.valid = validNumber.valid;\n        if (!validNumber.valid) {\n            result.reason = validNumber.reason;\n            return result;\n        }\n        result.value = validNumber.value;\n        return result;\n    case \"string\":\n        result.valid = true;\n        result.value = value;\n        return result;\n    case \"token\":\n        var validTokenValue = axs.utils.isValidTokenValue(propertyName, value.toLowerCase());\n        if (validTokenValue.valid) {\n            result.valid = true;\n            result.value = validTokenValue.value;\n            return result;\n        } else {\n            result.valid = false;\n            result.value = value;\n            result.reason = validTokenValue.reason;\n            return result;\n        }\n        // falls through\n    case \"token_list\":\n        var tokenValues = value.split(/\\s+/);\n        result.valid = true;\n        for (var i = 0; i < tokenValues.length; i++) {\n            var validTokenValue = axs.utils.isValidTokenValue(propertyName, tokenValues[i].toLowerCase());\n            if (!validTokenValue.valid) {\n                result.valid = false;\n                if (result.reason) {\n                    result.reason = [ result.reason ];\n                    result.reason.push(validTokenValue.reason);\n                } else {\n                    result.reason = validTokenValue.reason;\n                    result.possibleValues = validTokenValue.possibleValues;\n                }\n            }\n            // TODO (more structured result)\n            if (result.values)\n                result.values.push(validTokenValue.value);\n            else\n                result.values = [validTokenValue.value];\n        }\n        return result;\n    case \"tristate\":\n        var validTristate = axs.utils.isPossibleValue(value.toLowerCase(), axs.constants.MIXED_VALUES, propertyName);\n        if (validTristate.valid) {\n            result.valid = true;\n            result.value = validTristate.value;\n        } else {\n            result.valid = false;\n            result.value = value;\n            result.reason = validTristate.reason;\n        }\n        return result;\n    case \"boolean\":\n        var validBoolean = axs.utils.isValidBoolean(value);\n        if (validBoolean.valid) {\n            result.valid = true;\n            result.value = validBoolean.value;\n        } else {\n            result.valid = false;\n            result.value = value;\n            result.reason = validBoolean.reason;\n        }\n        return result;\n    }\n    result.valid = false;\n    result.reason = 'Not a valid ARIA property';\n    return result;\n};\n\n/**\n * @param {string} propertyName The name of the property.\n * @param {string} value The value to check.\n * @return {!Object}\n */\naxs.utils.isValidTokenValue = function(propertyName, value) {\n    var propertyKey = propertyName.replace(/^aria-/, '');\n    var propertyDetails = axs.constants.ARIA_PROPERTIES[propertyKey];\n    var possibleValues = propertyDetails.valuesSet;\n    return axs.utils.isPossibleValue(value, possibleValues, propertyName);\n};\n\n/**\n * @param {string} value\n * @param {Object.<string, boolean>} possibleValues\n * @param {string} propertyName The name of the property.\n * @return {!Object}\n */\naxs.utils.isPossibleValue = function(value, possibleValues, propertyName) {\n    if (!possibleValues[value])\n        return { 'valid': false,\n                 'value': value,\n                 'reason': '\"' + value + '\" is not a valid value for ' + propertyName,\n                 'possibleValues': Object.keys(possibleValues) };\n    return { 'valid': true, 'value': value };\n};\n\n/**\n * @param {string} value\n * @return {!Object}\n */\naxs.utils.isValidBoolean = function(value) {\n    try {\n        var parsedValue = JSON.parse(value);\n    } catch (e) {\n        parsedValue = '';\n    }\n    if (typeof(parsedValue) != 'boolean')\n        return { 'valid': false,\n                 'value': value,\n                 'reason': '\"' + value + '\" is not a true/false value' };\n    return { 'valid': true, 'value': parsedValue };\n};\n\n/**\n * @param {string} value\n * @param {!Element} element\n * @return {!Object}\n */\naxs.utils.isValidIDRefValue = function(value, element) {\n    if (value.length == 0)\n        return { 'valid': true, 'idref': value };\n    if (!element.ownerDocument.getElementById(value))\n        return { 'valid': false,\n                 'idref': value,\n                 'reason': 'No element with ID \"' + value + '\"' };\n    return { 'valid': true, 'idref': value };\n};\n\n/**\n * Tests if a number is real number for a11y purposes.\n * Must be a real, numerical, decimal value; heavily inspired by\n *    http://www.w3.org/TR/wai-aria/states_and_properties#valuetype_number\n * @param {string} value\n * @return {!Object}\n */\naxs.utils.isValidNumber = function(value) {\n    var failResult = {\n        'valid': false,\n        'value': value,\n        'reason': '\"' + value + '\" is not a number'\n    };\n    if (!value) {\n        return failResult;\n    }\n    if (/^0x/i.test(value)) {\n        failResult.reason = '\"' + value + '\" is not a decimal number';  // hex is not accepted\n        return failResult;\n    }\n    var parsedValue = value * 1;\n    if (!isFinite(parsedValue)) {\n        return failResult;\n    }\n    return { 'valid': true, 'value': parsedValue };\n};\n\n/**\n * @param {Element} element\n * @return {boolean}\n */\naxs.utils.isElementImplicitlyFocusable = function(element) {\n    var defaultView = element.ownerDocument.defaultView;\n\n    if (element instanceof defaultView.HTMLAnchorElement ||\n        element instanceof defaultView.HTMLAreaElement)\n        return element.hasAttribute('href');\n    if (element instanceof defaultView.HTMLInputElement ||\n        element instanceof defaultView.HTMLSelectElement ||\n        element instanceof defaultView.HTMLTextAreaElement ||\n        element instanceof defaultView.HTMLButtonElement ||\n        element instanceof defaultView.HTMLIFrameElement)\n        return !element.disabled;\n    return false;\n};\n\n/**\n * Returns an array containing the values of the given JSON-compatible object.\n * (Simply ignores any function values.)\n * @param {Object} obj\n * @return {Array}\n */\naxs.utils.values = function(obj) {\n    var values = [];\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key) && typeof obj[key] != 'function')\n            values.push(obj[key]);\n    }\n    return values;\n};\n\n/**\n * Returns an object containing the same keys and values as the given\n * JSON-compatible object. (Simply ignores any function values.)\n * @param {Object} obj\n * @return {Object}\n */\naxs.utils.namedValues = function(obj) {\n    var values = {};\n    for (var key in obj) {\n        if (obj.hasOwnProperty(key) && typeof obj[key] != 'function')\n            values[key] = obj[key];\n    }\n    return values;\n};\n\n/**\n* Escapes a given ID to be used in a CSS selector\n*\n* @private\n* @param {!string} id The ID to be escaped\n* @return {string} The escaped ID\n*/\nfunction escapeId(id) {\n    return id.replace(/[^a-zA-Z0-9_-]/g,function(match) { return '\\\\' + match; });\n}\n\n/** Gets a CSS selector text for a DOM object.\n * @param {Node} obj The DOM object.\n * @return {string} CSS selector text for the DOM object.\n */\naxs.utils.getQuerySelectorText = function(obj) {\n  if (obj == null || obj.tagName == 'HTML') {\n    return 'html';\n  } else if (obj.tagName == 'BODY') {\n    return 'body';\n  }\n\n  if (obj.hasAttribute) {\n    if (obj.id) {\n      return '#' + escapeId(obj.id);\n    }\n\n    if (obj.className) {\n      var selector = '';\n      for (var i = 0; i < obj.classList.length; i++)\n        selector += '.' + obj.classList[i];\n\n      var total = 0;\n      if (obj.parentNode) {\n        for (i = 0; i < obj.parentNode.children.length; i++) {\n          var similar = obj.parentNode.children[i];\n          if (axs.browserUtils.matchSelector(similar, selector))\n            total++;\n          if (similar === obj)\n            break;\n        }\n      } else {\n        total = 1;\n      }\n\n      if (total == 1) {\n        return axs.utils.getQuerySelectorText(obj.parentNode) +\n               ' > ' + selector;\n      }\n    }\n\n    if (obj.parentNode) {\n      var similarTags = obj.parentNode.children;\n      var total = 1;\n      var i = 0;\n      while (similarTags[i] !== obj) {\n        if (similarTags[i].tagName == obj.tagName) {\n          total++;\n        }\n        i++;\n      }\n\n      var next = '';\n      if (obj.parentNode.tagName != 'BODY') {\n        next = axs.utils.getQuerySelectorText(obj.parentNode) +\n               ' > ';\n      }\n\n      if (total == 1) {\n        return next +\n               obj.tagName;\n      } else {\n        return next +\n               obj.tagName +\n               ':nth-of-type(' + total + ')';\n      }\n    }\n\n  } else if (obj.selectorText) {\n    return obj.selectorText;\n  }\n\n  return '';\n};\n\n/**\n * Gets elements that refer to this element in an ARIA attribute that takes an ID reference list or\n * single ID reference.\n * @param {Element} element a potential referent.\n * @param {string=} opt_attributeName Name of an ARIA attribute to limit the results to, e.g. 'aria-owns'.\n * @return {NodeList} The elements that refer to this element or null.\n */\naxs.utils.getAriaIdReferrers = function(element, opt_attributeName) {\n    var propertyToSelector = function(propertyKey) {\n        var propertyDetails = axs.constants.ARIA_PROPERTIES[propertyKey];\n        if (propertyDetails) {\n            if (propertyDetails.valueType === ('idref')) {\n                return '[aria-' + propertyKey + '=\\'' + id + '\\']';\n            } else if (propertyDetails.valueType === ('idref_list')) {\n                return '[aria-' + propertyKey + '~=\\'' + id + '\\']';\n            }\n        }\n        return '';\n    };\n    if (!element)\n        return null;\n    var id = element.id;\n    if (!id)\n        return null;\n    id = id.replace(/'/g, \"\\\\'\");  // make it safe to use in a selector\n\n    if (opt_attributeName) {\n        var propertyKey = opt_attributeName.replace(/^aria-/, '');\n        var referrerQuery = propertyToSelector(propertyKey);\n        if (referrerQuery) {\n            return element.ownerDocument.querySelectorAll(referrerQuery);\n        }\n    } else {\n        var selectors = [];\n        for (var propertyKey in axs.constants.ARIA_PROPERTIES) {\n            var referrerQuery = propertyToSelector(propertyKey);\n            if (referrerQuery) {\n                selectors.push(referrerQuery);\n            }\n        }\n        return element.ownerDocument.querySelectorAll(selectors.join(','));\n    }\n    return null;\n};\n\n/**\n * Gets elements that refer to this element in an HTML attribute that takes an ID reference list or\n * single ID reference.\n * @param {Element} element a potential referent.\n * @return {NodeList} The elements that refer to this element.\n */\naxs.utils.getHtmlIdReferrers = function(element) {\n    if (!element)\n        return null;\n    var id = element.id;\n    if (!id)\n        return null;\n    id = id.replace(/'/g, \"\\\\'\");  // make it safe to use in a selector\n    var selectorTemplates = [\n        '[contextmenu=\\'{id}\\']',\n        '[itemref~=\\'{id}\\']',\n        'button[form=\\'{id}\\']',\n        'button[menu=\\'{id}\\']',\n        'fieldset[form=\\'{id}\\']',\n        'input[form=\\'{id}\\']',\n        'input[list=\\'{id}\\']',\n        'keygen[form=\\'{id}\\']',\n        'label[for=\\'{id}\\']',\n        'label[form=\\'{id}\\']',\n        'menuitem[command=\\'{id}\\']',\n        'object[form=\\'{id}\\']',\n        'output[for~=\\'{id}\\']',\n        'output[form=\\'{id}\\']',\n        'select[form=\\'{id}\\']',\n        'td[headers~=\\'{id}\\']',\n        'textarea[form=\\'{id}\\']',\n        'tr[headers~=\\'{id}\\']'];\n    var selectors = selectorTemplates.map(function(selector) {\n        return selector.replace('\\{id\\}', id);\n    });\n    return element.ownerDocument.querySelectorAll(selectors.join(','));\n};\n\n/**\n * Gets a list of all IDs this element references in either ARIA or HTML attributes.\n *\n * @param {Element} element The element to check for idref attributes.\n * @returns {Array.<string>} Any IDs this element references.\n */\naxs.utils.getReferencedIds = function(element) {\n    var result = [];\n    var addResult = function(ids) {\n            if (ids) {\n                if (ids.indexOf(' ') > 0) {\n                    result = result.concat(attrib.value.split(' '));\n                } else {\n                    result.push(ids);\n                }\n            }\n        };\n    for (var i = 0; i < element.attributes.length; i++) {\n        var tagName = element.tagName.toLowerCase();\n        var attrib = element.attributes[i];\n        if (attrib.specified) {\n            var attribName = attrib.name;\n            var ariaAttr = attribName.match(/aria-(.+)/);\n            if (ariaAttr) {\n                var details = axs.constants.ARIA_PROPERTIES[ariaAttr[1]];\n                if (details && (details.valueType === ('idref') || details.valueType === ('idref_list'))) {\n                    addResult(attrib.value);\n                }\n                continue;\n            }\n            switch (attribName) {\n                case 'contextmenu':\n                case 'itemref':\n                    addResult(attrib.value);\n                    break;\n                case 'form':\n                    if (tagName == 'button' || tagName == 'fieldset' || tagName == 'input' ||\n                            tagName == 'keygen' || tagName == 'label' || tagName == 'object' ||\n                            tagName == 'output' || tagName == 'select' || tagName == 'textarea') {\n                        addResult(attrib.value);\n                    }\n                    break;\n                case 'for':\n                    if (tagName == 'label' || tagName == 'output') {\n                        addResult(attrib.value);\n                    }\n                    break;\n                case 'menu':\n                    if (tagName == 'button') {\n                        addResult(attrib.value);\n                    }\n                    break;\n                case 'list':\n                    if (tagName == 'input') {\n                        addResult(attrib.value);\n                    }\n                    break;\n                case 'command':\n                    if (tagName == 'menuitem') {\n                        addResult(attrib.value);\n                    }\n                    break;\n                case 'headers':\n                    if (tagName == 'td' || tagName == 'tr') {\n                        addResult(attrib.value);\n                    }\n                    break;\n            }\n        }\n    }\n    return result;\n};\n\n/**\n * Gets elements that refer to this element in an attribute that takes an ID reference list or\n * single ID reference.\n * @param {Element} element a potential referent.\n * @return {Array<Element>} The elements that refer to this element.\n */\naxs.utils.getIdReferrers = function(element) {\n    var result = [];\n    var referrers = axs.utils.getHtmlIdReferrers(element);\n    if (referrers) {\n        result = result.concat(Array.prototype.slice.call(referrers));\n    }\n    referrers = axs.utils.getAriaIdReferrers(element);\n    if (referrers) {\n        result = result.concat(Array.prototype.slice.call(referrers));\n    }\n    return result;\n};\n\n/**\n * Gets elements which this element refers to in the given attribute.\n * @param {!string} attributeName Name of an ARIA attribute, e.g. 'aria-owns'.\n * @param {Element} element The DOM element which has the ARIA attribute.\n * @return {!Array.<Element>} An array of elements that are referred to by this element.\n * @example\n *    var owner = document.body.appendChild(document.createElement(\"div\"));\n *    var owned = document.body.appendChild(document.createElement(\"div\"));\n *    owner.setAttribute(\"aria-owns\", \"kungfu\");\n *    owned.setAttribute(\"id\", \"kungfu\");\n *    console.log(axs.utils.getIdReferents(\"aria-owns\", owner)[0] === owned);  // This will log 'true'\n */\naxs.utils.getIdReferents = function(attributeName, element) {\n    var result = [];\n    var propertyKey = attributeName.replace(/^aria-/, '');\n    var property = axs.constants.ARIA_PROPERTIES[propertyKey];\n    if (!property || !element.hasAttribute(attributeName))\n        return result;\n    var propertyType = property.valueType;\n    if (propertyType === 'idref_list' || propertyType === 'idref') {\n        var ownerDocument = element.ownerDocument;\n        var ids = element.getAttribute(attributeName);\n        ids = ids.split(/\\s+/);\n        for (var i = 0, len = ids.length; i < len; i++) {\n            var next = ownerDocument.getElementById(ids[i]);\n            if (next) {\n                result[result.length] = next;\n            }\n        }\n    }\n    return result;\n};\n\n/**\n * Gets a subset of 'axs.constants.ARIA_PROPERTIES' filtered by 'valueType'.\n * @param {!Array.<string>} valueTypes Types to match, e.g. ['idref_list'].\n * @return {Object.<string, Object>} axs.constants.ARIA_PROPERTIES which match.\n */\naxs.utils.getAriaPropertiesByValueType = function(valueTypes) {\n    var result = {};\n    for (var propertyName in axs.constants.ARIA_PROPERTIES) {\n        var property = axs.constants.ARIA_PROPERTIES[propertyName];\n        if (property && valueTypes.indexOf(property.valueType) >= 0) {\n            result[propertyName] = property;\n        }\n    }\n    return result;\n};\n\n/**\n * Builds a selector that matches an element with any of these ARIA properties.\n * @param {Object.<string, Object>} ariaProperties axs.constants.ARIA_PROPERTIES\n * @return {!string} The selector.\n */\naxs.utils.getSelectorForAriaProperties = function(ariaProperties) {\n    var propertyNames = Object.keys(/** @type {!Object} */(ariaProperties));\n    var result = propertyNames.map(function(propertyName) {\n        return '[aria-' + propertyName + ']';\n    });\n    result.sort();  // facilitates reading long selectors and unit testing\n    return result.join(',');\n};\n\n/**\n * Finds descendants of this element which implement the given ARIA role.\n * Will look for descendants with implicit or explicit role.\n * @param {Element} element an HTML DOM element.\n * @param {string} role The role you seek.\n * @return {!Array.<Element>} An array of matching elements.\n * @example\n *    var container = document.createElement(\"div\");\n *    var button = document.createElement(\"button\");\n *    var span = document.createElement(\"span\");\n *    span.setAttribute(\"role\", \"button\");\n *    container.appendChild(button);\n *    container.appendChild(span);\n *    var result = axs.utils.findDescendantsWithRole(container, \"button\");  // result is an array containing both 'button' and 'span'\n */\naxs.utils.findDescendantsWithRole = function(element, role) {\n    if (!(element && role))\n        return [];\n    var selector = axs.properties.getSelectorForRole(role);\n    if (!selector)\n        return [];\n    var result = element.querySelectorAll(selector);\n    if (result) {  // Convert NodeList to Array; methinks 80/20 that's what callers want.\n        result = Array.prototype.map.call(result, function(item) { return item; });\n    } else {\n        return [];\n    }\n    return result;\n};\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/Audit.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditResults');\ngoog.require('axs.AuditRules');\ngoog.require('axs.utils');\n\ngoog.provide('axs.Audit');\ngoog.provide('axs.AuditConfiguration');\n\n\n/**\n * Object to hold configuration for an Audit run.\n * @constructor\n * @param {?Object=} config Configuration object\n *   The following configuration options are supported:\n *   - scope\n *   - auditRulesToRun\n *   - auditRulesToIgnore\n *   - maxResults\n *   - withConsoleApi\n *   - walkDom\n *   - showUnsupportedRulesWarning\n */\naxs.AuditConfiguration = function(config) {\n    if (config == null) {\n        config = {};\n    }\n\n    /**\n     * Dictionary of { audit rule name : { rules } } where rules is a dictionary\n     * of { rule type : value }.\n     * Possible rule types:\n     * - ignore: value is a list of CSS selectors representing parts of the page\n     *           which can be ignored for this audit rule.\n     * - config: value is an object containing configuration for this audit\n     *           rule. It will be passed to the test() method.\n     * @type {Object}\n     * @private\n     */\n    this.rules_ = {};\n\n    /**\n     * The \"start point\" for the audit: the element which contains the portion of\n     * the page which should be audited.\n     * If null, the document will be used as the scope.\n     * @type {?Element}\n     */\n    this.scope = null;\n\n    /**\n     * A list of rule names representing the audit rules to be run. If this is\n     * empty or |null|, all audit rules will be run.\n     * @type {Array.<String>}\n     */\n    this.auditRulesToRun = null;\n\n    /**\n     * A list of rule names representing the audit rules which should not be run.\n     * If this is empty or |null|, all audit rules will be run.\n     * @type {Array.<String>}\n     */\n    this.auditRulesToIgnore = null;\n\n    /**\n     * The maximum number of results to collect for each audit rule. If more\n     * than this number of results is found, 'resultsTruncated' is set to true\n     * in the result object. If this is null, all results will be returned.\n     */\n    this.maxResults = null;\n\n    /**\n     * Whether this audit run can use the console API.\n     * @type {boolean}\n     */\n    this.withConsoleApi = false;\n\n    /**\n     * By default the entire DOM tree is traversed regardless of the scope set in the configuration.\n     * This is to ensure that idrefs are collected and that disabled ancestors are considered.\n     *\n     * Setting this flag to false means that only the scope will be traversed and therefore only disabled\n     * ancestors, hidden ancestors and idrefs within the scope will be found.\n     *\n     * Examples of when to set this to `false` are:\n     *  - You are running unit tests in a browser and KNOW that the only part of the DOM you care about is\n     *  contiained within a particular fixture element.\n     *  - You are auditing a web app where you know for sure that everything you are interested in is scoped\n     *  within a particular container.\n     *\n     * @type {boolean}\n     */\n    this.walkDom = true;\n\n    /**\n     * Do we want to show a warning that there are audit rules which are not supported in this configuration?\n     * @type {boolean}\n     */\n    this.showUnsupportedRulesWarning = true;\n\n    for (var prop in this) {\n        if ((this.hasOwnProperty(prop)) && (prop in config)) {\n            this[prop] = config[prop];\n        }\n    }\n\n    goog.exportProperty(this, 'scope', this.scope);\n    goog.exportProperty(this, 'auditRulesToRun', this.auditRulesToRun);\n    goog.exportProperty(this, 'auditRulesToIgnore', this.auditRulesToIgnore);\n    goog.exportProperty(this, 'withConsoleApi', this.withConsoleApi);\n    goog.exportProperty(this, 'walkDom', this.walkDom);\n    goog.exportProperty(this, 'showUnsupportedRulesWarning', this.showUnsupportedRulesWarning);\n};\ngoog.exportSymbol('axs.AuditConfiguration', axs.AuditConfiguration);\n\naxs.AuditConfiguration.prototype = {\n    /**\n     * Add the given selectors to the ignore list for the given audit rule.\n     * @param {string} auditRuleName The name of the audit rule\n     * @param {Array.<string>} selectors Query selectors to match nodes to\n     *     ignore\n     */\n    ignoreSelectors: function(auditRuleName, selectors) {\n        if (!(auditRuleName in this.rules_))\n            this.rules_[auditRuleName] = {};\n        if (!('ignore' in this.rules_[auditRuleName]))\n            this.rules_[auditRuleName].ignore = [];\n        Array.prototype.push.call(this.rules_[auditRuleName].ignore, selectors);\n    },\n\n    /**\n     * Gets the selectors which have been added to the ignore list for the given\n     * audit rule.\n     * @param {string} auditRuleName The name of the audit rule\n     * @return {Array.<string>} A list of query selector strings which match nodes\n     * to be ignored for the given rule.\n     */\n    getIgnoreSelectors: function(auditRuleName) {\n        if ((auditRuleName in this.rules_) &&\n            ('ignore' in this.rules_[auditRuleName])) {\n            return this.rules_[auditRuleName].ignore;\n        }\n        return [];\n    },\n\n    /**\n     * Sets the user-specified severity for the given audit rule. This will\n     * replace the default severity for that audit rule in the audit results.\n     * @param {string} auditRuleName\n     * @param {axs.constants.Severity} severity\n     */\n    setSeverity: function(auditRuleName, severity) {\n        if (!(auditRuleName in this.rules_))\n            this.rules_[auditRuleName] = {};\n        this.rules_[auditRuleName].severity = severity;\n    },\n\n    getSeverity: function(auditRuleName) {\n        if (!(auditRuleName in this.rules_))\n            return null;\n        if (!('severity' in this.rules_[auditRuleName]))\n            return null;\n        return this.rules_[auditRuleName].severity;\n    },\n\n    /**\n     * Sets the user-specified configuration for the given audit rule. This will\n     * vary in structure from rule to rule; see individual rules for\n     * configuration options.\n     * @param {string} auditRuleName\n     * @param {Object} config\n     */\n    setRuleConfig: function(auditRuleName, config) {\n        if (!(auditRuleName in this.rules_))\n            this.rules_[auditRuleName] = {};\n        this.rules_[auditRuleName].config = config;\n    },\n\n    /**\n     * Gets the user-specified configuration for the given audit rule.\n     * @param {string} auditRuleName\n     * @return {Object?} The configuration object for the given audit rule.\n     */\n    getRuleConfig: function(auditRuleName) {\n        if (!(auditRuleName in this.rules_))\n            return null;\n        if (!('config' in this.rules_[auditRuleName]))\n            return null;\n        return this.rules_[auditRuleName].config;\n    }\n};\ngoog.exportProperty(axs.AuditConfiguration.prototype, 'ignoreSelectors',\n                    axs.AuditConfiguration.prototype.ignoreSelectors);\ngoog.exportProperty(axs.AuditConfiguration.prototype, 'getIgnoreSelectors',\n                    axs.AuditConfiguration.prototype.getIgnoreSelectors);\n\naxs.Audit.unsupportedRulesWarningShown = false;\n\n/**\n * Returns the rules that cannot run.\n * For example, if the current configuration requires the console API, these\n * consist of the rules that require it.\n * @param {axs.AuditConfiguration=} opt_configuration\n * @return {Array.<String>}  A list of rules that cannot be run\n */\naxs.Audit.getRulesCannotRun = function(opt_configuration) {\n    if (opt_configuration.withConsoleApi) {\n        return [];\n    }\n    return axs.AuditRules.getRules().filter(function(rule) {\n            return rule.requiresConsoleAPI;\n        }).map(function(rule) {\n            return rule.code;\n        });\n};\n\n/**\n * Runs an audit with all of the audit rules.\n * @param {axs.AuditConfiguration=} opt_configuration\n * @return {Array.<Object>} Array of Object:\n *     {\n *       result,    // @type {axs.constants.AuditResult}\n *       elements,  // @type {Array.<Element>}\n *       rule       // @type {axs.AuditRule} - data only (name, severity, code)\n *     }\n */\naxs.Audit.run = function(opt_configuration) {\n    var configuration = opt_configuration || new axs.AuditConfiguration();\n\n    if (!axs.Audit.unsupportedRulesWarningShown && configuration.showUnsupportedRulesWarning) {\n        var unsupportedRules = axs.Audit.getRulesCannotRun(configuration);\n        if (unsupportedRules.length > 0) {\n            console.warn(\"Some rules cannot be checked using the axs.Audit.run() method call. Use the Chrome plugin to check these rules: \" + unsupportedRules.join(\", \"));\n            console.warn(\"To remove this message, pass an AuditConfiguration object to axs.Audit.run() and set configuration.showUnsupportedRulesWarning = false.\");\n        }\n\n        axs.Audit.unsupportedRulesWarningShown = true;\n    }\n\n    var auditRules = axs.AuditRules.getActiveRules(configuration);\n\n    // As a performance optimization set the collectIdRefs flag to false if none of the rules needs it.\n    configuration.collectIdRefs = auditRules.some(function(auditRule) {\n        return auditRule.collectIdRefs;\n    });\n\n    if (!configuration.scope) {\n        configuration.scope = document.documentElement;\n    }\n\n    axs.Audit.collectMatchingElements(configuration, auditRules);\n\n    var results = [];\n    for (var i = 0; i < auditRules.length; i++) {\n        var auditRule = auditRules[i];\n        if (!auditRule.canRun(configuration))\n            continue;\n        results.push(auditRule.run(configuration));\n    }\n    return results;\n};\ngoog.exportSymbol('axs.Audit.run', axs.Audit.run);\n\n(function() {\n    /**\n     * Runs the element collection phase of the audit.\n     * This performs a complete traversal of the relevant DOM tree.\n     *    Each registered AudtRule is given the opportunity to examine each DOM element\n     *    to determine if it is \"relevant\" or \"interesting\".\n     *\n     * Since the DOM may change over time it is recommended to run the Audits in the same event loop as this call.\n     * @param {axs.AuditConfiguration} configuration Configuration for this run.\n     * @param {Array.<axs.AuditRule>} auditRules The active audit rules.\n     */\n    axs.Audit.collectMatchingElements = function(configuration, auditRules) {\n        var rootFlags = {\n            walkDom: configuration.walkDom,\n            collectIdRefs: configuration.collectIdRefs,\n            level: 0,\n            ignoring: {},\n            disabled: false,\n            hidden: false\n        };\n        var root = configuration.walkDom ? document.documentElement : configuration.scope;\n        // Because 'related elements' could occur anywhere in the DOM we need to start at document.documentElement\n        axs.dom.composedTreeSearch(root, null, { preorder: function(element, flags) {\n            if (!flags.inScope)\n                flags.inScope = element === configuration.scope;\n            for (var i = 0; i < auditRules.length; i++) {\n                var auditRule = auditRules[i];\n                if (!auditRule.canRun(configuration))\n                    continue;\n                auditRule._options = new AuditOptions(configuration, auditRule);  // always rebuild this, it could change each run\n                var ignore = flags.ignoring[auditRule.name] ||\n                        (flags.ignoring[auditRule.name] = auditRule._options.shouldIgnore(element));\n                if (!ignore) {\n                    auditRule.collectMatchingElement(element, flags);\n                }\n            }\n            return true;\n        } }, rootFlags);\n    };\n\n    /**\n     * Represents options pertaining to a specific AuditRule.\n     * Instances may have the following optional named parameters:\n     *     ignoreSelectors: Selectors for parts of the page to ignore for this rule.\n     *     config: Any per-rule configuration.\n     * @param {axs.AuditConfiguration} configuration Config for the audits.\n     * @param {axs.AuditRule} auditRule The AuditRule whose options we want.\n     * @constructor\n     */\n    function AuditOptions(configuration, auditRule) {\n        var ignoreSelectors = configuration.getIgnoreSelectors(auditRule.name);\n        if (ignoreSelectors.length > 0 || configuration.scope)\n            this.ignoreSelectors = ignoreSelectors;\n        var ruleConfig = configuration.getRuleConfig(auditRule.name);\n        if (ruleConfig)\n            this.config = ruleConfig;\n    }\n\n    /**\n     * Determine if this element should be ignored by the AuditRule.\n     * @param {Element} element An audit candidate.\n     * @returns {boolean} true if this element should be ignored by this AuditRule.\n     */\n    AuditOptions.prototype.shouldIgnore = function(element) {\n        var ignoreSelectors = this.ignoreSelectors;\n        if (ignoreSelectors) {\n            for (var i = 0; i < ignoreSelectors.length; i++) {\n                if (axs.browserUtils.matchSelector(element, ignoreSelectors[i]))\n                    return true;\n            }\n        }\n        return false;\n    };\n})();\n/**\n * Create an AuditResults object citing failures and warnings, for use in\n * continuous builds.\n * @param {Array.<Object>} results The results returned from the audit run.\n * @return  {axs.AuditResults} a report of the audit results.\n */\naxs.Audit.auditResults = function(results) {\n    var auditResults = new axs.AuditResults();\n    for (var i = 0; i < results.length; i++) {\n        var result = results[i];\n        if (result.result != axs.constants.AuditResult.FAIL)\n            continue;\n\n        if (result.rule.severity == axs.constants.Severity.SEVERE) {\n            auditResults.addError(\n                axs.Audit.accessibilityErrorMessage(result));\n        } else {\n            auditResults.addWarning(\n                axs.Audit.accessibilityErrorMessage(result));\n        }\n    }\n    return auditResults;\n};\ngoog.exportSymbol('axs.Audit.auditResults', axs.Audit.auditResults);\n\n/**\n * Create a report based on the results of an Audit.\n * @param {Array.<Object>} results The results returned from axs.Audit.run();\n * @param {?string} opt_url A URL to visit for more information.\n * @return {string} A report of the audit results.\n */\naxs.Audit.createReport = function(results, opt_url) {\n    var message = '*** Begin accessibility audit results ***';\n    message += '\\nAn accessibility audit found ';\n\n    message += axs.Audit.auditResults(results).toString();\n\n    if (opt_url) {\n        message += '\\nFor more information, please see ' ;\n        message += opt_url;\n    }\n\n    message += '\\n*** End accessibility audit results ***';\n    return message;\n};\ngoog.exportSymbol('axs.Audit.createReport', axs.Audit.createReport);\n\n/**\n * Creates an error message for a given accessibility audit result object.\n * @param {Object.<string, (string|Array.<Element>)>} result The result\n *     object returned from the audit.\n * @return {string} An error message describing the failure and listing the\n *     query selectors for up to five elements which failed the audit rule.\n */\naxs.Audit.accessibilityErrorMessage = function(result) {\n    if (result.rule.severity == axs.constants.Severity.SEVERE)\n        var message = 'Error: ';\n    else\n        var message = 'Warning: ';\n    message += result.rule.code + ' (' + result.rule.heading +\n        ') failed on the following ' +\n        (result.elements.length == 1 ? 'element' : 'elements');\n\n    if (result.elements.length == 1)\n        message += ':';\n    else {\n        message += ' (1 - ' + Math.min(5, result.elements.length) +\n                   ' of ' + result.elements.length + '):';\n    }\n\n    var maxElements = Math.min(result.elements.length, 5);\n    for (var i = 0; i < maxElements; i++) {\n        var element = result.elements[i];\n        message += '\\n';\n        // Get query selector not browser independent. catch any errors and\n        // default to simple tagName.\n        try {\n            message += axs.utils.getQuerySelectorText(element);\n        } catch (err) {\n            message += ' tagName:' + element.tagName;\n            message += ' id:' + element.id;\n        }\n    }\n    if (result.rule.url != '')\n        message += '\\nSee ' + result.rule.url + ' for more information.';\n    return message;\n};\ngoog.exportSymbol('axs.Audit.accessibilityErrorMessage', axs.Audit.accessibilityErrorMessage);\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/AuditResults.js":"// Copyright 2013 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('axs.AuditResults');\n\n/**\n * Object to hold results for an Audit run.\n * @constructor\n */\naxs.AuditResults = function() {\n    /**\n     * The errors received from the audit run.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.errors_ = [];\n\n    /**\n     * The warnings receive from the audit run.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.warnings_ = [];\n};\ngoog.exportSymbol('axs.AuditResults', axs.AuditResults);\n\n/**\n * Adds an error message to the AuditResults object.\n * @param {string} errorMessage The error message to add.\n */\naxs.AuditResults.prototype.addError = function(errorMessage) {\n    if (errorMessage != '') {\n        this.errors_.push(errorMessage);\n    }\n\n};\ngoog.exportProperty(axs.AuditResults.prototype, 'addError',\n                    axs.AuditResults.prototype.addError);\n\n/**\n * Adds a warning message to the AuditResults object.\n * @param {string} warningMessage The Warning message to add.\n */\naxs.AuditResults.prototype.addWarning = function(warningMessage) {\n    if (warningMessage != '') {\n        this.warnings_.push(warningMessage);\n    }\n\n};\ngoog.exportProperty(axs.AuditResults.prototype, 'addWarning',\n                    axs.AuditResults.prototype.addWarning);\n\n/**\n * Returns the number of errors in this AuditResults object.\n * @return {number} The number of errors in the AuditResults object.\n */\naxs.AuditResults.prototype.numErrors = function() {\n    return this.errors_.length;\n};\ngoog.exportProperty(axs.AuditResults.prototype, 'numErrors',\n                    axs.AuditResults.prototype.numErrors);\n\n/**\n * Returns the number of warnings in this AuditResults object.\n * @return {number} The number of warnings in the AuditResults object.\n */\naxs.AuditResults.prototype.numWarnings = function() {\n    return this.warnings_.length;\n};\ngoog.exportProperty(axs.AuditResults.prototype, 'numWarnings',\n                    axs.AuditResults.prototype.numWarnings);\n\n/**\n * Returns the errors in this AuditResults object.\n * @return {Array.<string>} An array of the audit errors.\n */\naxs.AuditResults.prototype.getErrors = function() {\n    return this.errors_;\n};\ngoog.exportProperty(axs.AuditResults.prototype, 'getErrors',\n                    axs.AuditResults.prototype.getErrors);\n\n/**\n * Returns the warnings in this AuditResults object.\n * @return {Array.<string>} An array of the audit warnings.\n */\naxs.AuditResults.prototype.getWarnings = function() {\n    return this.warnings_;\n};\ngoog.exportProperty(axs.AuditResults.prototype, 'getWarnings',\n                    axs.AuditResults.prototype.getWarnings);\n\n/**\n * Returns a string message depicting AuditResults values.\n * @return {string} A string representation of the AuditResults object.\n */\naxs.AuditResults.prototype.toString = function() {\n    var message = '';\n    for (var i = 0; i < this.errors_.length; i++) {\n        if (i == 0) {\n            message += '\\nErrors:\\n';\n        }\n        var result = this.errors_[i];\n        message += result + '\\n\\n';\n    }\n    for (var i = 0; i < this.warnings_.length; i++) {\n        if (i == 0) {\n            message += '\\nWarnings:\\n';\n        }\n        var result = this.warnings_[i];\n        message += result + '\\n\\n';\n    }\n    return message;\n};\ngoog.exportProperty(axs.AuditResults.prototype, 'toString',\n                    axs.AuditResults.prototype.toString);\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/AuditRule.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.browserUtils');\ngoog.require('axs.constants');\ngoog.require('axs.dom');\n\ngoog.provide('axs.AuditRule');\ngoog.provide('axs.AuditRule.Spec');\n\n/**\n * @constructor\n * @param {axs.AuditRule.Spec} spec\n */\naxs.AuditRule = function(spec) {\n    var requires = spec.opt_requires || {};\n    var isValid = true;\n    var missingFields = [];\n    for (var i = 0; i < axs.AuditRule.requiredFields.length; i++) {\n        var requiredField = axs.AuditRule.requiredFields[i];\n        if (!(requiredField in spec)) {\n            isValid = false;\n            missingFields.push(requiredField);\n        }\n    }\n    if (!isValid) {\n        throw 'Invalid spec; the following fields were not specified: ' + missingFields.join(', ') +\n              '\\n' + JSON.stringify(spec);\n    }\n\n    /** @type {string} */\n    this.name = spec.name;\n\n    /** @type {axs.constants.Severity} */\n    this.severity = spec.severity;\n\n    /**\n     * Is this element relevant to this audit?\n     * @param {Element} element A potential audit candidate.\n     * @param {Object} flags\n     * @return {boolean} true if this element is relevant to this audit.\n     */\n    this.relevantElementMatcher_ = spec.relevantElementMatcher;\n\n    /**\n     * If the relevantElementMatcher is not enough to determine whether or not this rule should run\n     * then this function can be called (after DOM traversal is finished).\n     * @param {Element} element A potential audit candidate.\n     * @param {Object} flags\n     * @return {boolean} true if this element is relevant to this audit.\n     */\n    this.isRelevant_ = spec.isRelevant || function(element, flags) {  // eslint-disable-line no-unused-vars\n        return true;\n    };\n\n    /**\n     * The actual audit function.\n     * @param {Element} element The element under test.\n     * @param {Object} flags\n     * @param {Object=} config\n     * @return {boolean} true if this audit finds a problem.\n     */\n    this.test_ = spec.test;\n\n    /** @type {string} */\n    this.code = spec.code;\n\n    /** @type {string} */\n    this.heading = spec.heading || '';\n\n    /** @type {string} */\n    this.url = spec.url || '';\n\n    /** @type {boolean} */\n    this.requiresConsoleAPI = !!requires.consoleAPI;\n\n    /** @type {Array.<axs.AuditRule.RelevantElement>} */\n    this.relevantElements = [];\n\n    /** @type {Array.<axs.AuditRule.RelevantElement>} */\n    this.relatedElements = [];\n\n    /**\n     * An audit can indicate that the DOM traversal should capture ID refs on its behalf.\n     * This is a performance enhancement which prevents multiple audits from having to call\n     * `axs.utils.getReferencedIds` on the same element during DOM traversal.\n     *\n     * @type {boolean}\n     */\n    this.collectIdRefs = requires.idRefs || false;\n};\n\n/**\n * Note that opt_requires may have any of the following optional properties:\n *    idRefs: boolean, (true if the rule needs idRefs collected for it)\n *    consoleAPI: boolean (true if the rule needs the console API)\n *\n * @typedef {{ name: string,\n *              heading: string,\n *              url: string,\n *              severity: axs.constants.Severity,\n *              relevantElementMatcher: function(Element, Object): boolean,\n *              test: function(Element, Object, Object=): boolean,\n *              code: string,\n *              opt_requires: Object }} */\naxs.AuditRule.SpecWithRequires;\n\n/** @typedef {{ name: string,\n *              heading: string,\n *              url: string,\n *              severity: axs.constants.Severity,\n *              relevantElementMatcher: function(Element, Object): boolean,\n *              test: function(Element, Object, Object=): boolean,\n *              code: string }} */\naxs.AuditRule.SpecWithoutRequires;\n\n/** @typedef {(axs.AuditRule.SpecWithRequires|axs.AuditRule.SpecWithoutRequires)} */\naxs.AuditRule.Spec;\n\n/**\n * When storing \"relevant\" or \"related\" elements during the DOM traversal phase\n * also hold the flags for that element.\n * @typedef {{element: Element, flags: Object}}\n * */\naxs.AuditRule.RelevantElement;\n\n/**\n * @const\n */\naxs.AuditRule.requiredFields =\n    [ 'name', 'severity', 'relevantElementMatcher', 'test', 'code', 'heading' ];\n\n\n/**\n * The return value for a non-applicable audit result.\n *\n * @type {{result: string}}\n * @const\n */\naxs.AuditRule.NOT_APPLICABLE = { result: axs.constants.AuditResult.NA };\n\n/**\n * Add the given element to the given array.  This is abstracted so that subclasses\n * can modify the element value as necessary.\n * @param {Array.<Element>} elements\n * @param {Element} element\n */\naxs.AuditRule.prototype.addElement = function(elements, element) {\n    elements.push(element);\n};\n\n/**\n  * Collect elements relevant to this rule.\n  * @param {Element} element\n  * @param {Object} flags Fast lookup for various element states.\n  */\naxs.AuditRule.prototype.collectMatchingElement = function(element, flags) {\n    if (this.relevantElementMatcher_(element, flags) && flags.inScope) {\n        this.relevantElements.push({\n            element: element,\n            flags: flags\n        });\n        return true;\n    }\n    return false;\n};\n\n/**\n * Determine if the current rule can be run based on the current configuration.\n * @param {axs.AuditConfiguration} configuration Used to determine if this rule can run.\n * @returns {boolean} true if the rule can run.\n */\naxs.AuditRule.prototype.canRun = function(configuration) {\n    if (this.disabled) {\n        return false;\n    }\n    if (!configuration.withConsoleApi && this.requiresConsoleAPI) {\n        return false;\n    }\n    return true;\n};\n\n/**\n * Represents the result of an AuditRule.\n * @constructor\n */\naxs.AuditRule.Result = function(configuration, auditRule) {\n    var ruleValues = axs.utils.namedValues(auditRule);\n    ruleValues.severity = configuration.getSeverity(auditRule.name) || ruleValues.severity;\n    this.rule = ruleValues;\n    this.maxResults = configuration.maxResults;\n    this.update(axs.constants.AuditResult.NA);\n};\n\n/**\n * Process a new audit result and update the overall state consistent with the following constraints:\n *    NA > PASS > FAIL\n * In other words:\n *    NA can become PASS or FAIL\n *    PASS can become FAIL\n *    FAIL cannot be changed\n * @param {axs.constants.AuditResult} auditResult The result of the current test.\n * @param {Element=} element The element responsible for the test result, required if the result is FAIL.\n */\naxs.AuditRule.Result.prototype.update = function(auditResult, element) {\n    var result = this;\n    if (auditResult === axs.constants.AuditResult.FAIL) {\n        var failingElements = result.elements || (result.elements = []);\n        result.result = auditResult;  // If FAIL then we change the result to FAIL no matter what it is\n        if (this.maxResults && result.elements.length >= this.maxResults) {\n            result.resultsTruncated = true;\n        } else if (element) {\n            // element should always be defined here but testing first avoids pushing undefined onto the array\n            failingElements.push(element);\n        }\n    } else if (auditResult === axs.constants.AuditResult.PASS) {\n        if (!result.elements)\n            result.elements = [];\n        if (result.result !== axs.constants.AuditResult.FAIL)\n            result.result = auditResult;  // If PASS then we change result only if it is not already FAIL\n    } else if (!result.result) {\n        result.result = auditResult;\n    }\n};\n\n/**\n * Run this AuditRule against any relevant elements it has collected during the DOM traversal phase.\n * @param {axs.AuditConfiguration} configuration Configuration for this run.\n * @return {axs.AuditRule.Result}\n */\naxs.AuditRule.prototype.run = function(configuration) {\n    try {\n        var options = this._options || {};\n        var result = new axs.AuditRule.Result(configuration, this);\n        var next;\n        while ((next = this.relevantElements.shift())) {\n            var element = next.element;\n            var flags = next.flags;\n            if (this.isRelevant_(element, flags)) {\n                if (this.test_(element, flags, options.config)) {\n                    result.update(axs.constants.AuditResult.FAIL, element);\n                } else {\n                    result.update(axs.constants.AuditResult.PASS, element);\n                }\n            }\n        }\n        return result;\n    } finally {\n        this.relatedElements.length = 0;\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/AuditRules.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.AuditRule');\n\ngoog.provide('axs.AuditRules');\n\n(function() {\n    var auditRulesByName = {};\n    var auditRulesByCode = {};\n\n    /** @type {Object.<string, axs.AuditRule.Spec>} */\n    axs.AuditRules.specs = {};\n\n    /**\n     * Instantiates and registers an audit rule.\n     * If a conflicting rule is already registered then the new rule will not be added.\n     * @param {axs.AuditRule.Spec} spec The object which defines the AuditRule to add.\n     * @throws {Error} If the rule duplicates properties that must be unique.\n     */\n    axs.AuditRules.addRule = function(spec) {\n        // create the auditRule before checking props as we can expect the constructor to perform the\n        // first layer of sanity checking.\n        var auditRule = new axs.AuditRule(spec);\n        if (auditRule.code in auditRulesByCode)\n            throw new Error('Can not add audit rule with same code: \"' + auditRule.code + '\"');\n        if (auditRule.name in auditRulesByName)\n            throw new Error('Can not add audit rule with same name: \"' + auditRule.name + '\"');\n        auditRulesByName[auditRule.name] = auditRulesByCode[auditRule.code] = auditRule;\n        axs.AuditRules.specs[spec.name] = spec;\n    };\n\n    /**\n     * Gets the audit rule with the given name.\n     * @param {string} name The name (or code) of an audit rule.\n     * @return {axs.AuditRule}\n     */\n    axs.AuditRules.getRule = function(name) {\n        return auditRulesByName[name] || auditRulesByCode[name] || null;\n    };\n\n    /**\n     * Gets all registered audit rules.\n     * @param {boolean=} opt_namesOnly If true then the result will contain only the rule names.\n     * @return {Array.<axs.AuditRule>|Array.<string>}\n     */\n    axs.AuditRules.getRules = function(opt_namesOnly) {\n        var ruleNames = Object.keys(auditRulesByName);\n        if (opt_namesOnly)\n            return ruleNames;\n        return ruleNames.map(function(name) {\n            return this.getRule(name);\n        }, axs.AuditRules);\n    };\n\n    /**\n     * Gets all registered audit rules which are not excluded by configuration.\n     * @param {axs.AuditConfiguration} configuration Used to determine ignored rules.\n     * @return {Array.<axs.AuditRule>}\n     */\n    axs.AuditRules.getActiveRules = function(configuration) {\n        var auditRules;\n        if (configuration.auditRulesToRun && configuration.auditRulesToRun.length > 0) {\n            auditRules = configuration.auditRulesToRun;\n        } else {\n            auditRules = axs.AuditRules.getRules(true);\n        }\n        if (configuration.auditRulesToIgnore) {\n            for (var i = 0; i < configuration.auditRulesToIgnore.length; i++) {\n                var auditRuleToIgnore = configuration.auditRulesToIgnore[i];\n                if (auditRules.indexOf(auditRuleToIgnore) < 0)\n                    continue;\n                auditRules.splice(auditRules.indexOf(auditRuleToIgnore), 1);\n            }\n        }\n        return auditRules.map(axs.AuditRules.getRule);\n    };\n})();\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/axs.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('axs');\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/BrowserUtils.js":"// Copyright 2013 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('axs.browserUtils');\n\n/**\n * Use Webkit matcher when matches() is not supported.\n * Use Firefox matcher when Webkit is not supported.\n * Use IE matcher when neither webkit nor Firefox supported.\n * @param {Element} element\n * @param {string} selector\n * @return {boolean} true if the element matches the selector\n */\naxs.browserUtils.matchSelector = function(element, selector) {\n    if (element.matches)\n        return element.matches(selector);\n    if (element.webkitMatchesSelector)\n        return element.webkitMatchesSelector(selector);\n    if (element.mozMatchesSelector)\n        return element.mozMatchesSelector(selector);\n    if (element.msMatchesSelector)\n        return element.msMatchesSelector(selector);\n    return false;\n};\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/Color.js":"// Copyright 2015 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('axs.color');\ngoog.provide('axs.color.Color');\n\n/**\n * @constructor\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @param {number} alpha\n */\naxs.color.Color = function(red, green, blue, alpha) {\n    /** @type {number} */\n    this.red = red;\n\n    /** @type {number} */\n    this.green = green;\n\n    /** @type {number} */\n    this.blue = blue;\n\n    /** @type {number} */\n    this.alpha = alpha;\n};\n\n/**\n * @constructor\n * See https://en.wikipedia.org/wiki/YCbCr for more information.\n * @param {Array.<number>} coords The YCbCr values as a 3 element array, in the order [luma, Cb, Cr].\n *     All numbers are in the range [0, 1].\n */\naxs.color.YCbCr = function(coords) {\n    /** @type {number} */\n    this.luma = this.z = coords[0];\n\n    /** @type {number} */\n    this.Cb = this.x = coords[1];\n\n    /** @type {number} */\n    this.Cr = this.y = coords[2];\n};\n\naxs.color.YCbCr.prototype = {\n    /**\n     * @param {number} scalar\n     * @return {axs.color.YCbCr} This color multiplied by the given scalar\n     */\n    multiply: function(scalar) {\n        var result = [ this.luma * scalar, this.Cb * scalar, this.Cr * scalar ];\n        return new axs.color.YCbCr(result);\n    },\n\n    /**\n     * @param {axs.color.YCbCr} other\n     * @return {axs.color.YCbCr} This plus other\n     */\n    add: function(other) {\n        var result = [ this.luma + other.luma, this.Cb + other.Cb, this.Cr + other.Cr ];\n        return new axs.color.YCbCr(result);\n    },\n\n    /**\n     * @param {axs.color.YCbCr} other\n     * @return {axs.color.YCbCr} This minus other\n     */\n    subtract: function(other) {\n        var result = [ this.luma - other.luma, this.Cb - other.Cb, this.Cr - other.Cr ];\n        return new axs.color.YCbCr(result);\n    }\n\n};\n\n\n/**\n * Calculate the contrast ratio between the two given colors. Returns the ratio\n * to 1, for example for two two colors with a contrast ratio of 21:1, this\n * function will return 21.\n * @param {axs.color.Color} fgColor\n * @param {axs.color.Color} bgColor\n * @return {!number}\n */\naxs.color.calculateContrastRatio = function(fgColor, bgColor) {\n    if (fgColor.alpha < 1)\n        fgColor = axs.color.flattenColors(fgColor, bgColor);\n\n    var fgLuminance = axs.color.calculateLuminance(fgColor);\n    var bgLuminance = axs.color.calculateLuminance(bgColor);\n    var contrastRatio = (Math.max(fgLuminance, bgLuminance) + 0.05) /\n        (Math.min(fgLuminance, bgLuminance) + 0.05);\n    return contrastRatio;\n};\n\n/**\n * Calculate the luminance of the given color using the WCAG algorithm.\n * @param {axs.color.Color} color\n * @return {number}\n */\naxs.color.calculateLuminance = function(color) {\n/*    var rSRGB = color.red / 255;\n    var gSRGB = color.green / 255;\n    var bSRGB = color.blue / 255;\n\n    var r = rSRGB <= 0.03928 ? rSRGB / 12.92 : Math.pow(((rSRGB + 0.055)/1.055), 2.4);\n    var g = gSRGB <= 0.03928 ? gSRGB / 12.92 : Math.pow(((gSRGB + 0.055)/1.055), 2.4);\n    var b = bSRGB <= 0.03928 ? bSRGB / 12.92 : Math.pow(((bSRGB + 0.055)/1.055), 2.4);\n\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b; */\n    var ycc = axs.color.toYCbCr(color);\n    return ycc.luma;\n};\n\n/**\n * Compute the luminance ratio between two luminance values.\n * @param {number} luminance1\n * @param {number} luminance2\n */\naxs.color.luminanceRatio = function(luminance1, luminance2) {\n    return (Math.max(luminance1, luminance2) + 0.05) /\n        (Math.min(luminance1, luminance2) + 0.05);\n};\n\n/**\n * @param {string} colorString The color string from CSS.\n * @return {?axs.color.Color}\n */\naxs.color.parseColor = function(colorString) {\n    if (colorString === \"transparent\") {\n        return new axs.color.Color(0, 0, 0, 0);\n    }\n    var rgbRegex = /^rgb\\((\\d+), (\\d+), (\\d+)\\)$/;\n    var match = colorString.match(rgbRegex);\n\n    if (match) {\n        var r = parseInt(match[1], 10);\n        var g = parseInt(match[2], 10);\n        var b = parseInt(match[3], 10);\n        var a = 1;\n        return new axs.color.Color(r, g, b, a);\n    }\n\n    var rgbaRegex = /^rgba\\((\\d+), (\\d+), (\\d+), (\\d*(\\.\\d+)?)\\)/;\n    match = colorString.match(rgbaRegex);\n    if (match) {\n        var r = parseInt(match[1], 10);\n        var g = parseInt(match[2], 10);\n        var b = parseInt(match[3], 10);\n        var a = parseFloat(match[4]);\n        return new axs.color.Color(r, g, b, a);\n    }\n\n    return null;\n};\n\n/**\n * @param {number} value The value of a color channel, 0 <= value <= 0xFF\n * @return {!string}\n */\naxs.color.colorChannelToString = function(value) {\n    value = Math.round(value);\n    if (value <= 0xF)\n        return '0' + value.toString(16);\n    return value.toString(16);\n};\n\n/**\n * @param {axs.color.Color} color\n * @return {!string}\n */\naxs.color.colorToString = function(color) {\n    if (color.alpha == 1) {\n         return '#' + axs.color.colorChannelToString(color.red) +\n         axs.color.colorChannelToString(color.green) + axs.color.colorChannelToString(color.blue);\n    }\n    else\n        return 'rgba(' + [color.red, color.green, color.blue, color.alpha].join(',') + ')';\n};\n\n/**\n * Compute a desired luminance given a given luminance and a desired contrast ratio.\n * @param {number} luminance The given luminance.\n * @param {number} contrast The desired contrast ratio.\n * @param {boolean} higher Whether the desired luminance is higher or lower than the given luminance.\n * @return {number} The desired luminance.\n */\naxs.color.luminanceFromContrastRatio = function(luminance, contrast, higher) {\n    if (higher) {\n        var newLuminance = (luminance + 0.05) * contrast - 0.05;\n        return newLuminance;\n    } else {\n        var newLuminance = (luminance + 0.05) / contrast - 0.05;\n        return newLuminance;\n    }\n};\n\n/**\n * Given a color in YCbCr format and a desired luminance, pick a new color with the desired luminance which is\n * as close as possible to the original color.\n * @param {axs.color.YCbCr} ycc The original color in YCbCr form.\n * @param {number} luma The desired luminance\n * @return {!axs.color.Color} A new color in RGB.\n */\naxs.color.translateColor = function(ycc, luma) {\n    var endpoint = (luma > ycc.luma) ? axs.color.WHITE_YCC : axs.color.BLACK_YCC;\n    var cubeFaces = (endpoint == axs.color.WHITE_YCC) ? axs.color.YCC_CUBE_FACES_WHITE\n                                                      : axs.color.YCC_CUBE_FACES_BLACK;\n\n    var a = new axs.color.YCbCr([0, ycc.Cb, ycc.Cr]);\n    var b = new axs.color.YCbCr([1, ycc.Cb, ycc.Cr]);\n    var line = { a: a, b: b };\n\n    var intersection = null;\n    for (var i = 0; i < cubeFaces.length; i++) {\n        var cubeFace = cubeFaces[i];\n        intersection = axs.color.findIntersection(line, cubeFace);\n        // If intersection within [0, 1] in Z axis, it is within the cube.\n        if (intersection.z >= 0 && intersection.z <= 1)\n            break;\n    }\n    if (!intersection) {\n        // Should never happen\n        throw \"Couldn't find intersection with YCbCr color cube for Cb=\" + ycc.Cb + \", Cr=\" + ycc.Cr + \".\";\n    }\n    if (intersection.x != ycc.x || intersection.y != ycc.y) {\n        // Should never happen\n        throw \"Intersection has wrong Cb/Cr values.\";\n    }\n\n    // If intersection.luma is closer to endpoint than desired luma, then luma is inside cube\n    // and we can immediately return new value.\n    if (Math.abs(endpoint.luma - intersection.luma) < Math.abs(endpoint.luma - luma)) {\n        var translatedColor = [luma, ycc.Cb, ycc.Cr];\n        return axs.color.fromYCbCrArray(translatedColor);\n    }\n\n    // Otherwise, translate from intersection towards white/black such that luma is correct.\n    var dLuma = luma - intersection.luma;\n    var scale = dLuma / (endpoint.luma - intersection.luma);\n    var translatedColor = [ luma,\n                            intersection.Cb - (intersection.Cb * scale),\n                            intersection.Cr - (intersection.Cr * scale) ];\n\n    return axs.color.fromYCbCrArray(translatedColor);\n};\n\n/** @typedef {{fg: string, bg: string, contrast: string}} */\naxs.color.SuggestedColors;\n\n/**\n * @param {axs.color.Color} bgColor\n * @param {axs.color.Color} fgColor\n * @param {Object.<string, number>} desiredContrastRatios A map of label to desired contrast ratio.\n * @return {Object.<string, axs.color.SuggestedColors>}\n */\naxs.color.suggestColors = function(bgColor, fgColor, desiredContrastRatios) {\n    var colors = {};\n    var bgLuminance = axs.color.calculateLuminance(bgColor);\n    var fgLuminance = axs.color.calculateLuminance(fgColor);\n\n    var fgLuminanceIsHigher = fgLuminance > bgLuminance;\n    var fgYCbCr = axs.color.toYCbCr(fgColor);\n    var bgYCbCr = axs.color.toYCbCr(bgColor);\n    for (var desiredLabel in desiredContrastRatios) {\n        var desiredContrast = desiredContrastRatios[desiredLabel];\n\n        var desiredFgLuminance = axs.color.luminanceFromContrastRatio(bgLuminance, desiredContrast + 0.02, fgLuminanceIsHigher);\n        if (desiredFgLuminance <= 1 && desiredFgLuminance >= 0) {\n            var newFgColor = axs.color.translateColor(fgYCbCr, desiredFgLuminance);\n            var newContrastRatio = axs.color.calculateContrastRatio(newFgColor, bgColor);\n            var suggestedColors = {};\n            suggestedColors.fg = /** @type {!string} */ (axs.color.colorToString(newFgColor));\n            suggestedColors.bg = /** @type {!string} */ (axs.color.colorToString(bgColor));\n            suggestedColors.contrast = /** @type {!string} */ (newContrastRatio.toFixed(2));\n            colors[desiredLabel] = /** @type {axs.color.SuggestedColors} */ (suggestedColors);\n            continue;\n        }\n\n        var desiredBgLuminance = axs.color.luminanceFromContrastRatio(fgLuminance, desiredContrast + 0.02, !fgLuminanceIsHigher);\n        if (desiredBgLuminance <= 1 && desiredBgLuminance >= 0) {\n            var newBgColor = axs.color.translateColor(bgYCbCr, desiredBgLuminance);\n            var newContrastRatio = axs.color.calculateContrastRatio(fgColor, newBgColor);\n            var suggestedColors = {};\n            suggestedColors.bg = /** @type {!string} */ (axs.color.colorToString(newBgColor));\n            suggestedColors.fg = /** @type {!string} */ (axs.color.colorToString(fgColor));\n            suggestedColors.contrast = /** @type {!string} */ (newContrastRatio.toFixed(2));\n            colors[desiredLabel] = /** @type {axs.color.SuggestedColors} */ (suggestedColors);\n        }\n    }\n    return colors;\n};\n\n/**\n * Combine the two given color according to alpha blending.\n * @param {axs.color.Color} fgColor\n * @param {axs.color.Color} bgColor\n * @return {axs.color.Color}\n */\naxs.color.flattenColors = function(fgColor, bgColor) {\n    var alpha = fgColor.alpha;\n    var r = ((1 - alpha) * bgColor.red) + (alpha * fgColor.red);\n    var g = ((1 - alpha) * bgColor.green) + (alpha * fgColor.green);\n    var b = ((1 - alpha) * bgColor.blue) + (alpha * fgColor.blue);\n    var a = fgColor.alpha + (bgColor.alpha * (1 - fgColor.alpha));\n\n    return new axs.color.Color(r, g, b, a);\n};\n\n/**\n * Multiply the given vector by the given matrix.\n * @param {Array.<Array.<number>>} matrix A 3x3 matrix\n * @param {Array.<number>} vector A 3-element vector\n * @return {Array.<number>} A 3-element vector\n */\naxs.color.multiplyMatrixVector = function(matrix, vector) {\n    var a = matrix[0][0];\n    var b = matrix[0][1];\n    var c = matrix[0][2];\n    var d = matrix[1][0];\n    var e = matrix[1][1];\n    var f = matrix[1][2];\n    var g = matrix[2][0];\n    var h = matrix[2][1];\n    var k = matrix[2][2];\n\n    var x = vector[0];\n    var y = vector[1];\n    var z = vector[2];\n\n    return [\n        a*x + b*y + c*z,\n        d*x + e*y + f*z,\n        g*x + h*y + k*z\n    ];\n};\n\n/**\n * Convert a given RGB color to YCbCr.\n * @param {axs.color.Color} color\n * @return {axs.color.YCbCr}\n */\naxs.color.toYCbCr = function(color) {\n    var rSRGB = color.red / 255;\n    var gSRGB = color.green / 255;\n    var bSRGB = color.blue / 255;\n\n    var r = rSRGB <= 0.03928 ? rSRGB / 12.92 : Math.pow(((rSRGB + 0.055)/1.055), 2.4);\n    var g = gSRGB <= 0.03928 ? gSRGB / 12.92 : Math.pow(((gSRGB + 0.055)/1.055), 2.4);\n    var b = bSRGB <= 0.03928 ? bSRGB / 12.92 : Math.pow(((bSRGB + 0.055)/1.055), 2.4);\n\n    return new axs.color.YCbCr(axs.color.multiplyMatrixVector(axs.color.YCC_MATRIX, [r, g, b]));\n};\n\n/**\n * @param {axs.color.YCbCr} ycc\n * @return {!axs.color.Color}\n */\naxs.color.fromYCbCr = function(ycc) {\n    return axs.color.fromYCbCrArray([ycc.luma, ycc.Cb, ycc.Cr]);\n};\n\n/**\n * Convert a color from a YCbCr color (as a vector) to an RGB color\n * @param {Array.<number>} yccArray\n * @return {!axs.color.Color}\n */\naxs.color.fromYCbCrArray = function(yccArray) {\n    var rgb = axs.color.multiplyMatrixVector(axs.color.INVERTED_YCC_MATRIX, yccArray);\n\n    var r = rgb[0];\n    var g = rgb[1];\n    var b = rgb[2];\n    var rSRGB = r <= 0.00303949 ? (r * 12.92) : (Math.pow(r, (1/2.4)) * 1.055) - 0.055;\n    var gSRGB = g <= 0.00303949 ? (g * 12.92) : (Math.pow(g, (1/2.4)) * 1.055) - 0.055;\n    var bSRGB = b <= 0.00303949 ? (b * 12.92) : (Math.pow(b, (1/2.4)) * 1.055) - 0.055;\n\n    var red = Math.min(Math.max(Math.round(rSRGB * 255), 0), 255);\n    var green = Math.min(Math.max(Math.round(gSRGB * 255), 0), 255);\n    var blue = Math.min(Math.max(Math.round(bSRGB * 255), 0), 255);\n\n    return new axs.color.Color(red, green, blue, 1);\n};\n\n/**\n * Returns an RGB to YCbCr conversion matrix for the given kR, kB constants.\n * @param {number} kR\n * @param {number} kB\n * @return {Array.<Array.<number>>}\n */\naxs.color.RGBToYCbCrMatrix = function(kR, kB) {\n    return [\n        [\n            kR,\n            (1 - kR - kB),\n            kB\n        ],\n        [\n            -kR/(2 - 2*kB),\n            (kR + kB - 1)/(2 - 2*kB),\n            (1 - kB)/(2 - 2*kB)\n        ],\n        [\n            (1 - kR)/(2 - 2*kR),\n            (kR + kB - 1)/(2 - 2*kR),\n            -kB/(2 - 2*kR)\n        ]\n    ];\n};\n\n/**\n * Return the inverse of the given 3x3 matrix.\n * @param {Array.<Array.<number>>} matrix\n * @return Array.<Array.<number>> The inverse of the given matrix.\n */\naxs.color.invert3x3Matrix = function(matrix) {\n    var a = matrix[0][0];\n    var b = matrix[0][1];\n    var c = matrix[0][2];\n    var d = matrix[1][0];\n    var e = matrix[1][1];\n    var f = matrix[1][2];\n    var g = matrix[2][0];\n    var h = matrix[2][1];\n    var k = matrix[2][2];\n\n    var A = (e*k - f*h);\n    var B = (f*g - d*k);\n    var C = (d*h - e*g);\n    var D = (c*h - b*k);\n    var E = (a*k - c*g);\n    var F = (g*b - a*h);\n    var G = (b*f - c*e);\n    var H = (c*d - a*f);\n    var K = (a*e - b*d);\n\n    var det = a * (e*k - f*h) - b * (k*d - f*g) + c * (d*h - e*g);\n    var z = 1/det;\n\n    return axs.color.scalarMultiplyMatrix([\n        [ A, D, G ],\n        [ B, E, H ],\n        [ C, F, K ]\n    ], z);\n};\n\n/** @typedef {{ a: axs.color.YCbCr, b: axs.color.YCbCr }} */\naxs.color.Line;\n\n/** @typedef {{ p0: axs.color.YCbCr, p1: axs.color.YCbCr, p2: axs.color.YCbCr }} */\naxs.color.Plane;\n\n/**\n * Find the intersection between a line and a plane using\n * http://en.wikipedia.org/wiki/Line%E2%80%93plane_intersection#Parametric_form\n * @param {axs.color.Line} l\n * @param {axs.color.Plane} p\n * @return {axs.color.YCbCr}\n */\naxs.color.findIntersection = function(l, p) {\n    var lhs = [ l.a.x - p.p0.x, l.a.y - p.p0.y, l.a.z - p.p0.z ];\n\n    var matrix = [ [ l.a.x - l.b.x, p.p1.x - p.p0.x, p.p2.x - p.p0.x ],\n                   [ l.a.y - l.b.y, p.p1.y - p.p0.y, p.p2.y - p.p0.y ],\n                   [ l.a.z - l.b.z, p.p1.z - p.p0.z, p.p2.z - p.p0.z ] ];\n    var invertedMatrix = axs.color.invert3x3Matrix(matrix);\n\n    var tuv = axs.color.multiplyMatrixVector(invertedMatrix, lhs);\n    var t = tuv[0];\n\n    var result = l.a.add(l.b.subtract(l.a).multiply(t));\n    return result;\n};\n\n/**\n * Multiply a matrix by a scalar.\n * @param {Array.<Array.<number>>} matrix A 3x3 matrix.\n * @param {number} scalar\n * @return {Array.<Array.<number>>}\n */\naxs.color.scalarMultiplyMatrix = function(matrix, scalar) {\n    var result = [];\n\n    for (var i = 0; i < 3; i++)\n      result[i] = axs.color.scalarMultiplyVector(matrix[i], scalar);\n\n    return result;\n};\n\n/**\n * Multiply a vector by a scalar.\n * @param {Array.<number>} vector\n * @param {number} scalar\n * @return {Array.<number>} vector\n */\naxs.color.scalarMultiplyVector = function(vector, scalar) {\n    var result = [];\n    for (var i = 0; i < vector.length; i++)\n        result[i] = vector[i] * scalar;\n    return result;\n};\n\naxs.color.kR = 0.2126;\naxs.color.kB = 0.0722;\naxs.color.YCC_MATRIX = axs.color.RGBToYCbCrMatrix(axs.color.kR, axs.color.kB);\naxs.color.INVERTED_YCC_MATRIX = axs.color.invert3x3Matrix(axs.color.YCC_MATRIX);\n\naxs.color.BLACK = new axs.color.Color(0, 0, 0, 1.0);\naxs.color.BLACK_YCC = axs.color.toYCbCr(axs.color.BLACK);\naxs.color.WHITE = new axs.color.Color(255, 255, 255, 1.0);\naxs.color.WHITE_YCC = axs.color.toYCbCr(axs.color.WHITE);\naxs.color.RED = new axs.color.Color(255, 0, 0, 1.0);\naxs.color.RED_YCC = axs.color.toYCbCr(axs.color.RED);\naxs.color.GREEN = new axs.color.Color(0, 255, 0, 1.0);\naxs.color.GREEN_YCC = axs.color.toYCbCr(axs.color.GREEN);\naxs.color.BLUE = new axs.color.Color(0, 0, 255, 1.0);\naxs.color.BLUE_YCC = axs.color.toYCbCr(axs.color.BLUE);\naxs.color.CYAN = new axs.color.Color(0, 255, 255, 1.0);\naxs.color.CYAN_YCC = axs.color.toYCbCr(axs.color.CYAN);\naxs.color.MAGENTA = new axs.color.Color(255, 0, 255, 1.0);\naxs.color.MAGENTA_YCC = axs.color.toYCbCr(axs.color.MAGENTA);\naxs.color.YELLOW = new axs.color.Color(255, 255, 0, 1.0);\naxs.color.YELLOW_YCC = axs.color.toYCbCr(axs.color.YELLOW);\n\naxs.color.YCC_CUBE_FACES_BLACK = [ { p0: axs.color.BLACK_YCC, p1: axs.color.RED_YCC, p2: axs.color.GREEN_YCC },\n                                   { p0: axs.color.BLACK_YCC, p1: axs.color.GREEN_YCC, p2: axs.color.BLUE_YCC },\n                                   { p0: axs.color.BLACK_YCC, p1: axs.color.BLUE_YCC, p2: axs.color.RED_YCC } ];\naxs.color.YCC_CUBE_FACES_WHITE = [ { p0: axs.color.WHITE_YCC, p1: axs.color.CYAN_YCC, p2: axs.color.MAGENTA_YCC },\n                                   { p0: axs.color.WHITE_YCC, p1: axs.color.MAGENTA_YCC, p2: axs.color.YELLOW_YCC },\n                                   { p0: axs.color.WHITE_YCC, p1: axs.color.YELLOW_YCC, p2: axs.color.CYAN_YCC } ];\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/Constants.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('axs.constants');\ngoog.provide('axs.constants.AuditResult');\ngoog.provide('axs.constants.Severity');\n\n/** @type {Object.<string, Object>} */\naxs.constants.ARIA_ROLES = {\n    \"alert\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"region\" ]\n    },\n    \"alertdialog\": {\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"alert\", \"dialog\" ]\n    },\n    \"application\": {\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"landmark\" ]\n    },\n    \"article\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"document\", \"region\" ]\n    },\n    \"banner\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"landmark\" ]\n    },\n    \"button\": {\n        \"childpresentational\": true,\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"command\" ],\n        \"properties\": [ \"aria-expanded\", \"aria-pressed\" ]\n    },\n    \"checkbox\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"input\" ],\n        \"requiredProperties\": [ \"aria-checked\" ],\n        \"properties\": [ \"aria-checked\" ]\n    },\n    \"columnheader\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"gridcell\", \"sectionhead\", \"widget\" ],\n        \"properties\": [ \"aria-sort\" ],\n        \"scope\": [ \"row\" ]\n    },\n    \"combobox\": {\n        \"mustcontain\": [ \"listbox\", \"textbox\" ],\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"select\" ],\n        \"requiredProperties\": [ \"aria-expanded\" ],\n        \"properties\": [ \"aria-expanded\", \"aria-autocomplete\", \"aria-required\" ]\n    },\n    \"command\": {\n        \"abstract\": true,\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"widget\" ]\n    },\n    \"complementary\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"landmark\" ]\n    },\n    \"composite\": {\n        \"abstract\": true,\n        \"childpresentational\": false,\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"widget\" ],\n        \"properties\": [ \"aria-activedescendant\" ]\n    },\n    \"contentinfo\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"landmark\" ]\n    },\n    \"definition\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"section\" ]\n    },\n    \"dialog\": {\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"window\" ]\n    },\n    \"directory\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"parent\": [ \"list\" ]\n    },\n    \"document\": {\n        \"namefrom\": [ \" author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"structure\" ],\n        \"properties\": [ \"aria-expanded\" ]\n    },\n    \"form\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"landmark\" ]\n    },\n    \"grid\": {\n        \"mustcontain\": [ \"row\", \"rowgroup\" ],\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"composite\", \"region\" ],\n        \"properties\": [ \"aria-level\", \"aria-multiselectable\", \"aria-readonly\" ]\n    },\n    \"gridcell\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"section\", \"widget\" ],\n        \"properties\": [ \"aria-readonly\", \"aria-required\", \"aria-selected\" ],\n        \"scope\": [ \"row\" ]\n    },\n    \"group\": {\n        \"namefrom\": [ \" author\" ],\n        \"parent\": [ \"section\" ],\n        \"properties\": [ \"aria-activedescendant\" ]\n    },\n    \"heading\": {\n        \"namerequired\": true,\n        \"parent\": [ \"sectionhead\" ],\n        \"properties\": [ \"aria-level\" ]\n    },\n    \"img\": {\n        \"childpresentational\": true,\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"section\" ]\n    },\n    \"input\": {\n        \"abstract\": true,\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"widget\" ]\n    },\n    \"landmark\": {\n        \"abstract\": true,\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": false,\n        \"parent\": [ \"region\" ]\n    },\n    \"link\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"command\" ],\n        \"properties\": [ \"aria-expanded\" ]\n    },\n    \"list\": {\n        \"mustcontain\": [ \"group\", \"listitem\" ],\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"region\" ]\n    },\n    \"listbox\": {\n        \"mustcontain\": [ \"option\" ],\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"list\", \"select\" ],\n        \"properties\": [ \"aria-multiselectable\", \"aria-required\" ]\n    },\n    \"listitem\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"section\" ],\n        \"properties\": [ \"aria-level\", \"aria-posinset\", \"aria-setsize\" ],\n        \"scope\": [ \"list\" ]\n    },\n    \"log\": {\n        \"namefrom\": [ \" author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"region\" ]\n    },\n    \"main\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"landmark\" ]\n    },\n    \"marquee\": {\n        \"namerequired\": true,\n        \"parent\": [ \"section\" ]\n    },\n    \"math\": {\n        \"childpresentational\": true,\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"section\" ]\n    },\n    \"menu\": {\n        \"mustcontain\": [\n            \"group\",\n            \"menuitemradio\",\n            \"menuitem\",\n            \"menuitemcheckbox\"\n        ],\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"list\", \"select\" ]\n    },\n    \"menubar\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"menu\" ]\n    },\n    \"menuitem\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"command\" ],\n        \"scope\": [ \"menu\", \"menubar\" ]\n    },\n    \"menuitemcheckbox\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"checkbox\", \"menuitem\" ],\n        \"scope\": [ \"menu\", \"menubar\" ]\n    },\n    \"menuitemradio\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"menuitemcheckbox\", \"radio\" ],\n        \"scope\": [ \"menu\", \"menubar\" ]\n    },\n    \"navigation\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"landmark\" ]\n    },\n    \"note\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"section\" ]\n    },\n    \"option\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"input\" ],\n        \"properties\": [\n            \"aria-checked\",\n            \"aria-posinset\",\n            \"aria-selected\",\n            \"aria-setsize\"\n        ]\n    },\n    \"presentation\": {\n        \"parent\": [ \"structure\" ]\n    },\n    \"progressbar\": {\n        \"childpresentational\": true,\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"range\" ]\n    },\n    \"radio\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"checkbox\", \"option\" ]\n    },\n    \"radiogroup\": {\n        \"mustcontain\": [ \"radio\" ],\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"select\" ],\n        \"properties\": [ \"aria-required\" ]\n    },\n    \"range\": {\n        \"abstract\": true,\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"widget\" ],\n        \"properties\": [\n            \"aria-valuemax\",\n            \"aria-valuemin\",\n            \"aria-valuenow\",\n            \"aria-valuetext\"\n        ]\n    },\n    \"region\": {\n        \"namefrom\": [ \" author\" ],\n        \"parent\": [ \"section\" ]\n    },\n    \"roletype\": {\n        \"abstract\": true,\n        \"properties\": [\n            \"aria-atomic\",\n            \"aria-busy\",\n            \"aria-controls\",\n            \"aria-describedby\",\n            \"aria-disabled\",\n            \"aria-dropeffect\",\n            \"aria-flowto\",\n            \"aria-grabbed\",\n            \"aria-haspopup\",\n            \"aria-hidden\",\n            \"aria-invalid\",\n            \"aria-label\",\n            \"aria-labelledby\",\n            \"aria-live\",\n            \"aria-owns\",\n            \"aria-relevant\"\n        ]\n    },\n    \"row\": {\n        \"mustcontain\": [ \"columnheader\", \"gridcell\", \"rowheader\" ],\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"parent\": [ \"group\", \"widget\" ],\n        \"properties\": [ \"aria-level\", \"aria-selected\" ],\n        \"scope\": [ \"grid\", \"rowgroup\", \"treegrid\" ]\n    },\n    \"rowgroup\": {\n        \"mustcontain\": [ \"row\" ],\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"parent\": [ \"group\" ],\n        \"scope\": [ \"grid\" ]\n    },\n    \"rowheader\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"gridcell\", \"sectionhead\", \"widget\" ],\n        \"properties\": [ \"aria-sort\" ],\n        \"scope\": [ \"row\" ]\n    },\n    \"search\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"landmark\" ]\n    },\n    \"section\": {\n        \"abstract\": true,\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"parent\": [ \"structure\" ],\n        \"properties\": [ \"aria-expanded\" ]\n    },\n    \"sectionhead\": {\n        \"abstract\": true,\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"parent\": [ \"structure\" ],\n        \"properties\": [ \"aria-expanded\" ]\n    },\n    \"select\": {\n        \"abstract\": true,\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"composite\", \"group\", \"input\" ]\n    },\n    \"separator\": {\n        \"childpresentational\": true,\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"structure\" ],\n        \"properties\": [ \"aria-expanded\", \"aria-orientation\" ]\n    },\n    \"scrollbar\": {\n        \"childpresentational\": true,\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": false,\n        \"parent\": [ \"input\", \"range\" ],\n        \"requiredProperties\": [\n            \"aria-controls\",\n            \"aria-orientation\",\n            \"aria-valuemax\",\n            \"aria-valuemin\",\n            \"aria-valuenow\"\n        ],\n        \"properties\": [\n            \"aria-controls\",\n            \"aria-orientation\",\n            \"aria-valuemax\",\n            \"aria-valuemin\",\n            \"aria-valuenow\"\n        ]\n    },\n    \"slider\": {\n        \"childpresentational\": true,\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"input\", \"range\" ],\n        \"requiredProperties\": [ \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\" ],\n        \"properties\": [\n            \"aria-valuemax\",\n            \"aria-valuemin\",\n            \"aria-valuenow\",\n            \"aria-orientation\"\n        ]\n    },\n    \"spinbutton\": {\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"input\", \"range\" ],\n        \"requiredProperties\": [ \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\" ],\n        \"properties\": [\n            \"aria-valuemax\",\n            \"aria-valuemin\",\n            \"aria-valuenow\",\n            \"aria-required\"\n        ]\n    },\n    \"status\": {\n        \"parent\": [ \"region\" ]\n    },\n    \"structure\": {\n        \"abstract\": true,\n        \"parent\": [ \"roletype\" ]\n    },\n    \"tab\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"parent\": [ \"sectionhead\", \"widget\" ],\n        \"properties\": [ \"aria-selected\" ],\n        \"scope\": [ \"tablist\" ]\n    },\n    \"tablist\": {\n        \"mustcontain\": [ \"tab\" ],\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"composite\", \"directory\" ],\n        \"properties\": [ \"aria-level\" ]\n    },\n    \"tabpanel\": {\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"region\" ]\n    },\n    \"textbox\": {\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"input\" ],\n        \"properties\": [\n            \"aria-activedescendant\",\n            \"aria-autocomplete\",\n            \"aria-multiline\",\n            \"aria-readonly\",\n            \"aria-required\"\n        ]\n    },\n    \"timer\": {\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"status\" ]\n    },\n    \"toolbar\": {\n        \"namefrom\": [ \"author\" ],\n        \"parent\": [ \"group\" ]\n    },\n    \"tooltip\": {\n        \"namerequired\": true,\n        \"parent\": [ \"section\" ]\n    },\n    \"tree\": {\n        \"mustcontain\": [ \"group\", \"treeitem\" ],\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"select\" ],\n        \"properties\": [ \"aria-multiselectable\", \"aria-required\" ]\n    },\n    \"treegrid\": {\n        \"mustcontain\": [ \"row\" ],\n        \"namefrom\": [ \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"grid\", \"tree\" ]\n    },\n    \"treeitem\": {\n        \"namefrom\": [ \"contents\", \"author\" ],\n        \"namerequired\": true,\n        \"parent\": [ \"listitem\", \"option\" ],\n        \"scope\": [ \"group\", \"tree\" ]\n    },\n    \"widget\": {\n        \"abstract\": true,\n        \"parent\": [ \"roletype\" ]\n    },\n    \"window\": {\n        \"abstract\": true,\n        \"namefrom\": [ \" author\" ],\n        \"parent\": [ \"roletype\" ],\n        \"properties\": [ \"aria-expanded\" ]\n    }\n};\n\naxs.constants.WIDGET_ROLES = {};\n\n/**\n * Squashes the parent hierarchy on to role object.\n * @param {Object} role\n * @param {Object} set\n * @private\n */\naxs.constants.addAllParentRolesToSet_ = function(role, set) {\n  if (!role['parent'])\n      return;\n  var parents = role['parent'];\n  for (var j = 0; j < parents.length; j++) {\n    var parentRoleName = parents[j];\n    set[parentRoleName] = true;\n    axs.constants.addAllParentRolesToSet_(\n        axs.constants.ARIA_ROLES[parentRoleName], set);\n  }\n};\n\n/**\n * Adds all properties and requiredProperties from parent hierarchy.\n * @param {Object} role\n * @param {string} propertiesName\n * @param {Object} propertiesSet\n * @private\n */\naxs.constants.addAllPropertiesToSet_ = function(role, propertiesName,\n    propertiesSet) {\n  var properties = role[propertiesName];\n  if (properties) {\n    for (var i = 0; i < properties.length; i++)\n      propertiesSet[properties[i]] = true;\n  }\n  if (role['parent']) {\n    var parents = role['parent'];\n    for (var j = 0; j < parents.length; j++) {\n      var parentRoleName = parents[j];\n      axs.constants.addAllPropertiesToSet_(\n          axs.constants.ARIA_ROLES[parentRoleName], propertiesName,\n          propertiesSet);\n    }\n  }\n};\n\n// TODO make a AriaRole object etc.\nfor (var roleName in axs.constants.ARIA_ROLES) {\n    var role = axs.constants.ARIA_ROLES[roleName];\n\n    var propertiesSet = {};\n    axs.constants.addAllPropertiesToSet_(role, 'properties', propertiesSet);\n    role['propertiesSet'] = propertiesSet;\n\n    var requiredPropertiesSet = {};\n    axs.constants.addAllPropertiesToSet_(role, 'requiredProperties', requiredPropertiesSet);\n    role['requiredPropertiesSet'] = requiredPropertiesSet;\n    var parentRolesSet = {};\n    axs.constants.addAllParentRolesToSet_(role, parentRolesSet);\n    role['allParentRolesSet'] = parentRolesSet;\n    if ('widget' in parentRolesSet)\n        axs.constants.WIDGET_ROLES[roleName] = role;\n}\n\n// BEGIN ARIA_PROPERTIES_AUTOGENERATED\n/** @type {Object.<string, Object>} */\naxs.constants.ARIA_PROPERTIES = {\n    \"activedescendant\": {\n        \"type\": \"property\",\n        \"valueType\": \"idref\"\n    },\n    \"atomic\": {\n        \"defaultValue\": \"false\",\n        \"type\": \"property\",\n        \"valueType\": \"boolean\"\n    },\n    \"autocomplete\": {\n        \"defaultValue\": \"none\",\n        \"type\": \"property\",\n        \"valueType\": \"token\",\n        \"values\": [\n            \"inline\",\n            \"list\",\n            \"both\",\n            \"none\"\n        ]\n    },\n    \"busy\": {\n        \"defaultValue\": \"false\",\n        \"type\": \"state\",\n        \"valueType\": \"boolean\"\n    },\n    \"checked\": {\n        \"defaultValue\": \"undefined\",\n        \"type\": \"state\",\n        \"valueType\": \"token\",\n        \"values\": [\n            \"true\",\n            \"false\",\n            \"mixed\",\n            \"undefined\"\n        ]\n    },\n    \"controls\": {\n        \"type\": \"property\",\n        \"valueType\": \"idref_list\"\n    },\n    \"describedby\": {\n        \"type\": \"property\",\n        \"valueType\": \"idref_list\"\n    },\n    \"disabled\": {\n        \"defaultValue\": \"false\",\n        \"type\": \"state\",\n        \"valueType\": \"boolean\"\n    },\n    \"dropeffect\": {\n        \"defaultValue\": \"none\",\n        \"type\": \"property\",\n        \"valueType\": \"token_list\",\n        \"values\": [\n            \"copy\",\n            \"move\",\n            \"link\",\n            \"execute\",\n            \"popup\",\n            \"none\"\n        ]\n    },\n    \"expanded\": {\n        \"defaultValue\": \"undefined\",\n        \"type\": \"state\",\n        \"valueType\": \"token\",\n        \"values\": [\n            \"true\",\n            \"false\",\n            \"undefined\"\n        ]\n    },\n    \"flowto\": {\n        \"type\": \"property\",\n        \"valueType\": \"idref_list\"\n    },\n    \"grabbed\": {\n        \"defaultValue\": \"undefined\",\n        \"type\": \"state\",\n        \"valueType\": \"token\",\n        \"values\": [\n            \"true\",\n            \"false\",\n            \"undefined\"\n        ]\n    },\n    \"haspopup\": {\n        \"defaultValue\": \"false\",\n        \"type\": \"property\",\n        \"valueType\": \"boolean\"\n    },\n    \"hidden\": {\n        \"defaultValue\": \"false\",\n        \"type\": \"state\",\n        \"valueType\": \"boolean\"\n    },\n    \"invalid\": {\n        \"defaultValue\": \"false\",\n        \"type\": \"state\",\n        \"valueType\": \"token\",\n        \"values\": [\n            \"grammar\",\n            \"false\",\n            \"spelling\",\n            \"true\"\n        ]\n    },\n    \"label\": {\n        \"type\": \"property\",\n        \"valueType\": \"string\"\n    },\n    \"labelledby\": {\n        \"type\": \"property\",\n        \"valueType\": \"idref_list\"\n    },\n    \"level\": {\n        \"type\": \"property\",\n        \"valueType\": \"integer\"\n    },\n    \"live\": {\n        \"defaultValue\": \"off\",\n        \"type\": \"property\",\n        \"valueType\": \"token\",\n        \"values\": [\n            \"off\",\n            \"polite\",\n            \"assertive\"\n        ]\n    },\n    \"multiline\": {\n        \"defaultValue\": \"false\",\n        \"type\": \"property\",\n        \"valueType\": \"boolean\"\n    },\n    \"multiselectable\": {\n        \"defaultValue\": \"false\",\n        \"type\": \"property\",\n        \"valueType\": \"boolean\"\n    },\n    \"orientation\": {\n        \"defaultValue\": \"vertical\",\n        \"type\": \"property\",\n        \"valueType\": \"token\",\n        \"values\": [\n            \"horizontal\",\n            \"vertical\"\n        ]\n    },\n    \"owns\": {\n        \"type\": \"property\",\n        \"valueType\": \"idref_list\"\n    },\n    \"posinset\": {\n        \"type\": \"property\",\n        \"valueType\": \"integer\"\n    },\n    \"pressed\": {\n        \"defaultValue\": \"undefined\",\n        \"type\": \"state\",\n        \"valueType\": \"token\",\n        \"values\": [\n            \"true\",\n            \"false\",\n            \"mixed\",\n            \"undefined\"\n        ]\n    },\n    \"readonly\": {\n        \"defaultValue\": \"false\",\n        \"type\": \"property\",\n        \"valueType\": \"boolean\"\n    },\n    \"relevant\": {\n        \"defaultValue\": \"additions text\",\n        \"type\": \"property\",\n        \"valueType\": \"token_list\",\n        \"values\": [\n            \"additions\",\n            \"removals\",\n            \"text\",\n            \"all\"\n        ]\n    },\n    \"required\": {\n        \"defaultValue\": \"false\",\n        \"type\": \"property\",\n        \"valueType\": \"boolean\"\n    },\n    \"selected\": {\n        \"defaultValue\": \"undefined\",\n        \"type\": \"state\",\n        \"valueType\": \"token\",\n        \"values\": [\n            \"true\",\n            \"false\",\n            \"undefined\"\n        ]\n    },\n    \"setsize\": {\n        \"type\": \"property\",\n        \"valueType\": \"integer\"\n    },\n    \"sort\": {\n        \"defaultValue\": \"none\",\n        \"type\": \"property\",\n        \"valueType\": \"token\",\n        \"values\": [\n            \"ascending\",\n            \"descending\",\n            \"none\",\n            \"other\"\n        ]\n    },\n    \"valuemax\": {\n        \"type\": \"property\",\n        \"valueType\": \"decimal\"\n    },\n    \"valuemin\": {\n        \"type\": \"property\",\n        \"valueType\": \"decimal\"\n    },\n    \"valuenow\": {\n        \"type\": \"property\",\n        \"valueType\": \"decimal\"\n    },\n    \"valuetext\": {\n        \"type\": \"property\",\n        \"valueType\": \"string\"\n    }\n};\n// END ARIA_PROPERTIES_AUTOGENERATED\n\n(function() {\n// pull values lists into sets\nfor (var propertyName in axs.constants.ARIA_PROPERTIES) {\n    var propertyDetails = axs.constants.ARIA_PROPERTIES[propertyName];\n    if (!propertyDetails.values)\n        continue;\n    var valuesSet = {};\n    for (var i = 0; i < propertyDetails.values.length; i++)\n        valuesSet[propertyDetails.values[i]] = true;\n    propertyDetails.valuesSet = valuesSet;\n}\n})();\n\n/**\n * All of the states and properties which apply globally.\n * @type {Object<!string, !boolean>}\n */\naxs.constants.GLOBAL_PROPERTIES = axs.constants.ARIA_ROLES['roletype'].propertiesSet;\n\n/**\n * A constant indicating no role name.\n * @type {string}\n */\naxs.constants.NO_ROLE_NAME = ' ';\n\n/**\n * A mapping from ARIA role names to their message ids.\n * Copied from ChromeVox:\n * http://code.google.com/p/google-axs-chrome/source/browse/trunk/chromevox/common/aria_util.js\n * @type {Object.<string, string>}\n */\naxs.constants.WIDGET_ROLE_TO_NAME = {\n  'alert' : 'aria_role_alert',\n  'alertdialog' : 'aria_role_alertdialog',\n  'button' : 'aria_role_button',\n  'checkbox' : 'aria_role_checkbox',\n  'columnheader' : 'aria_role_columnheader',\n  'combobox' : 'aria_role_combobox',\n  'dialog' : 'aria_role_dialog',\n  'grid' : 'aria_role_grid',\n  'gridcell' : 'aria_role_gridcell',\n  'link' : 'aria_role_link',\n  'listbox' : 'aria_role_listbox',\n  'log' : 'aria_role_log',\n  'marquee' : 'aria_role_marquee',\n  'menu' : 'aria_role_menu',\n  'menubar' : 'aria_role_menubar',\n  'menuitem' : 'aria_role_menuitem',\n  'menuitemcheckbox' : 'aria_role_menuitemcheckbox',\n  'menuitemradio' : 'aria_role_menuitemradio',\n  'option' : axs.constants.NO_ROLE_NAME,\n  'progressbar' : 'aria_role_progressbar',\n  'radio' : 'aria_role_radio',\n  'radiogroup' : 'aria_role_radiogroup',\n  'rowheader' : 'aria_role_rowheader',\n  'scrollbar' : 'aria_role_scrollbar',\n  'slider' : 'aria_role_slider',\n  'spinbutton' : 'aria_role_spinbutton',\n  'status' : 'aria_role_status',\n  'tab' : 'aria_role_tab',\n  'tabpanel' : 'aria_role_tabpanel',\n  'textbox' : 'aria_role_textbox',\n  'timer' : 'aria_role_timer',\n  'toolbar' : 'aria_role_toolbar',\n  'tooltip' : 'aria_role_tooltip',\n  'treeitem' : 'aria_role_treeitem'\n};\n\n\n/**\n * @type {Object.<string, string>}\n * Copied from ChromeVox:\n * http://code.google.com/p/google-axs-chrome/source/browse/trunk/chromevox/common/aria_util.js\n */\naxs.constants.STRUCTURE_ROLE_TO_NAME = {\n  'article' : 'aria_role_article',\n  'application' : 'aria_role_application',\n  'banner' : 'aria_role_banner',\n  'columnheader' : 'aria_role_columnheader',\n  'complementary' : 'aria_role_complementary',\n  'contentinfo' : 'aria_role_contentinfo',\n  'definition' : 'aria_role_definition',\n  'directory' : 'aria_role_directory',\n  'document' : 'aria_role_document',\n  'form' : 'aria_role_form',\n  'group' : 'aria_role_group',\n  'heading' : 'aria_role_heading',\n  'img' : 'aria_role_img',\n  'list' : 'aria_role_list',\n  'listitem' : 'aria_role_listitem',\n  'main' : 'aria_role_main',\n  'math' : 'aria_role_math',\n  'navigation' : 'aria_role_navigation',\n  'note' : 'aria_role_note',\n  'region' : 'aria_role_region',\n  'rowheader' : 'aria_role_rowheader',\n  'search' : 'aria_role_search',\n  'separator' : 'aria_role_separator'\n};\n\n\n/**\n * @type {Array.<Object>}\n * Copied from ChromeVox:\n * http://code.google.com/p/google-axs-chrome/source/browse/trunk/chromevox/common/aria_util.js\n */\naxs.constants.ATTRIBUTE_VALUE_TO_STATUS = [\n  { name: 'aria-autocomplete', values:\n      {'inline' : 'aria_autocomplete_inline',\n       'list' : 'aria_autocomplete_list',\n       'both' : 'aria_autocomplete_both'} },\n  { name: 'aria-checked', values:\n      {'true' : 'aria_checked_true',\n       'false' : 'aria_checked_false',\n       'mixed' : 'aria_checked_mixed'} },\n  { name: 'aria-disabled', values:\n      {'true' : 'aria_disabled_true'} },\n  { name: 'aria-expanded', values:\n      {'true' : 'aria_expanded_true',\n       'false' : 'aria_expanded_false'} },\n  { name: 'aria-invalid', values:\n      {'true' : 'aria_invalid_true',\n       'grammar' : 'aria_invalid_grammar',\n       'spelling' : 'aria_invalid_spelling'} },\n  { name: 'aria-multiline', values:\n      {'true' : 'aria_multiline_true'} },\n  { name: 'aria-multiselectable', values:\n      {'true' : 'aria_multiselectable_true'} },\n  { name: 'aria-pressed', values:\n      {'true' : 'aria_pressed_true',\n       'false' : 'aria_pressed_false',\n       'mixed' : 'aria_pressed_mixed'} },\n  { name: 'aria-readonly', values:\n      {'true' : 'aria_readonly_true'} },\n  { name: 'aria-required', values:\n      {'true' : 'aria_required_true'} },\n  { name: 'aria-selected', values:\n      {'true' : 'aria_selected_true',\n       'false' : 'aria_selected_false'} }\n];\n\n/**\n * Copied from ChromeVox:\n * http://code.google.com/p/google-axs-chrome/source/browse/trunk/chromevox/common/dom_util.js\n * @type {Object}\n */\naxs.constants.INPUT_TYPE_TO_INFORMATION_TABLE_MSG = {\n  'button' : 'input_type_button',\n  'checkbox' : 'input_type_checkbox',\n  'color' : 'input_type_color',\n  'datetime' : 'input_type_datetime',\n  'datetime-local' : 'input_type_datetime_local',\n  'date' : 'input_type_date',\n  'email' : 'input_type_email',\n  'file' : 'input_type_file',\n  'image' : 'input_type_image',\n  'month' : 'input_type_month',\n  'number' : 'input_type_number',\n  'password' : 'input_type_password',\n  'radio' : 'input_type_radio',\n  'range' : 'input_type_range',\n  'reset' : 'input_type_reset',\n  'search' : 'input_type_search',\n  'submit' : 'input_type_submit',\n  'tel' : 'input_type_tel',\n  'text' : 'input_type_text',\n  'url' : 'input_type_url',\n  'week' : 'input_type_week'\n};\n\n\n/**\n * Copied from ChromeVox:\n * http://code.google.com/p/google-axs-chrome/source/browse/trunk/chromevox/common/dom_util.js\n * @type {Object}\n */\naxs.constants.TAG_TO_INFORMATION_TABLE_VERBOSE_MSG = {\n  'A' : 'tag_link',\n  'BUTTON' : 'tag_button',\n  'H1' : 'tag_h1',\n  'H2' : 'tag_h2',\n  'H3' : 'tag_h3',\n  'H4' : 'tag_h4',\n  'H5' : 'tag_h5',\n  'H6' : 'tag_h6',\n  'LI' : 'tag_li',\n  'OL' : 'tag_ol',\n  'SELECT' : 'tag_select',\n  'TEXTAREA' : 'tag_textarea',\n  'UL' : 'tag_ul',\n  'SECTION' : 'tag_section',\n  'NAV' : 'tag_nav',\n  'ARTICLE' : 'tag_article',\n  'ASIDE' : 'tag_aside',\n  'HGROUP' : 'tag_hgroup',\n  'HEADER' : 'tag_header',\n  'FOOTER' : 'tag_footer',\n  'TIME' : 'tag_time',\n  'MARK' : 'tag_mark'\n};\n\n/**\n * Copied from ChromeVox:\n * http://code.google.com/p/google-axs-chrome/source/browse/trunk/chromevox/common/dom_util.js\n * @type {Object}\n */\naxs.constants.TAG_TO_INFORMATION_TABLE_BRIEF_MSG = {\n  'BUTTON' : 'tag_button',\n  'SELECT' : 'tag_select',\n  'TEXTAREA' : 'tag_textarea'\n};\n\naxs.constants.MIXED_VALUES = {\n    \"true\": true,\n    \"false\": true,\n    \"mixed\": true\n};\n\n/** @enum {string} */\naxs.constants.Severity = {\n    INFO: 'Info',\n    WARNING: 'Warning',\n    SEVERE: 'Severe'\n};\n\n/** @enum {string} */\naxs.constants.AuditResult = {\n    PASS: 'PASS',\n    FAIL: 'FAIL',\n    NA: 'NA'\n};\n\n/** @enum {boolean} */\naxs.constants.InlineElements = {\n    // fontstyle\n    'TT': true,\n    'I': true,\n    'B': true,\n    'BIG': true,\n    'SMALL': true,\n\n    // phrase\n    'EM': true,\n    'STRONG': true,\n    'DFN': true,\n    'CODE': true,\n    'SAMP': true,\n    'KBD': true,\n    'VAR': true,\n    'CITE': true,\n    'ABBR': true,\n    'ACRONYM': true,\n\n    // special\n    'A': true,\n    'IMG': true,\n    'OBJECT': true,\n    'BR': true,\n    'SCRIPT': true,\n    'MAP': true,\n    'Q': true,\n    'SUB': true,\n    'SUP': true,\n    'SPAN': true,\n    'BDO': true,\n\n    // formctrl\n    'INPUT': true,\n    'SELECT': true,\n    'TEXTAREA': true,\n    'LABEL': true,\n    'BUTTON': true\n };\n\n /** @enum {boolean} */\naxs.constants.NATIVELY_DISABLEABLE = {\n    // W3C and WHATWG https://html.spec.whatwg.org/#enabling-and-disabling-form-controls:-the-disabled-attribute\n    'BUTTON': true,\n    'INPUT': true,\n    'SELECT': true,\n    'TEXTAREA': true,\n    'FIELDSET': true,\n\n    // W3C http://www.w3.org/TR/html5/disabled-elements.html#disabled-elements\n    'OPTGROUP': true,\n    'OPTION': true\n};\n\n/**\n * Maps ARIA attributes to their exactly equivalent HTML attributes.\n * @type {Object.<string, string>}\n */\naxs.constants.ARIA_TO_HTML_ATTRIBUTE = {\n  'aria-checked' : 'checked',\n  'aria-disabled' : 'disabled',\n  'aria-hidden' : 'hidden',\n  'aria-expanded' : 'open',\n  'aria-valuemax' : 'max',\n  'aria-valuemin' : 'min',\n  'aria-readonly' : 'readonly',\n  'aria-required' : 'required',\n  'aria-selected' : 'selected',\n  'aria-valuenow' : 'value'\n};\n\n/**\n * Holds information about implicit ARIA semantics for a given HTML element type.\n * This object has the following properties:\n * <ul>\n * <li>`role` will contain the implicit role if it exists, otherwise empty string.</li>\n * <li>`allowed` contains the roles that can reasonably be applied to this element.\n *    Note: A tag that can take any role is signified by a '*' wildcard in the array. It is not\n *    an error if the array contains other roles but currently this has no meaning. In future it may\n *    be used to indicate recommended roles.\n * </li>\n * <li>`selector` is present if this is a 'subclass' of the base HTML element, i.e. its semantics are\n *    modified by context or attributes. It can be used with the selectors API to find and/or match\n *    elements.\n * </li>\n * <li>`reserved` will be true if this is a semantically strong element that you may not modify with any\n *    ARIA attributes, including role or global attributes.\n * </li>\n * </ul>\n *\n * @typedef {{ role: string,\n *             allowed: Array.<string>,\n *             selector: string,\n *             reserved:  boolean }}\n */\naxs.constants.HtmlInfo;\n/**\n * A lookup table which maps uppercase tagName to information about implicit ARIA semantics.\n * This table is based on the document: http://w3c.github.io/aria-in-html/\n * It is not complete and never can be. Complex scenarios require specific handling not provided here.\n * Any element not listed here:\n *    - has no implicit role\n *    - can take any role\n *    e.g. em,strong,small,s,cite,q,dfn,abbr,time,code,var,samp,kbd,sub and sup,i,b,u,mark ,ruby,rt,rp,bdi,bdo,br,wbr\n *\n * Where there is any ambiguity this table will endeavor to provide for the most broad case (to avoid\n *    false failures in conformance checking).\n *\n * For example 'table' can take any role however in practice it should only be given the role 'grid' when\n *    being used as a data grid or 'presentation' when used for layout. This lookup ignores these nuances and\n *    allows all roles.\n *\n * @type {Object.<string, Array.<axs.constants.HtmlInfo>>}\n */\naxs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO = {\n    'A': [{\n        role: 'link',\n        allowed: [\n        'button',\n        'checkbox',\n        'menuitem',\n        'menuitemcheckbox',\n        'menuitemradio',\n        'tab',\n        'treeitem'],\n        selector: 'a[href]'\n    }],\n    'ADDRESS': [{\n        role: '',\n        allowed: [\n        'contentinfo',\n        'presentation']\n    }],\n    'AREA': [{\n        role: 'link',\n        selector: 'area[href]'\n    }],\n    'ARTICLE': [{\n        role: 'article',\n        allowed: [\n        'presentation',\n        'article',\n        'document',\n        'application',\n        'main']\n    }],\n    'ASIDE': [{\n        role: 'complementary',\n        allowed: [\n        'note',\n        'complementary',\n        'search',\n        'presentation']\n    }],\n    'AUDIO': [{\n        role: '',\n        allowed: ['application', 'presentation']\n    }],\n    'BASE': [{\n        role: '',\n        reserved: true\n    }],\n    'BODY': [{\n        role: 'document',\n        allowed: ['presentation']\n    }],\n    'BUTTON': [{\n        role: 'button',\n        allowed: [\n        'link',\n        'menuitem',\n        'menuitemcheckbox',\n        'menuitemradio',\n        'radio'],\n        selector: 'button:not([aria-pressed]):not([type=\"menu\"])'\n    }, {\n        role: 'button',\n        allowed: ['button'],\n        selector: 'button[aria-pressed]'\n    }, {\n        role: 'button',\n        attributes: {\n            'aria-haspopup': true\n        },\n        allowed: [\n        'link',\n        'menuitem',\n        'menuitemcheckbox',\n        'menuitemradio',\n        'radio'],\n        selector: 'button[type=\"menu\"]'\n    }],\n    'CAPTION': [{\n        role: '',\n        allowed: ['presentation']\n    }],\n    'COL': [{\n        role: '',\n        reserved: true\n    }],\n    'COLGROUP': [{\n        role: '',\n        reserved: true\n    }],\n    'DATALIST': [{\n        role: 'listbox',\n        attributes: {\n            'aria-multiselectable': false\n        },\n        allowed: ['presentation']\n    }],\n    'DEL': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'DD': [{\n        role: '',\n        allowed: ['presentation']\n    }],\n    'DT': [{\n        role: '',\n        allowed: ['presentation']\n    }],\n    'DETAILS': [{\n        role: 'group',\n        allowed: [\n        'group',\n        'presentation']\n    }],\n    'DIALOG': [{  // updated 'allowed' from: http://www.w3.org/html/wg/drafts/html/master/interactive-elements.html#the-dialog-element\n        role: 'dialog',\n        allowed: ['dialog', 'alert', 'alertdialog', 'application', 'log', 'marquee', 'status'],\n        selector: 'dialog[open]'\n    }, {\n        role: 'dialog',\n        attributes: {\n            'aria-hidden': true\n        },\n        allowed: ['dialog', 'alert', 'alertdialog', 'application', 'log', 'marquee', 'status'],\n        selector: 'dialog:not([open])'\n    }],\n    'DIV': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'DL': [{\n        role: 'list',\n        allowed: ['presentation']\n    }],\n    'EMBED': [{\n        role: '',\n        allowed: [\n        'application',\n        'document',\n        'img',\n        'presentation']\n    }],\n    'FIGURE': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'FOOTER': [{\n        role: '',\n        allowed: ['contentinfo', 'presentation']\n    }],\n    'FORM': [{\n        role: 'form',\n        allowed: ['presentation']\n    }],\n    'P': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'PRE': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'BLOCKQUOTE': [{\n        role: '',\n        allowed: ['*']\n    }],\n    H1: [{\n        role: 'heading'\n    }],\n    H2: [{\n        role: 'heading'\n    }],\n    H3: [{\n        role: 'heading'\n    }],\n    H4: [{\n        role: 'heading'\n    }],\n    H5: [{\n        role: 'heading'\n    }],\n    H6: [{\n        role: 'heading'\n    }],\n    'HEAD': [{\n        role: '',\n        reserved: true\n    }],\n    'HEADER': [{\n        role: '',\n        allowed: [\n        'banner',\n        'presentation']\n    }],\n    'HR': [{\n        role: 'separator',\n        allowed: ['presentation']\n    }],\n    'HTML': [{\n        role: '',\n        reserved: true\n    }],\n    'IFRAME': [{\n        role: '',\n        allowed: [\n        'application',\n        'document',\n        'img',\n        'presentation'],\n        selector: 'iframe:not([seamless])'\n    }, {\n        role: '',\n        allowed: [\n        'application',\n        'document',\n        'img',\n        'presentation',\n        'group'],\n        selector: 'iframe[seamless]'\n    }],\n    'IMG': [{\n        role: 'presentation',\n        reserved: true,\n        selector: 'img[alt=\"\"]'\n    }, {\n        role: 'img',\n        allowed: ['*'],\n        selector: 'img[alt]:not([alt=\"\"])'\n    }],\n    'INPUT': [{\n        role: 'button',\n        allowed: [\n        'link',\n        'menuitem',\n        'menuitemcheckbox',\n        'menuitemradio',\n        'radio'],\n        selector: 'input[type=\"button\"]:not([aria-pressed])'\n    }, {\n        role: 'button',\n        allowed: ['button'],\n        selector: 'input[type=\"button\"][aria-pressed]'\n    }, {\n        role: 'checkbox',\n        allowed: ['checkbox'],\n        selector: 'input[type=\"checkbox\"]'\n    }, {\n        role: '',\n        selector: 'input[type=\"color\"]'\n    }, {\n        role: '',\n        selector: 'input[type=\"date\"]'\n    }, {\n        role: '',\n        selector: 'input[type=\"datetime\"]'\n    }, {\n        role: 'textbox',\n        selector: 'input[type=\"email\"]:not([list])'\n    }, {\n        role: '',\n        selector: 'input[type=\"file\"]'\n    }, {\n        role: '',\n        reserved: true,\n        selector: 'input[type=\"hidden\"]'\n    }, {\n        role: 'button',\n        allowed: ['button'],\n        selector: 'input[type=\"image\"][aria-pressed]'\n    }, {\n        role: 'button',\n        allowed: [\n        'link',\n        'menuitem',\n        'menuitemcheckbox',\n        'menuitemradio',\n        'radio'],\n        selector: 'input[type=\"image\"]:not([aria-pressed])'\n    }, {\n        role: '',\n        selector: 'input[type=\"month\"]'\n    }, {\n        role: '',\n        selector: 'input[type=\"number\"]'\n    }, {\n        role: 'textbox',\n        selector: 'input[type=\"password\"]'\n    }, {\n        role: 'radio',\n        allowed: ['menuitemradio'],\n        selector: 'input[type=\"radio\"]'\n    }, {\n        role: 'slider',\n        selector: 'input[type=\"range\"]'\n    }, {\n        role: 'button',\n        selector: 'input[type=\"reset\"]'\n    }, {\n        role: 'combobox',  // aria-owns is set to the same value as the list attribute\n        selector: 'input[type=\"search\"][list]'\n    }, {\n        role: 'textbox',\n        selector: 'input[type=\"search\"]:not([list])'\n    }, {\n        role: 'button',\n        selector: 'input[type=\"submit\"]'\n    }, {\n        role: 'combobox',  // aria-owns is set to the same value as the list attribute\n        selector: 'input[type=\"tel\"][list]'\n    }, {\n        role: 'textbox',\n        selector: 'input[type=\"tel\"]:not([list])'\n    }, {\n        role: 'combobox',  // aria-owns is set to the same value as the list attribute\n        selector: 'input[type=\"text\"][list]'\n    }, {\n        role: 'textbox',\n        selector: 'input[type=\"text\"]:not([list])'\n    }, {\n        role: 'textbox',\n        selector: 'input:not([type])'\n    }, {\n        role: '',\n        selector: 'input[type=\"time\"]'\n    }, {\n        role: 'combobox',  // aria-owns is set to the same value as the list attribute\n        selector: 'input[type=\"url\"][list]'\n    }, {\n        role: 'textbox',\n        selector: 'input[type=\"url\"]:not([list])'\n    }, {\n        role: '',\n        selector: 'input[type=\"week\"]'\n    }],\n    'INS': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'KEYGEN': [{\n        role: ''\n    }],\n    'LABEL': [{\n        role: '',\n        allowed: ['presentation']\n    }],\n    'LI': [{\n        role: 'listitem',\n        allowed: [\n        'menuitem',\n        'menuitemcheckbox',\n        'menuitemradio',\n        'option',\n        'tab',\n        'treeitem',\n        'presentation'],\n        selector: 'ol:not([role=\"presentation\"])>li, ul:not([role=\"presentation\"])>li'\n    }, {\n        role: 'listitem',\n        allowed: [\n        'listitem',\n        'menuitem',\n        'menuitemcheckbox',\n        'menuitemradio',\n        'option',\n        'tab',\n        'treeitem',\n        'presentation'],\n        selector: 'ol[role=\"presentation\"]>li, ul[role=\"presentation\"]>li'\n    }],\n    'LINK': [{\n        role: 'link',\n        reserved: true,\n        selector: 'link[href]'\n    }],\n    'MAIN': [{\n        role: '',\n        allowed: [\n        'main',\n        'presentation']\n    }],\n    'MAP': [{\n        role: '',\n        reserved: true\n    }],\n    'MATH': [{\n        role: '',\n        allowed: ['presentation']\n    }],\n    'MENU': [{\n        role: 'toolbar',\n        selector: 'menu[type=\"toolbar\"]'\n    }],\n    'MENUITEM': [{\n        role: 'menuitem',\n        selector: 'menuitem[type=\"command\"]'\n    }, {\n        role: 'menuitemcheckbox',\n        selector: 'menuitem[type=\"checkbox\"]'\n    }, {\n        role: 'menuitemradio',\n        selector: 'menuitem[type=\"radio\"]'\n    }],\n    'META': [{\n        role: '',\n        reserved: true\n    }],\n    'METER': [{\n        role: 'progressbar',\n        allowed: ['presentation']\n    }],\n    'NAV': [{\n        role: 'navigation',\n        allowed: ['navigation', 'presentation']\n    }],\n    'NOSCRIPT': [{\n        role: '',\n        reserved: true\n    }],\n    'OBJECT': [{\n        role: '',\n        allowed: ['application', 'document', 'img', 'presentation']\n    }],\n    'OL': [{\n        role: 'list',\n        allowed: ['directory', 'group', 'listbox', 'menu', 'menubar', 'tablist', 'toolbar', 'tree', 'presentation']\n    }],\n    'OPTGROUP': [{\n        role: '',\n        allowed: ['presentation']\n    }],\n    'OPTION': [{\n        role: 'option'\n    }],\n    'OUTPUT': [{\n        role: 'status',\n        allowed: ['*']\n    }],\n    'PARAM': [{\n        role: '',\n        reserved: true\n    }],\n    'PICTURE': [{\n        role: '',\n        reserved: true\n    }],\n    'PROGRESS': [{\n        role: 'progressbar',\n        allowed: ['presentation']\n    }],\n    'SCRIPT': [{\n        role: '',\n        reserved: true\n    }],\n    'SECTION': [{\n        role: 'region',\n        allowed: [\n        'alert',\n        'alertdialog',\n        'application',\n        'contentinfo',\n        'dialog',\n        'document',\n        'log',\n        'marquee',\n        'search',\n        'status',\n        'presentation']\n    }],\n    'SELECT': [{\n        role: 'listbox'\n    }],\n    'SOURCE': [{\n        role: '',\n        reserved: true\n    }],\n    'SPAN': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'STYLE': [{\n        role: '',\n        reserved: true\n    }],\n    'SVG': [{\n        role: '',\n        allowed: [\n        'application',\n        'document',\n        'img',\n        'presentation']\n    }],\n    'SUMMARY': [{\n        role: '',\n        allowed: ['presentation']\n    }],\n    'TABLE': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'TEMPLATE': [{\n        role: '',\n        reserved: true\n    }],\n    'TEXTAREA': [{\n        role: 'textbox'\n    }],\n    'TBODY': [{\n        role: 'rowgroup',\n        allowed: ['*']\n    }],\n    'THEAD': [{\n        role: 'rowgroup',\n        allowed: ['*']\n    }],\n    'TFOOT': [{\n        role: 'rowgroup',\n        allowed: ['*']\n    }],\n    'TITLE': [{\n        role: '',\n        reserved: true\n    }],\n    'TD': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'TH': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'TR': [{\n        role: '',\n        allowed: ['*']\n    }],\n    'TRACK': [{\n        role: '',\n        reserved: true\n    }],\n    'UL': [{\n        role: 'list',\n        allowed: [\n        'directory',\n        'group',\n        'listbox',\n        'menu',\n        'menubar',\n        'tablist',\n        'toolbar',\n        'tree',\n        'presentation']\n    }],\n    'VIDEO': [{\n        role: '',\n        allowed: ['application', 'presentation']\n    }]\n};\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/DOMUtils.js":"// Copyright 2015 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.provide('axs.dom');\n\n/**\n * Returns the nearest ancestor which is an Element.\n * @param {Node} node\n * @return {?Element}\n */\naxs.dom.parentElement = function(node) {\n    if (!node)\n        return null;\n\n    var parentNode = axs.dom.composedParentNode(node);\n    if (!parentNode)\n        return null;\n\n    switch (parentNode.nodeType) {\n    case Node.ELEMENT_NODE:\n        return /** @type {Element} */ (parentNode);\n    default:\n        return axs.dom.parentElement(parentNode);\n    }\n};\n\n/**\n * Returns the shadow host of a document fragment if it is a Shadow DOM fragment\n * otherwise returns `null`.\n * @param {DocumentFragment} fragment\n * @return {?Element}\n */\naxs.dom.shadowHost = function(fragment) {\n    // If host exists, this is a Shadow DOM fragment.\n    if ('host' in fragment)\n        return fragment.host;\n    else\n    return null;\n};\n\n/**\n * Returns the given Node's parent in the composed tree.\n * @param {Node} node\n * @return {?Node}\n */\naxs.dom.composedParentNode = function(node) {\n    if (!node)\n        return null;\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE)\n        return axs.dom.shadowHost(/** @type {DocumentFragment} */ (node));\n\n    var parentNode = node.parentNode;\n    if (!parentNode)\n        return null;\n\n    if (parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE)\n        return axs.dom.shadowHost(/** @type {DocumentFragment} */ (parentNode));\n\n    if (!parentNode.shadowRoot)\n        return parentNode;\n\n    // Shadow DOM v1\n    if (node.nodeType === Node.ELEMENT_NODE || node.nodeType === Node.TEXT_NODE) {\n      var assignedSlot = node.assignedSlot;\n      if (HTMLSlotElement && assignedSlot instanceof HTMLSlotElement)\n          return axs.dom.composedParentNode(assignedSlot);\n    }\n\n    // Shadow DOM v0\n    if (typeof node.getDestinationInsertionPoints === 'function') {\n        var insertionPoints = node.getDestinationInsertionPoints();\n        if (insertionPoints.length > 0)\n            return axs.dom.composedParentNode(insertionPoints[insertionPoints.length - 1]);\n    }\n\n    return null;\n};\n\n/**\n * Return the corresponding element for the given node.\n * @param {Node} node\n * @return {Element}\n * @suppress {checkTypes}\n */\naxs.dom.asElement = function(node) {\n    /** @type {Element} */ var element;\n    switch (node.nodeType) {\n    case Node.COMMENT_NODE:\n        return null;  // Skip comments\n    case Node.ELEMENT_NODE:\n        element = /** (@type {Element}) */ node;\n        if (element.localName == 'script' ||\n            element.localName == 'template')\n            return null;  // Skip script-supporting elements\n        return element;\n    case Node.DOCUMENT_FRAGMENT_NODE:\n        return node.host;\n    case Node.TEXT_NODE:\n        return axs.dom.parentElement(node);\n    default:\n        console.warn('Unhandled node type: ', node.nodeType);\n    }\n    return null;\n};\n\n/**\n * Recursively walk the composed tree from |node|, aborting if |end| is encountered.\n * @param {Node} node\n * @param {?Node} end\n * @param {{preorder: (function (Node, Object):boolean|undefined),\n *          postorder: (function (Node, Object)|undefined)}} callbacks\n *     Callbacks to be called for each element traversed, excluding\n *     |end|. Possible callbacks are |preorder|, called before descending into\n *     child nodes, and |postorder| called after all child nodes have been\n *     traversed. If |preorder| returns false, its child nodes will not be\n *     traversed.\n * @param {Object} parentFlags\n * @param {ShadowRoot=} opt_shadowRoot The nearest ShadowRoot ancestor, if any.\n * @return {boolean} Whether |end| was found, if provided.\n */\naxs.dom.composedTreeSearch = function(node, end, callbacks, parentFlags, opt_shadowRoot) {\n    if (node === end)\n        return true;\n\n    if (node.nodeType == Node.ELEMENT_NODE)\n        var element = /** @type {Element} */ (node);\n\n    var found = false;\n    var flags = Object.create(parentFlags);\n\n    // Descend into node:\n    // If it has a ShadowRoot, ignore all child elements - these will be picked\n    // up by the <content> or <shadow> elements. Descend straight into the\n    // ShadowRoot.\n    if (element) {\n        var localName = element.localName;\n        if (flags.collectIdRefs) {\n            flags.idrefs = axs.utils.getReferencedIds(element);\n        }\n        if (!flags.disabled || (localName === 'legend') && axs.browserUtils.matchSelector(element, 'fieldset>legend:first-of-type')) {\n            flags.disabled = axs.utils.isElementDisabled(element, true);\n        }\n        if (!flags.hidden) {\n            flags.hidden = axs.utils.isElementHidden(element);\n        }\n        if (callbacks.preorder) {\n            if (!callbacks.preorder(element, flags))\n                return found;\n        }\n        // NOTE: grunt qunit DOES NOT support Shadow DOM, so if changing this\n        // code, be sure to run the tests in the browser before committing.\n        var shadowRoot = element.shadowRoot || element.webkitShadowRoot;\n        if (shadowRoot) {\n            flags.level++;\n            found = axs.dom.composedTreeSearch(shadowRoot,\n                                               end,\n                                               callbacks,\n                                               flags,\n                                               shadowRoot);\n            if (element && callbacks.postorder && !found)\n                callbacks.postorder(element, flags);\n            return found;\n        }\n\n        // If it is a <content> element, descend into distributed elements - these\n        // are elements from outside the shadow root which are rendered inside the\n        // shadow DOM.\n        if (localName == 'content' && typeof element.getDistributedNodes === 'function') {\n            var content = /** @type {HTMLContentElement} */ (element);\n            var distributedNodes = content.getDistributedNodes();\n            for (var i = 0; i < distributedNodes.length && !found; i++) {\n                found = axs.dom.composedTreeSearch(distributedNodes[i],\n                                                       end,\n                                                       callbacks,\n                                                       flags,\n                                                       opt_shadowRoot);\n            }\n            if (callbacks.postorder && !found)\n                callbacks.postorder.call(null, element, flags);\n            return found;\n        }\n    }\n\n\n\n    // If it is neither the parent of a ShadowRoot, a <content> element, nor\n    // a <shadow> element recurse normally.\n    var child = node.firstChild;\n    while (child != null && !found) {\n        found = axs.dom.composedTreeSearch(child,\n                                           end,\n                                           callbacks,\n                                           flags,\n                                           opt_shadowRoot);\n        child = child.nextSibling;\n    }\n\n    if (element && callbacks.postorder && !found)\n        callbacks.postorder.call(null, element, flags);\n    return found;\n};\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/Properties.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\ngoog.require('axs.browserUtils');\ngoog.require('axs.color');\ngoog.require('axs.dom');\ngoog.require('axs.utils');\n\ngoog.provide('axs.properties');\n\n/**\n * @const\n * @type {string}\n */\naxs.properties.TEXT_CONTENT_XPATH = './/text()[normalize-space(.)!=\"\"]/parent::*[name()!=\"script\"]';\n\n/**\n * @param {Element} element\n * @return {Object.<string, Object>}\n */\naxs.properties.getFocusProperties = function(element) {\n    var focusProperties = {};\n    var tabindex = element.getAttribute('tabindex');\n    if (tabindex != undefined) {\n        focusProperties['tabindex'] = { value: tabindex, valid: true };\n    } else {\n        if (axs.utils.isElementImplicitlyFocusable(element))\n            focusProperties['implicitlyFocusable'] = { value: true, valid: true };\n    }\n    if (Object.keys(focusProperties).length == 0)\n        return null;\n    var transparent = axs.utils.elementIsTransparent(element);\n    var zeroArea = axs.utils.elementHasZeroArea(element);\n    var outsideScrollArea = axs.utils.elementIsOutsideScrollArea(element);\n    var overlappingElements = axs.utils.overlappingElements(element);\n    if (transparent || zeroArea || outsideScrollArea || overlappingElements.length > 0) {\n        var hidden = axs.utils.isElementOrAncestorHidden(element);\n        var visibleProperties = { value: false,\n                                  valid: hidden };\n        if (transparent)\n            visibleProperties['transparent'] = true;\n        if (zeroArea)\n            visibleProperties['zeroArea'] = true;\n        if (outsideScrollArea)\n            visibleProperties['outsideScrollArea'] = true;\n        if (overlappingElements && overlappingElements.length > 0)\n            visibleProperties['overlappingElements'] = overlappingElements;\n        var hiddenProperties = { value: hidden, valid: hidden };\n        if (hidden)\n            hiddenProperties['reason'] = axs.properties.getHiddenReason(element);\n        visibleProperties['hidden'] = hiddenProperties;\n        focusProperties['visible'] = visibleProperties;\n    } else {\n        focusProperties['visible'] = { value: true, valid: true };\n    }\n\n    return focusProperties;\n};\n\n/**\n * @typedef {{ property: string,\n *             on: Element }}\n *\n * property examples: 'display: none', 'visibility: hidden', 'aria-hidden'\n */\naxs.properties.hiddenReason;\n\n/**\n * Determine the reason an element is not visible.\n * Will give the CSS rule or attribute and the element/ancestor it is set on.\n * @param {Element} element\n * @return {?axs.properties.hiddenReason}\n */\naxs.properties.getHiddenReason = function(element) {\n    if (!element || !(element instanceof element.ownerDocument.defaultView.HTMLElement))\n      return null;\n\n    if (element.hasAttribute('chromevoxignoreariahidden'))\n        var chromevoxignoreariahidden = true;\n\n    var style = window.getComputedStyle(element, null);\n    if (style.display == 'none')\n        return { 'property': 'display: none',\n                 'on': element };\n\n    if (style.visibility == 'hidden')\n        return { 'property': 'visibility: hidden',\n                 'on': element };\n\n    if (element.hasAttribute('aria-hidden') &&\n        element.getAttribute('aria-hidden').toLowerCase() == 'true') {\n        if (!chromevoxignoreariahidden)\n            return { 'property': 'aria-hidden',\n                     'on': element };\n    }\n\n    return axs.properties.getHiddenReason(axs.dom.parentElement(element));\n};\n\n\n/**\n * @param {Element} element\n * @return {Object.<string, Object>}\n */\naxs.properties.getColorProperties = function(element) {\n    var colorProperties = {};\n    var contrastRatioProperties =\n        axs.properties.getContrastRatioProperties(element);\n    if (contrastRatioProperties)\n        colorProperties['contrastRatio'] = contrastRatioProperties;\n    if (Object.keys(colorProperties).length == 0)\n        return null;\n    return colorProperties;\n};\n\n/**\n * Determines whether the given element has a text node as a direct descendant.\n * @param {Element} element\n * @return {boolean}\n */\naxs.properties.hasDirectTextDescendant = function(element) {\n    var ownerDocument;\n    if (element.nodeType == Node.DOCUMENT_NODE)\n        ownerDocument = element;\n    else\n        ownerDocument = element.ownerDocument;\n    if (ownerDocument.evaluate) {\n        return hasDirectTextDescendantXpath();\n    }\n    return hasDirectTextDescendantTreeWalker();\n\n    /**\n     * Determines whether element has a text node as a direct descendant.\n     * This method uses XPath on HTML DOM which is not universally supported.\n     * @return {boolean}\n     */\n    function hasDirectTextDescendantXpath() {\n        var selectorResults = ownerDocument.evaluate(axs.properties.TEXT_CONTENT_XPATH,\n                                                     element,\n                                                     null,\n                                                     XPathResult.ANY_TYPE,\n                                                     null);\n        for (var resultElement = selectorResults.iterateNext();\n             resultElement != null;\n             resultElement = selectorResults.iterateNext()) {\n            if (resultElement !== element)\n                continue;\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Determines whether element has a text node as a direct descendant.\n     * This method uses TreeWalker as a fallback (at time of writing no version\n     * of IE (including IE11) supports XPath in the HTML DOM).\n     * @return {boolean}\n     */\n    function hasDirectTextDescendantTreeWalker() {\n        var treeWalker = ownerDocument.createTreeWalker(element,\n                                                        NodeFilter.SHOW_TEXT,\n                                                        null,\n                                                        false);\n        while (treeWalker.nextNode()) {\n            var resultElement = treeWalker.currentNode;\n            var parent = resultElement.parentNode;\n            // Handle elements hosted in <template>.content.\n            parent = parent.host || parent;\n            var tagName = parent.tagName.toLowerCase();\n            var value = resultElement.nodeValue.trim();\n            if (value && tagName !== 'script' && element !== resultElement)\n                return true;\n        }\n        return false;\n    }\n};\n\n/**\n * @param {Element} element\n * @return {Object.<string, Object>}\n */\naxs.properties.getContrastRatioProperties = function(element) {\n    if (!axs.properties.hasDirectTextDescendant(element))\n        return null;\n\n    var contrastRatioProperties = {};\n    var style = window.getComputedStyle(element, null);\n    var bgColor = axs.utils.getBgColor(style, element);\n    if (!bgColor)\n        return null;\n\n    contrastRatioProperties['backgroundColor'] = axs.color.colorToString(bgColor);\n    var fgColor = axs.utils.getFgColor(style, element, bgColor);\n    contrastRatioProperties['foregroundColor'] = axs.color.colorToString(fgColor);\n    var contrast = axs.utils.getContrastRatioForElementWithComputedStyle(style, element);\n    if (!contrast)\n        return null;\n    contrastRatioProperties['value'] = contrast.toFixed(2);\n    if (axs.utils.isLowContrast(contrast, style))\n        contrastRatioProperties['alert'] = true;\n\n    var levelAAContrast = axs.utils.isLargeFont(style) ? 3.0 : 4.5;\n    var levelAAAContrast = axs.utils.isLargeFont(style) ? 4.5 : 7.0;\n    var desiredContrastRatios = {};\n    if (levelAAContrast > contrast)\n        desiredContrastRatios['AA'] = levelAAContrast;\n    if (levelAAAContrast > contrast)\n        desiredContrastRatios['AAA'] = levelAAAContrast;\n\n    if (!Object.keys(desiredContrastRatios).length)\n        return contrastRatioProperties;\n\n    var suggestedColors = axs.color.suggestColors(bgColor, fgColor, desiredContrastRatios);\n    if (suggestedColors && Object.keys(suggestedColors).length)\n        contrastRatioProperties['suggestedColors'] = suggestedColors;\n    return contrastRatioProperties;\n};\n\n/**\n * @param {Node} node\n * @param {!Object} textAlternatives The properties object to fill in\n * @param {boolean=} opt_recursive Whether this is a recursive call or not\n * @param {boolean=} opt_force Whether to return text alternatives for this\n *     element regardless of its hidden state.\n * @return {?string} The calculated text alternative for the given element\n */\naxs.properties.findTextAlternatives = function(node, textAlternatives, opt_recursive, opt_force) {\n    var recursive = opt_recursive || false;\n\n    /** @type {Element} */ var element = axs.dom.asElement(node);\n    if (!element)\n        return null;\n\n    // 1. Skip hidden elements unless the author specifies to use them via an aria-labelledby or\n    // aria-describedby being used in the current computation.\n    if (!opt_force && axs.utils.isElementOrAncestorHidden(element))\n        return null;\n\n    // if this is a text node, just return text content.\n    if (node.nodeType == Node.TEXT_NODE) {\n        var textContentValue = {};\n        textContentValue.type = 'text';\n        textContentValue.text = node.textContent;\n        textContentValue.lastWord = axs.properties.getLastWord(textContentValue.text);\n        textAlternatives['content'] = textContentValue;\n\n        return node.textContent;\n    }\n\n    var computedName = null;\n\n    if (!recursive) {\n        // 2A. The aria-labelledby attribute takes precedence as the element's text alternative\n        // unless this computation is already occurring as the result of a recursive aria-labelledby\n        // declaration.\n        computedName = axs.properties.getTextFromAriaLabelledby(element, textAlternatives);\n    }\n\n    // 2A. If aria-labelledby is empty or undefined, the aria-label attribute, which defines an\n    // explicit text string, is used.\n    if (element.hasAttribute('aria-label')) {\n        var ariaLabelValue = {};\n        ariaLabelValue.type = 'text';\n        ariaLabelValue.text = element.getAttribute('aria-label');\n        ariaLabelValue.lastWord = axs.properties.getLastWord(ariaLabelValue.text);\n        if (computedName)\n            ariaLabelValue.unused = true;\n        else if (!(recursive && axs.utils.elementIsHtmlControl(element)))\n            computedName = ariaLabelValue.text;\n        textAlternatives['ariaLabel'] = ariaLabelValue;\n    }\n\n    // 2A. If aria-labelledby and aria-label are both empty or undefined, and if the element is not\n    // marked as presentational (role=\"presentation\", check for the presence of an equivalent host\n    // language attribute or element for associating a label, and use those mechanisms to determine\n    // a text alternative.\n    if (!element.hasAttribute('role') || element.getAttribute('role') != 'presentation') {\n        computedName = axs.properties.getTextFromHostLanguageAttributes(element,\n                                                                        textAlternatives,\n                                                                        computedName,\n                                                                        recursive);\n    }\n\n    // 2B (HTML version).\n    if (recursive && axs.utils.elementIsHtmlControl(element)) {\n        var defaultView = element.ownerDocument.defaultView;\n\n        // include the value of the embedded control as part of the text alternative in the\n        // following manner:\n        if (element instanceof defaultView.HTMLInputElement) {\n            // If the embedded control is a text field, use its value.\n            var inputElement = /** @type {HTMLInputElement} */ (element);\n            if (inputElement.type == 'text') {\n                if (inputElement.value && inputElement.value.length > 0)\n                    textAlternatives['controlValue'] = { 'text': inputElement.value };\n            }\n            // If the embedded control is a range (e.g. a spinbutton or slider), use the value of the\n            // aria-valuetext attribute if available, or otherwise the value of the aria-valuenow\n            // attribute.\n            if (inputElement.type == 'range')\n                textAlternatives['controlValue'] = { 'text': inputElement.value };\n        }\n        // If the embedded control is a menu, use the text alternative of the chosen menu item.\n        // If the embedded control is a select or combobox, use the chosen option.\n        if (element instanceof defaultView.HTMLSelectElement) {\n            var inputElement = /** @type {HTMLSelectElement} */ (element);\n            textAlternatives['controlValue'] = { 'text': inputElement.value };\n        }\n\n        if (textAlternatives['controlValue']) {\n            var controlValue = textAlternatives['controlValue'];\n            if (computedName)\n                controlValue.unused = true;\n            else\n                computedName = controlValue.text;\n        }\n    }\n\n    // 2B (ARIA version).\n    if (recursive && axs.utils.elementIsAriaWidget(element)) {\n        var role = element.getAttribute('role');\n        // If the embedded control is a text field, use its value.\n        if (role == 'textbox') {\n            if (element.textContent && element.textContent.length > 0)\n                textAlternatives['controlValue'] = { 'text': element.textContent };\n        }\n        // If the embedded control is a range (e.g. a spinbutton or slider), use the value of the\n        // aria-valuetext attribute if available, or otherwise the value of the aria-valuenow\n        // attribute.\n        if (role == 'slider' || role == 'spinbutton') {\n            if (element.hasAttribute('aria-valuetext'))\n                textAlternatives['controlValue'] = { 'text': element.getAttribute('aria-valuetext') };\n            else if (element.hasAttribute('aria-valuenow'))\n                textAlternatives['controlValue'] = { 'value': element.getAttribute('aria-valuenow'),\n                                                     'text': '' + element.getAttribute('aria-valuenow') };\n        }\n        // If the embedded control is a menu, use the text alternative of the chosen menu item.\n        if (role == 'menu') {\n            var menuitems = element.querySelectorAll('[role=menuitemcheckbox], [role=menuitemradio]');\n            var selectedMenuitems = [];\n            for (var i = 0; i < menuitems.length; i++) {\n                if (menuitems[i].getAttribute('aria-checked') == 'true')\n                    selectedMenuitems.push(menuitems[i]);\n            }\n            if (selectedMenuitems.length > 0) {\n                var selectedMenuText = '';\n                for (var i = 0; i < selectedMenuitems.length; i++) {\n                    selectedMenuText += axs.properties.findTextAlternatives(selectedMenuitems[i], {}, true);\n                    if (i < selectedMenuitems.length - 1)\n                        selectedMenuText += ', ';\n                }\n                textAlternatives['controlValue'] = { 'text': selectedMenuText };\n            }\n        }\n        // If the embedded control is a select or combobox, use the chosen option.\n        if (role == 'combobox' || role == 'select') {\n            // TODO\n            textAlternatives['controlValue'] = { 'text': 'TODO' };\n        }\n\n        if (textAlternatives['controlValue']) {\n            var controlValue = textAlternatives['controlValue'];\n            if (computedName)\n                controlValue.unused = true;\n            else\n                computedName = controlValue.text;\n        }\n    }\n\n    // 2C. Otherwise, if the attributes checked in rules A and B didn't provide results, text is\n    // collected from descendant content if the current element's role allows \"Name From: contents.\"\n    var hasRole = element.hasAttribute('role');\n    var canGetNameFromContents = true;\n    if (hasRole) {\n        var roleName = element.getAttribute('role');\n        // if element has a role, check that it allows \"Name From: contents\"\n        var role = axs.constants.ARIA_ROLES[roleName];\n        if (role && (!role.namefrom || role.namefrom.indexOf('contents') < 0))\n            canGetNameFromContents = false;\n    }\n    var textFromContent = axs.properties.getTextFromDescendantContent(element, opt_force);\n    if (textFromContent && canGetNameFromContents) {\n        var textFromContentValue = {};\n        textFromContentValue.type = 'text';\n        textFromContentValue.text = textFromContent;\n        textFromContentValue.lastWord = axs.properties.getLastWord(textFromContentValue.text);\n        if (computedName)\n            textFromContentValue.unused = true;\n        else\n            computedName = textFromContent;\n        textAlternatives['content'] = textFromContentValue;\n    }\n\n    // 2D. The last resort is to use text from a tooltip attribute (such as the title attribute in\n    // HTML). This is used only if nothing else, including subtree content, has provided results.\n    if (element.hasAttribute('title')) {\n        var titleValue = {};\n        titleValue.type = 'string';\n        titleValue.valid = true;\n        titleValue.text = element.getAttribute('title');\n        titleValue.lastWord = axs.properties.getLastWord(titleValue.lastWord);\n        if (computedName)\n            titleValue.unused = true;\n        else\n            computedName = titleValue.text;\n        textAlternatives['title'] = titleValue;\n    }\n\n    if (Object.keys(textAlternatives).length == 0 && computedName == null)\n        return null;\n\n    return computedName;\n};\n\n/**\n * @param {Element} element\n * @param {boolean=} opt_force Whether to return text alternatives for this\n *     element regardless of its hidden state.\n * @return {?string}\n */\naxs.properties.getTextFromDescendantContent = function(element, opt_force) {\n    var children = element.childNodes;\n    var childrenTextContent = [];\n    for (var i = 0; i < children.length; i++) {\n        var childTextContent = axs.properties.findTextAlternatives(children[i], {}, true, opt_force);\n        if (childTextContent)\n            childrenTextContent.push(childTextContent.trim());\n    }\n    if (childrenTextContent.length) {\n        var result = '';\n        // Empty children are allowed, but collapse all of them\n        for (var i = 0; i < childrenTextContent.length; i++)\n            result = [result, childrenTextContent[i]].join(' ').trim();\n        return result;\n    }\n    return null;\n};\n\n/**\n * @param {Element} element\n * @param {Object} textAlternatives\n * @return {?string}\n */\naxs.properties.getTextFromAriaLabelledby = function(element, textAlternatives) {\n    var computedName = null;\n    if (!element.hasAttribute('aria-labelledby'))\n        return computedName;\n\n    var labelledbyAttr = element.getAttribute('aria-labelledby');\n    var labelledbyIds = labelledbyAttr.split(/\\s+/);\n    var labelledbyValue = {};\n    labelledbyValue.valid = true;\n    var labelledbyText = [];\n    var labelledbyValues = [];\n    for (var i = 0; i < labelledbyIds.length; i++) {\n        var labelledby = {};\n        labelledby.type = 'element';\n        var labelledbyId = labelledbyIds[i];\n        labelledby.value = labelledbyId;\n        var labelledbyElement = document.getElementById(labelledbyId);\n        if (!labelledbyElement) {\n            labelledby.valid = false;\n            labelledbyValue.valid = false;\n            labelledby.errorMessage = { 'messageKey': 'noElementWithId', 'args': [labelledbyId] };\n        } else {\n            labelledby.valid = true;\n            labelledby.text = axs.properties.findTextAlternatives(labelledbyElement, {}, true, true);\n            labelledby.lastWord = axs.properties.getLastWord(labelledby.text);\n            labelledbyText.push(labelledby.text);\n            labelledby.element = labelledbyElement;\n        }\n        labelledbyValues.push(labelledby);\n    }\n    if (labelledbyValues.length > 0) {\n        labelledbyValues[labelledbyValues.length - 1].last = true;\n        labelledbyValue.values = labelledbyValues;\n        labelledbyValue.text = labelledbyText.join(' ');\n        labelledbyValue.lastWord = axs.properties.getLastWord(labelledbyValue.text);\n        computedName = labelledbyValue.text;\n        textAlternatives['ariaLabelledby'] = labelledbyValue;\n    }\n\n    return computedName;\n};\n\n\n/**\n * Determine the text description/label for an element.\n * For example will attempt to find the alt text for an image or label text for a form control.\n * @param {!Element} element\n * @param {!Object} textAlternatives An object that will be updated with information.\n * @param {?string} existingComputedname\n * @param {boolean} recursive Whether this method is being called recursively as described in\n *     http://www.w3.org/TR/wai-aria/roles#textalternativecomputation section 2A.\n * @return {Object}\n */\naxs.properties.getTextFromHostLanguageAttributes = function(element,\n                                                            textAlternatives,\n                                                            existingComputedname,\n                                                            recursive) {\n    var computedName = existingComputedname;\n    if (axs.browserUtils.matchSelector(element, 'img') && element.hasAttribute('alt')) {\n        var altValue = {};\n        altValue.type = 'string';\n        altValue.valid = true;\n        altValue.text = element.getAttribute('alt');\n        if (computedName)\n            altValue.unused = true;\n        else\n            computedName = altValue.text;\n        textAlternatives['alt'] = altValue;\n    }\n\n    var controlsSelector = ['input:not([type=\"hidden\"]):not([disabled])',\n                            'select:not([disabled])',\n                            'textarea:not([disabled])',\n                            'button:not([disabled])',\n                            'video:not([disabled])'].join(', ');\n    if (axs.browserUtils.matchSelector(element, controlsSelector) && !recursive) {\n        if (element.hasAttribute('id')) {\n            var labelForQuerySelector = 'label[for=\"' + element.id + '\"]';\n            var labelsFor = document.querySelectorAll(labelForQuerySelector);\n            var labelForValue = {};\n            var labelForValues = [];\n            var labelForText = [];\n            for (var i = 0; i < labelsFor.length; i++) {\n                var labelFor = {};\n                labelFor.type = 'element';\n                var label = labelsFor[i];\n                var labelText = axs.properties.findTextAlternatives(label, {}, true);\n                if (labelText && labelText.trim().length > 0) {\n                    labelFor.text = labelText.trim();\n                    labelForText.push(labelText.trim());\n                }\n                labelFor.element = label;\n                labelForValues.push(labelFor);\n            }\n            if (labelForValues.length > 0) {\n                labelForValues[labelForValues.length - 1].last = true;\n                labelForValue.values = labelForValues;\n                labelForValue.text = labelForText.join(' ');\n                labelForValue.lastWord = axs.properties.getLastWord(labelForValue.text);\n                if (computedName)\n                    labelForValue.unused = true;\n                else\n                    computedName = labelForValue.text;\n                textAlternatives['labelFor'] = labelForValue;\n            }\n        }\n\n        var parent = axs.dom.parentElement(element);\n        var labelWrappedValue = {};\n        while (parent) {\n            if (parent.tagName.toLowerCase() == 'label') {\n                var parentLabel = /** @type {HTMLLabelElement} */ (parent);\n                if (parentLabel.control == element) {\n                    labelWrappedValue.type = 'element';\n                    labelWrappedValue.text = axs.properties.findTextAlternatives(parentLabel, {}, true);\n                    labelWrappedValue.lastWord = axs.properties.getLastWord(labelWrappedValue.text);\n                    labelWrappedValue.element = parentLabel;\n                    break;\n                }\n            }\n            parent = axs.dom.parentElement(parent);\n        }\n        if (labelWrappedValue.text) {\n            if (computedName)\n                labelWrappedValue.unused = true;\n            else\n                computedName = labelWrappedValue.text;\n            textAlternatives['labelWrapped'] = labelWrappedValue;\n        }\n        // If all else fails input of type image can fall back to its alt text\n        if (axs.browserUtils.matchSelector(element, 'input[type=\"image\"]') && element.hasAttribute('alt')) {\n            var altValue = {};\n            altValue.type = 'string';\n            altValue.valid = true;\n            altValue.text = element.getAttribute('alt');\n            if (computedName)\n                altValue.unused = true;\n            else\n                computedName = altValue.text;\n            textAlternatives['alt'] = altValue;\n        }\n        if (!Object.keys(textAlternatives).length)\n            textAlternatives['noLabel'] = true;\n    }\n    return computedName;\n};\n\n/**\n * @param {?string} text\n * @return {?string}\n */\naxs.properties.getLastWord = function(text) {\n    if (!text)\n        return null;\n\n    // TODO: this makes a lot of assumptions.\n    var lastSpace = text.lastIndexOf(' ') + 1;\n    var MAXLENGTH = 10;\n    var cutoff = text.length - MAXLENGTH;\n    var wordStart = lastSpace > cutoff ? lastSpace : cutoff;\n    return text.substring(wordStart);\n};\n\n/**\n * @param {Node} node\n * @return {Object}\n */\naxs.properties.getTextProperties = function(node) {\n    var textProperties = {};\n    var computedName = axs.properties.findTextAlternatives(node, textProperties, false, true);\n\n    if (Object.keys(textProperties).length == 0) {\n        /** @type {Element} */ var element = axs.dom.asElement(node);\n        if (element && axs.browserUtils.matchSelector(element, 'img')) {\n            var altValue = {};\n            altValue.valid = false;\n            altValue.errorMessage = 'No alt value provided';\n            textProperties['alt'] = altValue;\n\n            var src = element.src;\n            if (typeof src == 'string') {\n                var parts = src.split('/');\n                var filename = parts.pop();\n                var filenameValue = { text: filename };\n                textProperties['filename'] = filenameValue;\n                computedName = filename;\n            }\n        }\n\n        if (!computedName)\n            return null;\n    }\n\n    textProperties.hasProperties = Boolean(Object.keys(textProperties).length);\n    textProperties.computedText = computedName;\n    textProperties.lastWord = axs.properties.getLastWord(computedName);\n    return textProperties;\n};\n\n/**\n * Finds any ARIA attributes (roles, states and properties) explicitly set on this element.\n * @param {Element} element\n * @return {Object}\n */\naxs.properties.getAriaProperties = function(element) {\n    var ariaProperties = {};\n    var statesAndProperties = axs.properties.getGlobalAriaProperties(element);\n\n    for (var property in axs.constants.ARIA_PROPERTIES) {\n        var attributeName = 'aria-' + property;\n        if (element.hasAttribute(attributeName)) {\n            var propertyValue = element.getAttribute(attributeName);\n            statesAndProperties[attributeName] =\n                axs.utils.getAriaPropertyValue(attributeName, propertyValue, element);\n        }\n    }\n    if (Object.keys(statesAndProperties).length > 0)\n        ariaProperties['properties'] = axs.utils.values(statesAndProperties);\n\n    var roles = axs.utils.getRoles(element);\n    if (!roles) {\n        if (Object.keys(ariaProperties).length)\n            return ariaProperties;\n        return null;\n    }\n    ariaProperties['roles'] = roles;\n    if (!roles.valid || !roles['roles'])\n        return ariaProperties;\n\n    var roleDetails = roles['roles'];\n    for (var i = 0; i < roleDetails.length; i++) {\n        var role = roleDetails[i];\n        if (!role.details || !role.details.propertiesSet)\n            continue;\n        for (var property in role.details.propertiesSet) {\n            if (property in statesAndProperties)\n                continue;\n            if (element.hasAttribute(property)) {\n                var propertyValue = element.getAttribute(property);\n                statesAndProperties[property] =\n                    axs.utils.getAriaPropertyValue(property, propertyValue, element);\n                if ('values' in statesAndProperties[property]) {\n                    var values = statesAndProperties[property].values;\n                    values[values.length - 1].isLast = true;\n                }\n            } else if (role.details.requiredPropertiesSet[property]) {\n                statesAndProperties[property] =\n                    { 'name': property, 'valid': false, 'reason': 'Required property not set' };\n            }\n        }\n    }\n    if (Object.keys(statesAndProperties).length > 0)\n        ariaProperties['properties'] = axs.utils.values(statesAndProperties);\n    if (Object.keys(ariaProperties).length > 0)\n        return ariaProperties;\n    return null;\n};\n\n/**\n * Gets the ARIA properties found on this element which apply to all elements, not just elements with ARIA roles.\n * @param {Element} element\n * @return {!Object}\n */\naxs.properties.getGlobalAriaProperties = function(element) {\n    var globalProperties = {};\n    for (var property in axs.constants.GLOBAL_PROPERTIES) {\n        if (element.hasAttribute(property)) {\n            var propertyValue = element.getAttribute(property);\n            globalProperties[property] =\n                axs.utils.getAriaPropertyValue(property, propertyValue, element);\n        }\n    }\n    return globalProperties;\n};\n\n/**\n * @param {Element} element\n * @return {Object.<string, Object>}\n */\naxs.properties.getVideoProperties = function(element) {\n    var videoSelector = 'video';\n    if (!axs.browserUtils.matchSelector(element, videoSelector))\n        return null;\n    var videoProperties = {};\n    videoProperties['captionTracks'] = axs.properties.getTrackElements(element, 'captions');\n    videoProperties['descriptionTracks'] = axs.properties.getTrackElements(element, 'descriptions');\n    videoProperties['chapterTracks'] = axs.properties.getTrackElements(element, 'chapters');\n    // error if no text alternatives?\n    return videoProperties;\n};\n\n/**\n * @param {Element} element\n * @param {string} kind\n * @return {Object}\n */\naxs.properties.getTrackElements = function(element, kind) {\n    // error if resource is not available\n    var trackElements = element.querySelectorAll('track[kind=' + kind + ']');\n    var result = {};\n    if (!trackElements.length) {\n        result.valid = false;\n        result.reason = { 'messageKey': 'noTracksProvided', 'args': [[kind]] };\n        return result;\n    }\n    result.valid = true;\n    var values = [];\n    for (var i = 0; i < trackElements.length; i++) {\n        var trackElement = {};\n        var src = trackElements[i].getAttribute('src');\n        var srcLang = trackElements[i].getAttribute('srcLang');\n        var label = trackElements[i].getAttribute('label');\n        if (!src) {\n            trackElement.valid = false;\n            trackElement.reason = { 'messageKey': 'noSrcProvided' };\n        } else {\n            trackElement.valid = true;\n            trackElement.src = src;\n        }\n        var name = '';\n        if (label) {\n            name += label;\n            if (srcLang)\n                name += ' ';\n        }\n        if (srcLang)\n            name += '(' + srcLang + ')';\n        if (name == '')\n            name = '[' + { 'messageKey': 'unnamed' } + ']';\n        trackElement.name = name;\n        values.push(trackElement);\n    }\n    result.values = values;\n    return result;\n};\n\n/**\n * @param {Node} node\n * @return {Object.<string, Object>}\n */\naxs.properties.getAllProperties = function(node) {\n    /** @type {Element} */ var element = axs.dom.asElement(node);\n    if (!element)\n        return {};\n\n    var allProperties = {};\n    allProperties['ariaProperties'] = axs.properties.getAriaProperties(element);\n    allProperties['colorProperties'] = axs.properties.getColorProperties(element);\n    allProperties['focusProperties'] = axs.properties.getFocusProperties(element);\n    allProperties['textProperties'] = axs.properties.getTextProperties(node);\n    allProperties['videoProperties'] = axs.properties.getVideoProperties(element);\n    return allProperties;\n};\n\n(function() {\n    /**\n     * Helper for implicit semantic functionality.\n     * Can be made part of the public API if need be.\n     * @param {Element} element\n     * @return {?axs.constants.HtmlInfo}\n     */\n    function getHtmlInfo(element) {\n        if (!element)\n            return null;\n        var tagName = element.tagName;\n        if (!tagName)\n            return null;\n        tagName = tagName.toUpperCase();\n        var infos = axs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO[tagName];\n        if (!infos || !infos.length)\n            return null;\n        var defaultInfo = null;  // will contain the info with no specific selector if no others match\n        for (var i = 0, len = infos.length; i < len; i++) {\n            var htmlInfo = infos[i];\n            if (htmlInfo.selector) {\n                if (axs.browserUtils.matchSelector(element, htmlInfo.selector))\n                    return htmlInfo;\n            } else {\n                defaultInfo = htmlInfo;\n            }\n        }\n        return defaultInfo;\n    }\n\n    /**\n     * @param {Element} element\n     * @return {string} role\n     */\n    axs.properties.getImplicitRole = function(element) {\n        var htmlInfo = getHtmlInfo(element);\n        if (htmlInfo)\n            return htmlInfo.role;\n        return '';\n    };\n\n    /**\n     * Determine if this element can take ANY ARIA attributes including roles, state and properties.\n     * If false then even global attributes should not be used.\n     * @param {Element} element\n     * @return {boolean}\n     */\n    axs.properties.canTakeAriaAttributes = function(element) {\n        var htmlInfo = getHtmlInfo(element);\n        if (htmlInfo)\n            return !htmlInfo.reserved;\n        return true;\n    };\n})();\n\n/**\n * This lists the ARIA attributes that are supported implicitly by native properties of this element.\n *\n * @param {Element} element The element to check.\n * @return {!Array.<string>} An array of ARIA attributes.\n *\n * example:\n *    var element = document.createElement(\"input\");\n *    element.setAttribute(\"type\", \"range\");\n *    var supported = axs.properties.getNativelySupportedAttributes(element);  // an array of ARIA attributes\n *    console.log(supported.indexOf(\"aria-valuemax\") >=0);  // logs 'true'\n */\naxs.properties.getNativelySupportedAttributes = function(element) {\n    var result = [];\n    if (!element) {\n        return result;\n    }\n    var testElement = element.cloneNode(false);  // gets rid of expandos\n    var ariaAttributes = Object.keys(/** @type {!Object} */(axs.constants.ARIA_TO_HTML_ATTRIBUTE));\n    for (var i = 0; i < ariaAttributes.length; i++) {\n        var ariaAttribute = ariaAttributes[i];\n        var nativeAttribute = axs.constants.ARIA_TO_HTML_ATTRIBUTE[ariaAttribute];\n        if (nativeAttribute in testElement) {\n            result[result.length] = ariaAttribute;\n        }\n    }\n    return result;\n};\n\n(function() {\n    var roleToSelectorCache = {};  // performance optimization, cache results from getSelectorForRole\n\n    /**\n     * Build a selector that will match elements which implicity or explicitly have this role.\n     * Note that the selector will probably not look elegant but it will work.\n     * @param {string} role\n     * @return {string} selector\n     */\n    axs.properties.getSelectorForRole = function(role) {\n        if (!role)\n            return '';\n        if (roleToSelectorCache[role] && roleToSelectorCache.hasOwnProperty(role))\n            return roleToSelectorCache[role];\n        var selectors = ['[role=\"' + role + '\"]'];\n        var tagNames = Object.keys(/** @type {!Object} */(axs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO));\n        tagNames.forEach(function(tagName) {\n            var htmlInfos = axs.constants.TAG_TO_IMPLICIT_SEMANTIC_INFO[tagName];\n            if (htmlInfos && htmlInfos.length) {\n                for (var i = 0; i < htmlInfos.length; i++) {\n                    var htmlInfo = htmlInfos[i];\n                    if (htmlInfo.role === role) {\n                        if (htmlInfo.selector) {\n                            selectors[selectors.length] = htmlInfo.selector;\n                        } else {\n                            selectors[selectors.length] = tagName;  // Selectors API is not case sensitive.\n                            break;  // No need to continue adding selectors since we will match the tag itself.\n                        }\n                    }\n                }\n            }\n        });\n        return (roleToSelectorCache[role] = selectors.join(','));\n    };\n})();\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/tools/runner/audit.js":"// Copyright 2013 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar page = require('webpage').create(),\n    system = require('system'),\n    url;\n\n// disabling so we can get the document root from iframes (http -> https)\npage.settings.webSecurityEnabled = false;\n\nif (system.args.length !== 2) {\n  console.log('Usage: phantomjs audit.js URL');\n  phantom.exit();\n} else {\n  url = system.args[1];\n  page.open(url, function (status) {\n    if (status !== 'success') {\n      console.log('Failed to load the page at ' +\n        url +\n        \". Status was: \" +\n        status\n        );\n      phantom.exit();\n    } else {\n      page.evaluate(function() {\n        // if target website has an AMD loader, we need to make sure\n        // that window.axs is still available\n        if (typeof define !== 'undefined' && define.amd) {\n            define.amd = false;\n        }\n      });\n      page.injectJs('../../dist/js/axs_testing.js');\n      var report = page.evaluate(function() {\n        var results = axs.Audit.run();\n        return axs.Audit.createReport(results);\n      });\n      console.log(report);\n      phantom.exit();\n    }\n  });\n}\n","/home/travis/build/npmtest/node-npmtest-accessibility-developer-tools/node_modules/accessibility-developer-tools/src/js/externs/externs.js":"// Copyright 2012 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/** @param {Element} element */\nvar getEventListeners = function(element) { };\n\n/**\n * @type {Element}\n */\nHTMLLabelElement.prototype.control;\n\n/**\n * @type {ShadowRoot}\n */\nShadowRoot.prototype.olderShadowRoot;\n\n/**\n * Note: will be deprecated at some point; prefer shadowRoot if it exists.\n * @type {HTMLShadowElement}\n */\nHTMLElement.prototype.webkitShadowRoot;\n\n/**\n * @constructor\n * @extends {HTMLElement}\n */\nfunction HTMLSlotElement() {}\n\n/**\n * @return {?HTMLSlotElement}\n */\nElement.prototype.assignedSlot = function() {};\n\n/**\n * @return {?HTMLSlotElement}\n */\nText.prototype.assignedSlot = function() {};\n"}